
AVRGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000be  00800200  00001522  000015b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001522  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000011c  008002be  008002be  00001674  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  00001674  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001700  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  00001740  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002324  00000000  00000000  000018c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000139e  00000000  00000000  00003bec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000def  00000000  00000000  00004f8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000068c  00000000  00000000  00005d7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ae5  00000000  00000000  00006408  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000171b  00000000  00000000  00006eed  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00008608  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	48 c3       	rjmp	.+1680   	; 0x6f6 <__vector_25>
      66:	00 00       	nop
      68:	87 c3       	rjmp	.+1806   	; 0x778 <__vector_26>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	be c3       	rjmp	.+1916   	; 0x80e <__vector_36>
      92:	00 00       	nop
      94:	fd c3       	rjmp	.+2042   	; 0x890 <__vector_37>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2c c4       	rjmp	.+2136   	; 0x926 <__vector_51>
      ce:	00 00       	nop
      d0:	6b c4       	rjmp	.+2262   	; 0x9a8 <__vector_52>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	b2 c4       	rjmp	.+2404   	; 0xa3e <__vector_54>
      da:	00 00       	nop
      dc:	f1 c4       	rjmp	.+2530   	; 0xac0 <__vector_55>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e2       	ldi	r30, 0x22	; 34
      fc:	f5 e1       	ldi	r31, 0x15	; 21
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	ae 3b       	cpi	r26, 0xBE	; 190
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	23 e0       	ldi	r18, 0x03	; 3
     110:	ae eb       	ldi	r26, 0xBE	; 190
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	aa 3d       	cpi	r26, 0xDA	; 218
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	03 d0       	rcall	.+6      	; 0x126 <main>
     120:	0c 94 8f 0a 	jmp	0x151e	; 0x151e <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <main>:
	mu_run_suite(utility_tests);
	return 0;
}

int main(void)
{
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
	    init_stdio(0, 10000000L);
     12a:	40 e8       	ldi	r20, 0x80	; 128
     12c:	56 e9       	ldi	r21, 0x96	; 150
     12e:	68 e9       	ldi	r22, 0x98	; 152
     130:	70 e0       	ldi	r23, 0x00	; 0
     132:	80 e0       	ldi	r24, 0x00	; 0
     134:	a7 d1       	rcall	.+846    	; 0x484 <init_stdio>
	    sei();
     136:	78 94       	sei
	    printf("Initiating Unit Test...\n");
     138:	80 e2       	ldi	r24, 0x20	; 32
     13a:	92 e0       	ldi	r25, 0x02	; 2

int tests_run = 0; 

static char * all_tests()
{
	mu_run_suite(utility_tests);
     13c:	d8 d6       	rcall	.+3504   	; 0xeee <puts>
     13e:	33 d0       	rcall	.+102    	; 0x1a6 <utility_tests>
     140:	ec 01       	movw	r28, r24
	    init_stdio(0, 10000000L);
	    sei();
	    printf("Initiating Unit Test...\n");
		
		char *result = all_tests();
		if (result != 0) {
     142:	00 97       	sbiw	r24, 0x00	; 0
     144:	61 f0       	breq	.+24     	; 0x15e <main+0x38>
			printf("Error: %s\n", result);
     146:	df 93       	push	r29
     148:	8f 93       	push	r24
     14a:	88 e3       	ldi	r24, 0x38	; 56
     14c:	92 e0       	ldi	r25, 0x02	; 2
     14e:	9f 93       	push	r25
     150:	8f 93       	push	r24
     152:	ba d6       	rcall	.+3444   	; 0xec8 <printf>
     154:	0f 90       	pop	r0
     156:	0f 90       	pop	r0
     158:	0f 90       	pop	r0
     15a:	0f 90       	pop	r0
		}
		else {
			printf("ALL TESTS PASSED\n");
     15c:	03 c0       	rjmp	.+6      	; 0x164 <main+0x3e>
     15e:	83 e4       	ldi	r24, 0x43	; 67
     160:	92 e0       	ldi	r25, 0x02	; 2
     162:	c5 d6       	rcall	.+3466   	; 0xeee <puts>
		}
		
	printf("Tests run: %d\n", tests_run);
     164:	80 91 bf 02 	lds	r24, 0x02BF	; 0x8002bf <__data_end+0x1>
     168:	8f 93       	push	r24
     16a:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <__data_end>
     16e:	8f 93       	push	r24
     170:	84 e5       	ldi	r24, 0x54	; 84
     172:	92 e0       	ldi	r25, 0x02	; 2
     174:	9f 93       	push	r25
     176:	8f 93       	push	r24
     178:	a7 d6       	rcall	.+3406   	; 0xec8 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     17a:	9f e7       	ldi	r25, 0x7F	; 127
     17c:	24 e8       	ldi	r18, 0x84	; 132
     17e:	8e e1       	ldi	r24, 0x1E	; 30
     180:	91 50       	subi	r25, 0x01	; 1
     182:	20 40       	sbci	r18, 0x00	; 0
     184:	80 40       	sbci	r24, 0x00	; 0
     186:	e1 f7       	brne	.-8      	; 0x180 <main+0x5a>
     188:	00 c0       	rjmp	.+0      	; 0x18a <main+0x64>
     18a:	00 00       	nop
     18c:	81 e0       	ldi	r24, 0x01	; 1
     18e:	90 e0       	ldi	r25, 0x00	; 0
     190:	0f 90       	pop	r0
     192:	0f 90       	pop	r0
     194:	0f 90       	pop	r0
     196:	0f 90       	pop	r0
     198:	cd 2b       	or	r28, r29
     19a:	11 f4       	brne	.+4      	; 0x1a0 <main+0x7a>
     19c:	80 e0       	ldi	r24, 0x00	; 0
     19e:	90 e0       	ldi	r25, 0x00	; 0
	_delay_ms(1000);
	return result != 0;

	
		
}
     1a0:	df 91       	pop	r29
     1a2:	cf 91       	pop	r28
     1a4:	08 95       	ret

000001a6 <utility_tests>:
	
	return 0;
}

char * utility_tests()
{
     1a6:	ef 92       	push	r14
     1a8:	ff 92       	push	r15
     1aa:	0f 93       	push	r16
     1ac:	1f 93       	push	r17
     1ae:	cf 93       	push	r28
     1b0:	df 93       	push	r29
	int i0=0, i1=0, i2=0, i3=0, i4=0, i5=0, i6=0, i7=0;
	


	//Level is increase to 1000 and the sequence array is filled with random numbers.
	utility_t* u = utility_create();
     1b2:	be d0       	rcall	.+380    	; 0x330 <utility_create>
     1b4:	ec 01       	movw	r28, r24
	u->level = 1000;
     1b6:	88 ee       	ldi	r24, 0xE8	; 232
     1b8:	93 e0       	ldi	r25, 0x03	; 3
     1ba:	99 83       	std	Y+1, r25	; 0x01
     1bc:	88 83       	st	Y, r24
	u->sequence = calloc((u->level + 2), sizeof(int));
     1be:	62 e0       	ldi	r22, 0x02	; 2
     1c0:	70 e0       	ldi	r23, 0x00	; 0
     1c2:	8a ee       	ldi	r24, 0xEA	; 234
     1c4:	93 e0       	ldi	r25, 0x03	; 3
     1c6:	e9 d4       	rcall	.+2514   	; 0xb9a <calloc>
     1c8:	9b 83       	std	Y+3, r25	; 0x03
     1ca:	8a 83       	std	Y+2, r24	; 0x02
	generateRandomNumbers(u);
     1cc:	ce 01       	movw	r24, r28
     1ce:	e3 d0       	rcall	.+454    	; 0x396 <generateRandomNumbers>
     1d0:	28 81       	ld	r18, Y

	//int i;
	for(int i = 0; i < (u->level + 2); i++)
     1d2:	39 81       	ldd	r19, Y+1	; 0x01
     1d4:	c9 01       	movw	r24, r18
     1d6:	02 96       	adiw	r24, 0x02	; 2
     1d8:	18 16       	cp	r1, r24
     1da:	19 06       	cpc	r1, r25
     1dc:	7c f4       	brge	.+30     	; 0x1fc <utility_tests+0x56>
     1de:	ea 81       	ldd	r30, Y+2	; 0x02
	{
		int randomNumber = u->sequence[i];
     1e0:	fb 81       	ldd	r31, Y+3	; 0x03
     1e2:	9c 01       	movw	r18, r24
     1e4:	22 0f       	add	r18, r18
     1e6:	33 1f       	adc	r19, r19
     1e8:	2e 0f       	add	r18, r30
     1ea:	3f 1f       	adc	r19, r31
     1ec:	81 91       	ld	r24, Z+
     1ee:	91 91       	ld	r25, Z+
     1f0:	08 97       	sbiw	r24, 0x08	; 8
		
		if(randomNumber == 0) i0++;
     1f2:	08 f0       	brcs	.+2      	; 0x1f6 <utility_tests+0x50>
     1f4:	73 c0       	rjmp	.+230    	; 0x2dc <utility_tests+0x136>
     1f6:	e2 17       	cp	r30, r18
	u->level = 1000;
	u->sequence = calloc((u->level + 2), sizeof(int));
	generateRandomNumbers(u);

	//int i;
	for(int i = 0; i < (u->level + 2); i++)
     1f8:	f3 07       	cpc	r31, r19
     1fa:	c1 f7       	brne	.-16     	; 0x1ec <utility_tests+0x46>
	if(i6 <= 100 && i6 >= 150) test_fail = true;
	if(i7 <= 100 && i7 >= 150) test_fail = true;
	
	mu_assert("Numbers are not random", !test_fail);
	
	utility_destroy(u);	
     1fc:	ce 01       	movw	r24, r28
     1fe:	ad d0       	rcall	.+346    	; 0x35a <utility_destroy>
     200:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <__data_end>
	return 0;
}

char * utility_tests()
{
	mu_run_test(test_randomNumbers);
     204:	90 91 bf 02 	lds	r25, 0x02BF	; 0x8002bf <__data_end+0x1>
     208:	01 96       	adiw	r24, 0x01	; 1
     20a:	90 93 bf 02 	sts	0x02BF, r25	; 0x8002bf <__data_end+0x1>
     20e:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <__data_end>
	return 0;
}

static char* test_increaseLevel()
{
	utility_t* u = utility_create();
     212:	8e d0       	rcall	.+284    	; 0x330 <utility_create>
     214:	8c 01       	movw	r16, r24
     216:	f1 2c       	mov	r15, r1
	bool test_fail = false;
     218:	c2 e0       	ldi	r28, 0x02	; 2
	
	for(int i=2; i<10; i++)
     21a:	d0 e0       	ldi	r29, 0x00	; 0
	{
		increaseLevel(u);
		if(u->level != i) test_fail = true;		
     21c:	ee 24       	eor	r14, r14
     21e:	e3 94       	inc	r14
	utility_t* u = utility_create();
	bool test_fail = false;
	
	for(int i=2; i<10; i++)
	{
		increaseLevel(u);
     220:	c8 01       	movw	r24, r16
     222:	e2 d0       	rcall	.+452    	; 0x3e8 <increaseLevel>
     224:	f8 01       	movw	r30, r16
		if(u->level != i) test_fail = true;		
     226:	80 81       	ld	r24, Z
     228:	91 81       	ldd	r25, Z+1	; 0x01
     22a:	c8 17       	cp	r28, r24
     22c:	d9 07       	cpc	r29, r25
     22e:	09 f0       	breq	.+2      	; 0x232 <utility_tests+0x8c>
     230:	fe 2c       	mov	r15, r14
     232:	21 96       	adiw	r28, 0x01	; 1
static char* test_increaseLevel()
{
	utility_t* u = utility_create();
	bool test_fail = false;
	
	for(int i=2; i<10; i++)
     234:	ca 30       	cpi	r28, 0x0A	; 10
     236:	d1 05       	cpc	r29, r1
     238:	99 f7       	brne	.-26     	; 0x220 <utility_tests+0x7a>
	{
		increaseLevel(u);
		if(u->level != i) test_fail = true;		
	}
	
	mu_assert("Increase level failed", !test_fail);
     23a:	f1 10       	cpse	r15, r1
     23c:	5b c0       	rjmp	.+182    	; 0x2f4 <utility_tests+0x14e>
	utility_destroy(u);
     23e:	c8 01       	movw	r24, r16
     240:	8c d0       	rcall	.+280    	; 0x35a <utility_destroy>
     242:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <__data_end>
}

char * utility_tests()
{
	mu_run_test(test_randomNumbers);
	mu_run_test(test_increaseLevel);
     246:	90 91 bf 02 	lds	r25, 0x02BF	; 0x8002bf <__data_end+0x1>
     24a:	01 96       	adiw	r24, 0x01	; 1
     24c:	90 93 bf 02 	sts	0x02BF, r25	; 0x8002bf <__data_end+0x1>
	return 0;
}

static char* test_resetLevel()
{
	utility_t* u = utility_create();
     250:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <__data_end>
	
	increaseLevel(u);
     254:	6d d0       	rcall	.+218    	; 0x330 <utility_create>
     256:	ec 01       	movw	r28, r24
	increaseLevel(u);
     258:	c7 d0       	rcall	.+398    	; 0x3e8 <increaseLevel>
     25a:	ce 01       	movw	r24, r28
     25c:	c5 d0       	rcall	.+394    	; 0x3e8 <increaseLevel>
	increaseLevel(u);
     25e:	ce 01       	movw	r24, r28
     260:	c3 d0       	rcall	.+390    	; 0x3e8 <increaseLevel>
	//Level == 4
	
	resetLevel(u);
     262:	ce 01       	movw	r24, r28
     264:	d7 d0       	rcall	.+430    	; 0x414 <resetLevel>
     266:	88 81       	ld	r24, Y
	
	mu_assert("Reset level failed", u->level == 1);
     268:	99 81       	ldd	r25, Y+1	; 0x01
     26a:	01 97       	sbiw	r24, 0x01	; 1
     26c:	09 f0       	breq	.+2      	; 0x270 <utility_tests+0xca>
     26e:	4e c0       	rjmp	.+156    	; 0x30c <utility_tests+0x166>
     270:	ce 01       	movw	r24, r28
	utility_destroy(u);
     272:	73 d0       	rcall	.+230    	; 0x35a <utility_destroy>
     274:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <__data_end>

char * utility_tests()
{
	mu_run_test(test_randomNumbers);
	mu_run_test(test_increaseLevel);
	mu_run_test(test_resetLevel);
     278:	90 91 bf 02 	lds	r25, 0x02BF	; 0x8002bf <__data_end+0x1>
     27c:	01 96       	adiw	r24, 0x01	; 1
     27e:	90 93 bf 02 	sts	0x02BF, r25	; 0x8002bf <__data_end+0x1>
     282:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <__data_end>

static char* test_compareValues()
{
	int a = 1, b = 1;
	
	mu_assert("a != b", compareValues(a, b));
     286:	61 e0       	ldi	r22, 0x01	; 1
     288:	70 e0       	ldi	r23, 0x00	; 0
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	d7 d0       	rcall	.+430    	; 0x43e <compareValues>
     290:	88 23       	and	r24, r24
     292:	89 f0       	breq	.+34     	; 0x2b6 <utility_tests+0x110>
	
	b = 2;
	mu_assert("Reset level failed", !compareValues(a, b));
     294:	62 e0       	ldi	r22, 0x02	; 2
     296:	70 e0       	ldi	r23, 0x00	; 0
     298:	81 e0       	ldi	r24, 0x01	; 1
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	d0 d0       	rcall	.+416    	; 0x43e <compareValues>
     29e:	81 11       	cpse	r24, r1
     2a0:	0d c0       	rjmp	.+26     	; 0x2bc <utility_tests+0x116>
     2a2:	62 e0       	ldi	r22, 0x02	; 2

	a = 3;
	mu_assert("Reset level failed", !compareValues(a, b));
     2a4:	70 e0       	ldi	r23, 0x00	; 0
     2a6:	83 e0       	ldi	r24, 0x03	; 3
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	c9 d0       	rcall	.+402    	; 0x43e <compareValues>
     2ac:	81 11       	cpse	r24, r1
     2ae:	09 c0       	rjmp	.+18     	; 0x2c2 <utility_tests+0x11c>
     2b0:	80 e0       	ldi	r24, 0x00	; 0
     2b2:	90 e0       	ldi	r25, 0x00	; 0
	
	return 0;
     2b4:	08 c0       	rjmp	.+16     	; 0x2c6 <utility_tests+0x120>
     2b6:	83 e6       	ldi	r24, 0x63	; 99
     2b8:	92 e0       	ldi	r25, 0x02	; 2

static char* test_compareValues()
{
	int a = 1, b = 1;
	
	mu_assert("a != b", compareValues(a, b));
     2ba:	05 c0       	rjmp	.+10     	; 0x2c6 <utility_tests+0x120>
     2bc:	8a e6       	ldi	r24, 0x6A	; 106
     2be:	92 e0       	ldi	r25, 0x02	; 2
	
	b = 2;
	mu_assert("Reset level failed", !compareValues(a, b));
     2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <utility_tests+0x120>
     2c2:	8a e6       	ldi	r24, 0x6A	; 106
     2c4:	92 e0       	ldi	r25, 0x02	; 2

	a = 3;
	mu_assert("Reset level failed", !compareValues(a, b));
     2c6:	20 91 be 02 	lds	r18, 0x02BE	; 0x8002be <__data_end>
char * utility_tests()
{
	mu_run_test(test_randomNumbers);
	mu_run_test(test_increaseLevel);
	mu_run_test(test_resetLevel);
	mu_run_test(test_compareValues);
     2ca:	30 91 bf 02 	lds	r19, 0x02BF	; 0x8002bf <__data_end+0x1>
     2ce:	2f 5f       	subi	r18, 0xFF	; 255
     2d0:	3f 4f       	sbci	r19, 0xFF	; 255
     2d2:	30 93 bf 02 	sts	0x02BF, r19	; 0x8002bf <__data_end+0x1>
     2d6:	20 93 be 02 	sts	0x02BE, r18	; 0x8002be <__data_end>
     2da:	23 c0       	rjmp	.+70     	; 0x322 <utility_tests+0x17c>
     2dc:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <__data_end>
	return 0;
}

char * utility_tests()
{
	mu_run_test(test_randomNumbers);
     2e0:	90 91 bf 02 	lds	r25, 0x02BF	; 0x8002bf <__data_end+0x1>
     2e4:	01 96       	adiw	r24, 0x01	; 1
     2e6:	90 93 bf 02 	sts	0x02BF, r25	; 0x8002bf <__data_end+0x1>
     2ea:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <__data_end>
     2ee:	8d e7       	ldi	r24, 0x7D	; 125
     2f0:	92 e0       	ldi	r25, 0x02	; 2
		else if(randomNumber == 4) i4++;
		else if(randomNumber == 5) i5++;
		else if(randomNumber == 6) i6++;
		else if(randomNumber == 7) i7++;
		else{
			mu_assert("Random number not between 0 and 7", 0);
     2f2:	17 c0       	rjmp	.+46     	; 0x322 <utility_tests+0x17c>
     2f4:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <__data_end>
}

char * utility_tests()
{
	mu_run_test(test_randomNumbers);
	mu_run_test(test_increaseLevel);
     2f8:	90 91 bf 02 	lds	r25, 0x02BF	; 0x8002bf <__data_end+0x1>
     2fc:	01 96       	adiw	r24, 0x01	; 1
     2fe:	90 93 bf 02 	sts	0x02BF, r25	; 0x8002bf <__data_end+0x1>
     302:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <__data_end>
     306:	8f e9       	ldi	r24, 0x9F	; 159
     308:	92 e0       	ldi	r25, 0x02	; 2
	{
		increaseLevel(u);
		if(u->level != i) test_fail = true;		
	}
	
	mu_assert("Increase level failed", !test_fail);
     30a:	0b c0       	rjmp	.+22     	; 0x322 <utility_tests+0x17c>
     30c:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <__data_end>

char * utility_tests()
{
	mu_run_test(test_randomNumbers);
	mu_run_test(test_increaseLevel);
	mu_run_test(test_resetLevel);
     310:	90 91 bf 02 	lds	r25, 0x02BF	; 0x8002bf <__data_end+0x1>
     314:	01 96       	adiw	r24, 0x01	; 1
     316:	90 93 bf 02 	sts	0x02BF, r25	; 0x8002bf <__data_end+0x1>
     31a:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <__data_end>
     31e:	8a e6       	ldi	r24, 0x6A	; 106
     320:	92 e0       	ldi	r25, 0x02	; 2
	increaseLevel(u);
	//Level == 4
	
	resetLevel(u);
	
	mu_assert("Reset level failed", u->level == 1);
     322:	df 91       	pop	r29
     324:	cf 91       	pop	r28
	mu_run_test(test_randomNumbers);
	mu_run_test(test_increaseLevel);
	mu_run_test(test_resetLevel);
	mu_run_test(test_compareValues);
	return 0;
}
     326:	1f 91       	pop	r17
     328:	0f 91       	pop	r16
     32a:	ff 90       	pop	r15
     32c:	ef 90       	pop	r14
     32e:	08 95       	ret

00000330 <utility_create>:
#include <time.h> 
#include <avr/io.h>
#include <unistd.h>

utility_t* utility_create()
{	
     330:	cf 93       	push	r28
     332:	df 93       	push	r29
	utility_t* new_utility = (utility_t*)malloc(sizeof(struct utility_t));
     334:	84 e0       	ldi	r24, 0x04	; 4
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	4a d4       	rcall	.+2196   	; 0xbce <malloc>
     33a:	ec 01       	movw	r28, r24
	new_utility->level = 1;
     33c:	81 e0       	ldi	r24, 0x01	; 1
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	99 83       	std	Y+1, r25	; 0x01
     342:	88 83       	st	Y, r24
	new_utility->sequence = calloc((new_utility->level + 2), sizeof(int));
     344:	62 e0       	ldi	r22, 0x02	; 2
     346:	70 e0       	ldi	r23, 0x00	; 0
     348:	83 e0       	ldi	r24, 0x03	; 3
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	26 d4       	rcall	.+2124   	; 0xb9a <calloc>
     34e:	9b 83       	std	Y+3, r25	; 0x03
     350:	8a 83       	std	Y+2, r24	; 0x02
	return new_utility;
}
     352:	ce 01       	movw	r24, r28
     354:	df 91       	pop	r29
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <utility_destroy>:

void utility_destroy(utility_t *self)
{
	free(self);
     35a:	d1 c4       	rjmp	.+2466   	; 0xcfe <free>
     35c:	08 95       	ret

0000035e <randomNumber>:
}

int randomNumber()
{	
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
	int n = rand() % 8;
     362:	9d d5       	rcall	.+2874   	; 0xe9e <rand>
     364:	ec 01       	movw	r28, r24
     366:	c7 70       	andi	r28, 0x07	; 7
     368:	d0 78       	andi	r29, 0x80	; 128
     36a:	dd 23       	and	r29, r29
     36c:	24 f4       	brge	.+8      	; 0x376 <randomNumber+0x18>
     36e:	21 97       	sbiw	r28, 0x01	; 1
     370:	c8 6f       	ori	r28, 0xF8	; 248
     372:	df 6f       	ori	r29, 0xFF	; 255
     374:	21 96       	adiw	r28, 0x01	; 1
	printf(" %d", n);
     376:	df 93       	push	r29
     378:	cf 93       	push	r28
     37a:	89 eb       	ldi	r24, 0xB9	; 185
     37c:	92 e0       	ldi	r25, 0x02	; 2
     37e:	9f 93       	push	r25
     380:	8f 93       	push	r24
     382:	a2 d5       	rcall	.+2884   	; 0xec8 <printf>
	return n;	
     384:	0f 90       	pop	r0
     386:	0f 90       	pop	r0
     388:	0f 90       	pop	r0
     38a:	0f 90       	pop	r0
}
     38c:	8c 2f       	mov	r24, r28
     38e:	9d 2f       	mov	r25, r29
     390:	df 91       	pop	r29
     392:	cf 91       	pop	r28
     394:	08 95       	ret

00000396 <generateRandomNumbers>:

void generateRandomNumbers(utility_t *self)
{
     396:	ef 92       	push	r14
     398:	ff 92       	push	r15
     39a:	0f 93       	push	r16
     39c:	1f 93       	push	r17
     39e:	cf 93       	push	r28
     3a0:	df 93       	push	r29
     3a2:	fc 01       	movw	r30, r24
	int *sequence = self->sequence;
     3a4:	32 81       	ldd	r19, Z+2	; 0x02
     3a6:	23 81       	ldd	r18, Z+3	; 0x03
	int i;
	for(i = 0; i < (self->level + 2); i++)
     3a8:	80 81       	ld	r24, Z
     3aa:	91 81       	ldd	r25, Z+1	; 0x01
     3ac:	02 96       	adiw	r24, 0x02	; 2
     3ae:	18 16       	cp	r1, r24
     3b0:	19 06       	cpc	r1, r25
     3b2:	9c f4       	brge	.+38     	; 0x3da <generateRandomNumbers+0x44>
     3b4:	7f 01       	movw	r14, r30
     3b6:	03 2f       	mov	r16, r19
     3b8:	12 2f       	mov	r17, r18
     3ba:	c0 e0       	ldi	r28, 0x00	; 0
     3bc:	d0 e0       	ldi	r29, 0x00	; 0
	{
		sequence[i] = randomNumber();
     3be:	cf df       	rcall	.-98     	; 0x35e <randomNumber>
     3c0:	f8 01       	movw	r30, r16
     3c2:	81 93       	st	Z+, r24
     3c4:	91 93       	st	Z+, r25
     3c6:	8f 01       	movw	r16, r30

void generateRandomNumbers(utility_t *self)
{
	int *sequence = self->sequence;
	int i;
	for(i = 0; i < (self->level + 2); i++)
     3c8:	21 96       	adiw	r28, 0x01	; 1
     3ca:	f7 01       	movw	r30, r14
     3cc:	20 81       	ld	r18, Z
     3ce:	31 81       	ldd	r19, Z+1	; 0x01
     3d0:	2e 5f       	subi	r18, 0xFE	; 254
     3d2:	3f 4f       	sbci	r19, 0xFF	; 255
     3d4:	c2 17       	cp	r28, r18
     3d6:	d3 07       	cpc	r29, r19
     3d8:	94 f3       	brlt	.-28     	; 0x3be <generateRandomNumbers+0x28>
	{
		sequence[i] = randomNumber();
	}
}
     3da:	df 91       	pop	r29
     3dc:	cf 91       	pop	r28
     3de:	1f 91       	pop	r17
     3e0:	0f 91       	pop	r16
     3e2:	ff 90       	pop	r15
     3e4:	ef 90       	pop	r14
     3e6:	08 95       	ret

000003e8 <increaseLevel>:

void increaseLevel(utility_t *self)
{
     3e8:	cf 93       	push	r28
     3ea:	df 93       	push	r29
     3ec:	ec 01       	movw	r28, r24
	self->level++;
     3ee:	88 81       	ld	r24, Y
     3f0:	99 81       	ldd	r25, Y+1	; 0x01
     3f2:	01 96       	adiw	r24, 0x01	; 1
     3f4:	99 83       	std	Y+1, r25	; 0x01
     3f6:	88 83       	st	Y, r24
	free(self->sequence);
     3f8:	8a 81       	ldd	r24, Y+2	; 0x02
     3fa:	9b 81       	ldd	r25, Y+3	; 0x03
     3fc:	80 d4       	rcall	.+2304   	; 0xcfe <free>
	self->sequence = calloc((self->level + 2), sizeof(int));
     3fe:	88 81       	ld	r24, Y
     400:	99 81       	ldd	r25, Y+1	; 0x01
     402:	62 e0       	ldi	r22, 0x02	; 2
     404:	70 e0       	ldi	r23, 0x00	; 0
     406:	02 96       	adiw	r24, 0x02	; 2
     408:	c8 d3       	rcall	.+1936   	; 0xb9a <calloc>
     40a:	9b 83       	std	Y+3, r25	; 0x03
     40c:	8a 83       	std	Y+2, r24	; 0x02
}
     40e:	df 91       	pop	r29
     410:	cf 91       	pop	r28
     412:	08 95       	ret

00000414 <resetLevel>:

void resetLevel(utility_t *self)
{
     414:	cf 93       	push	r28
     416:	df 93       	push	r29
     418:	ec 01       	movw	r28, r24
	self->level = 1;
     41a:	81 e0       	ldi	r24, 0x01	; 1
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	99 83       	std	Y+1, r25	; 0x01
     420:	88 83       	st	Y, r24
	free(self->sequence);
     422:	8a 81       	ldd	r24, Y+2	; 0x02
     424:	9b 81       	ldd	r25, Y+3	; 0x03
     426:	6b d4       	rcall	.+2262   	; 0xcfe <free>
	self->sequence = calloc((self->level + 2), sizeof(int));
     428:	88 81       	ld	r24, Y
     42a:	99 81       	ldd	r25, Y+1	; 0x01
     42c:	62 e0       	ldi	r22, 0x02	; 2
     42e:	70 e0       	ldi	r23, 0x00	; 0
     430:	02 96       	adiw	r24, 0x02	; 2
     432:	b3 d3       	rcall	.+1894   	; 0xb9a <calloc>
     434:	9b 83       	std	Y+3, r25	; 0x03
     436:	8a 83       	std	Y+2, r24	; 0x02
}
     438:	df 91       	pop	r29
     43a:	cf 91       	pop	r28
     43c:	08 95       	ret

0000043e <compareValues>:

bool compareValues(int a, int b)
{
     43e:	21 e0       	ldi	r18, 0x01	; 1
     440:	86 17       	cp	r24, r22
     442:	97 07       	cpc	r25, r23
     444:	09 f0       	breq	.+2      	; 0x448 <compareValues+0xa>
     446:	20 e0       	ldi	r18, 0x00	; 0
	if(a == b)
	{
		return true;
	}
	return false;
}
     448:	82 2f       	mov	r24, r18
     44a:	08 95       	ret

0000044c <usart_getchar>:
     44c:	cf 93       	push	r28
     44e:	df 93       	push	r29
     450:	1f 92       	push	r1
     452:	cd b7       	in	r28, 0x3d	; 61
     454:	de b7       	in	r29, 0x3e	; 62
     456:	be 01       	movw	r22, r28
     458:	6f 5f       	subi	r22, 0xFF	; 255
     45a:	7f 4f       	sbci	r23, 0xFF	; 255
     45c:	83 e4       	ldi	r24, 0x43	; 67
     45e:	93 e0       	ldi	r25, 0x03	; 3
     460:	66 d0       	rcall	.+204    	; 0x52e <buffer_get_item>
     462:	81 11       	cpse	r24, r1
     464:	f8 cf       	rjmp	.-16     	; 0x456 <usart_getchar+0xa>
     466:	89 81       	ldd	r24, Y+1	; 0x01
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	0f 90       	pop	r0
     46c:	df 91       	pop	r29
     46e:	cf 91       	pop	r28
     470:	08 95       	ret

00000472 <usart_putchar>:
     472:	68 2f       	mov	r22, r24
     474:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <_com_serial_instance>
     478:	90 91 c7 03 	lds	r25, 0x03C7	; 0x8003c7 <_com_serial_instance+0x1>
     47c:	24 d1       	rcall	.+584    	; 0x6c6 <serial_send_byte>
     47e:	80 e0       	ldi	r24, 0x00	; 0
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	08 95       	ret

00000484 <init_stdio>:
     484:	4f 92       	push	r4
     486:	5f 92       	push	r5
     488:	6f 92       	push	r6
     48a:	7f 92       	push	r7
     48c:	8f 92       	push	r8
     48e:	9f 92       	push	r9
     490:	af 92       	push	r10
     492:	cf 92       	push	r12
     494:	ef 92       	push	r14
     496:	0f 93       	push	r16
     498:	1f 93       	push	r17
     49a:	cf 93       	push	r28
     49c:	c8 2f       	mov	r28, r24
     49e:	2a 01       	movw	r4, r20
     4a0:	3b 01       	movw	r6, r22
     4a2:	83 e4       	ldi	r24, 0x43	; 67
     4a4:	93 e0       	ldi	r25, 0x03	; 3
     4a6:	3a d0       	rcall	.+116    	; 0x51c <buffer_init>
     4a8:	80 ec       	ldi	r24, 0xC0	; 192
     4aa:	92 e0       	ldi	r25, 0x02	; 2
     4ac:	37 d0       	rcall	.+110    	; 0x51c <buffer_init>
     4ae:	1f 92       	push	r1
     4b0:	1f 92       	push	r1
     4b2:	80 ec       	ldi	r24, 0xC0	; 192
     4b4:	92 e0       	ldi	r25, 0x02	; 2
     4b6:	9f 93       	push	r25
     4b8:	8f 93       	push	r24
     4ba:	0f 2e       	mov	r0, r31
     4bc:	f3 e4       	ldi	r31, 0x43	; 67
     4be:	8f 2e       	mov	r8, r31
     4c0:	f3 e0       	ldi	r31, 0x03	; 3
     4c2:	9f 2e       	mov	r9, r31
     4c4:	f0 2d       	mov	r31, r0
     4c6:	a1 2c       	mov	r10, r1
     4c8:	c1 2c       	mov	r12, r1
     4ca:	0f 2e       	mov	r0, r31
     4cc:	f3 e0       	ldi	r31, 0x03	; 3
     4ce:	ef 2e       	mov	r14, r31
     4d0:	f0 2d       	mov	r31, r0
     4d2:	00 e0       	ldi	r16, 0x00	; 0
     4d4:	11 ee       	ldi	r17, 0xE1	; 225
     4d6:	20 e0       	ldi	r18, 0x00	; 0
     4d8:	30 e0       	ldi	r19, 0x00	; 0
     4da:	b3 01       	movw	r22, r6
     4dc:	a2 01       	movw	r20, r4
     4de:	8c 2f       	mov	r24, r28
     4e0:	70 d0       	rcall	.+224    	; 0x5c2 <serial_new_instance>
     4e2:	90 93 c7 03 	sts	0x03C7, r25	; 0x8003c7 <_com_serial_instance+0x1>
     4e6:	80 93 c6 03 	sts	0x03C6, r24	; 0x8003c6 <_com_serial_instance>
     4ea:	e4 ed       	ldi	r30, 0xD4	; 212
     4ec:	f3 e0       	ldi	r31, 0x03	; 3
     4ee:	8a e0       	ldi	r24, 0x0A	; 10
     4f0:	92 e0       	ldi	r25, 0x02	; 2
     4f2:	91 83       	std	Z+1, r25	; 0x01
     4f4:	80 83       	st	Z, r24
     4f6:	93 83       	std	Z+3, r25	; 0x03
     4f8:	82 83       	std	Z+2, r24	; 0x02
     4fa:	0f 90       	pop	r0
     4fc:	0f 90       	pop	r0
     4fe:	0f 90       	pop	r0
     500:	0f 90       	pop	r0
     502:	cf 91       	pop	r28
     504:	1f 91       	pop	r17
     506:	0f 91       	pop	r16
     508:	ef 90       	pop	r14
     50a:	cf 90       	pop	r12
     50c:	af 90       	pop	r10
     50e:	9f 90       	pop	r9
     510:	8f 90       	pop	r8
     512:	7f 90       	pop	r7
     514:	6f 90       	pop	r6
     516:	5f 90       	pop	r5
     518:	4f 90       	pop	r4
     51a:	08 95       	ret

0000051c <buffer_init>:
     51c:	fc 01       	movw	r30, r24
     51e:	e0 58       	subi	r30, 0x80	; 128
     520:	ff 4f       	sbci	r31, 0xFF	; 255
     522:	10 82       	st	Z, r1
     524:	31 96       	adiw	r30, 0x01	; 1
     526:	10 82       	st	Z, r1
     528:	31 96       	adiw	r30, 0x01	; 1
     52a:	10 82       	st	Z, r1
     52c:	08 95       	ret

0000052e <buffer_get_item>:
     52e:	fc 01       	movw	r30, r24
     530:	ee 57       	subi	r30, 0x7E	; 126
     532:	ff 4f       	sbci	r31, 0xFF	; 255
     534:	20 81       	ld	r18, Z
     536:	22 23       	and	r18, r18
     538:	f9 f0       	breq	.+62     	; 0x578 <buffer_get_item+0x4a>
     53a:	31 97       	sbiw	r30, 0x01	; 1
     53c:	20 81       	ld	r18, Z
     53e:	dc 01       	movw	r26, r24
     540:	a2 0f       	add	r26, r18
     542:	b1 1d       	adc	r27, r1
     544:	2c 91       	ld	r18, X
     546:	db 01       	movw	r26, r22
     548:	2c 93       	st	X, r18
     54a:	20 81       	ld	r18, Z
     54c:	30 e0       	ldi	r19, 0x00	; 0
     54e:	2f 5f       	subi	r18, 0xFF	; 255
     550:	3f 4f       	sbci	r19, 0xFF	; 255
     552:	2f 77       	andi	r18, 0x7F	; 127
     554:	30 78       	andi	r19, 0x80	; 128
     556:	33 23       	and	r19, r19
     558:	34 f4       	brge	.+12     	; 0x566 <buffer_get_item+0x38>
     55a:	21 50       	subi	r18, 0x01	; 1
     55c:	31 09       	sbc	r19, r1
     55e:	20 68       	ori	r18, 0x80	; 128
     560:	3f 6f       	ori	r19, 0xFF	; 255
     562:	2f 5f       	subi	r18, 0xFF	; 255
     564:	3f 4f       	sbci	r19, 0xFF	; 255
     566:	20 83       	st	Z, r18
     568:	fc 01       	movw	r30, r24
     56a:	ee 57       	subi	r30, 0x7E	; 126
     56c:	ff 4f       	sbci	r31, 0xFF	; 255
     56e:	80 81       	ld	r24, Z
     570:	81 50       	subi	r24, 0x01	; 1
     572:	80 83       	st	Z, r24
     574:	80 e0       	ldi	r24, 0x00	; 0
     576:	08 95       	ret
     578:	81 e0       	ldi	r24, 0x01	; 1
     57a:	08 95       	ret

0000057c <buffer_put_item>:
     57c:	fc 01       	movw	r30, r24
     57e:	ee 57       	subi	r30, 0x7E	; 126
     580:	ff 4f       	sbci	r31, 0xFF	; 255
     582:	40 81       	ld	r20, Z
     584:	44 23       	and	r20, r20
     586:	dc f0       	brlt	.+54     	; 0x5be <buffer_put_item+0x42>
     588:	32 97       	sbiw	r30, 0x02	; 2
     58a:	20 81       	ld	r18, Z
     58c:	30 e0       	ldi	r19, 0x00	; 0
     58e:	dc 01       	movw	r26, r24
     590:	a2 0f       	add	r26, r18
     592:	b3 1f       	adc	r27, r19
     594:	6c 93       	st	X, r22
     596:	2f 5f       	subi	r18, 0xFF	; 255
     598:	3f 4f       	sbci	r19, 0xFF	; 255
     59a:	2f 77       	andi	r18, 0x7F	; 127
     59c:	30 78       	andi	r19, 0x80	; 128
     59e:	33 23       	and	r19, r19
     5a0:	34 f4       	brge	.+12     	; 0x5ae <buffer_put_item+0x32>
     5a2:	21 50       	subi	r18, 0x01	; 1
     5a4:	31 09       	sbc	r19, r1
     5a6:	20 68       	ori	r18, 0x80	; 128
     5a8:	3f 6f       	ori	r19, 0xFF	; 255
     5aa:	2f 5f       	subi	r18, 0xFF	; 255
     5ac:	3f 4f       	sbci	r19, 0xFF	; 255
     5ae:	20 83       	st	Z, r18
     5b0:	fc 01       	movw	r30, r24
     5b2:	ee 57       	subi	r30, 0x7E	; 126
     5b4:	ff 4f       	sbci	r31, 0xFF	; 255
     5b6:	4f 5f       	subi	r20, 0xFF	; 255
     5b8:	40 83       	st	Z, r20
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	08 95       	ret
     5be:	82 e0       	ldi	r24, 0x02	; 2
     5c0:	08 95       	ret

000005c2 <serial_new_instance>:
     5c2:	4f 92       	push	r4
     5c4:	5f 92       	push	r5
     5c6:	6f 92       	push	r6
     5c8:	7f 92       	push	r7
     5ca:	8f 92       	push	r8
     5cc:	9f 92       	push	r9
     5ce:	df 92       	push	r13
     5d0:	ef 92       	push	r14
     5d2:	ff 92       	push	r15
     5d4:	0f 93       	push	r16
     5d6:	1f 93       	push	r17
     5d8:	cf 93       	push	r28
     5da:	df 93       	push	r29
     5dc:	00 d0       	rcall	.+0      	; 0x5de <serial_new_instance+0x1c>
     5de:	1f 92       	push	r1
     5e0:	cd b7       	in	r28, 0x3d	; 61
     5e2:	de b7       	in	r29, 0x3e	; 62
     5e4:	d8 2e       	mov	r13, r24
     5e6:	49 83       	std	Y+1, r20	; 0x01
     5e8:	5a 83       	std	Y+2, r21	; 0x02
     5ea:	6b 83       	std	Y+3, r22	; 0x03
     5ec:	7c 83       	std	Y+4, r23	; 0x04
     5ee:	28 01       	movw	r4, r16
     5f0:	39 01       	movw	r6, r18
     5f2:	88 e0       	ldi	r24, 0x08	; 8
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	eb d2       	rcall	.+1494   	; 0xbce <malloc>
     5f8:	7c 01       	movw	r14, r24
     5fa:	8d 2d       	mov	r24, r13
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	88 0f       	add	r24, r24
     600:	99 1f       	adc	r25, r25
     602:	fc 01       	movw	r30, r24
     604:	e8 53       	subi	r30, 0x38	; 56
     606:	fc 4f       	sbci	r31, 0xFC	; 252
     608:	f1 82       	std	Z+1, r15	; 0x01
     60a:	e0 82       	st	Z, r14
     60c:	fc 01       	movw	r30, r24
     60e:	e8 5e       	subi	r30, 0xE8	; 232
     610:	fd 4f       	sbci	r31, 0xFD	; 253
     612:	80 81       	ld	r24, Z
     614:	91 81       	ldd	r25, Z+1	; 0x01
     616:	d7 01       	movw	r26, r14
     618:	11 96       	adiw	r26, 0x01	; 1
     61a:	9c 93       	st	X, r25
     61c:	8e 93       	st	-X, r24
     61e:	8d 89       	ldd	r24, Y+21	; 0x15
     620:	9e 89       	ldd	r25, Y+22	; 0x16
     622:	13 96       	adiw	r26, 0x03	; 3
     624:	9c 93       	st	X, r25
     626:	8e 93       	st	-X, r24
     628:	12 97       	sbiw	r26, 0x02	; 2
     62a:	15 96       	adiw	r26, 0x05	; 5
     62c:	9c 92       	st	X, r9
     62e:	8e 92       	st	-X, r8
     630:	14 97       	sbiw	r26, 0x04	; 4
     632:	8f 89       	ldd	r24, Y+23	; 0x17
     634:	98 8d       	ldd	r25, Y+24	; 0x18
     636:	17 96       	adiw	r26, 0x07	; 7
     638:	9c 93       	st	X, r25
     63a:	8e 93       	st	-X, r24
     63c:	16 97       	sbiw	r26, 0x06	; 6
     63e:	df b6       	in	r13, 0x3f	; 63
     640:	f8 94       	cli
     642:	ed 91       	ld	r30, X+
     644:	fc 91       	ld	r31, X
     646:	11 97       	sbiw	r26, 0x01	; 1
     648:	36 97       	sbiw	r30, 0x06	; 6
     64a:	80 81       	ld	r24, Z
     64c:	82 60       	ori	r24, 0x02	; 2
     64e:	80 83       	st	Z, r24
     650:	8d 90       	ld	r8, X+
     652:	9c 90       	ld	r9, X
     654:	d3 01       	movw	r26, r6
     656:	c2 01       	movw	r24, r4
     658:	88 0f       	add	r24, r24
     65a:	99 1f       	adc	r25, r25
     65c:	aa 1f       	adc	r26, r26
     65e:	bb 1f       	adc	r27, r27
     660:	88 0f       	add	r24, r24
     662:	99 1f       	adc	r25, r25
     664:	aa 1f       	adc	r26, r26
     666:	bb 1f       	adc	r27, r27
     668:	9c 01       	movw	r18, r24
     66a:	ad 01       	movw	r20, r26
     66c:	22 0f       	add	r18, r18
     66e:	33 1f       	adc	r19, r19
     670:	44 1f       	adc	r20, r20
     672:	55 1f       	adc	r21, r21
     674:	69 81       	ldd	r22, Y+1	; 0x01
     676:	7a 81       	ldd	r23, Y+2	; 0x02
     678:	8b 81       	ldd	r24, Y+3	; 0x03
     67a:	9c 81       	ldd	r25, Y+4	; 0x04
     67c:	6c d2       	rcall	.+1240   	; 0xb56 <__udivmodsi4>
     67e:	21 50       	subi	r18, 0x01	; 1
     680:	f4 01       	movw	r30, r8
     682:	32 97       	sbiw	r30, 0x02	; 2
     684:	20 83       	st	Z, r18
     686:	d7 01       	movw	r26, r14
     688:	ed 91       	ld	r30, X+
     68a:	fc 91       	ld	r31, X
     68c:	11 97       	sbiw	r26, 0x01	; 1
     68e:	35 97       	sbiw	r30, 0x05	; 5
     690:	88 e9       	ldi	r24, 0x98	; 152
     692:	80 83       	st	Z, r24
     694:	ed 91       	ld	r30, X+
     696:	fc 91       	ld	r31, X
     698:	34 97       	sbiw	r30, 0x04	; 4
     69a:	86 e0       	ldi	r24, 0x06	; 6
     69c:	80 83       	st	Z, r24
     69e:	df be       	out	0x3f, r13	; 63
     6a0:	c7 01       	movw	r24, r14
     6a2:	0f 90       	pop	r0
     6a4:	0f 90       	pop	r0
     6a6:	0f 90       	pop	r0
     6a8:	0f 90       	pop	r0
     6aa:	df 91       	pop	r29
     6ac:	cf 91       	pop	r28
     6ae:	1f 91       	pop	r17
     6b0:	0f 91       	pop	r16
     6b2:	ff 90       	pop	r15
     6b4:	ef 90       	pop	r14
     6b6:	df 90       	pop	r13
     6b8:	9f 90       	pop	r9
     6ba:	8f 90       	pop	r8
     6bc:	7f 90       	pop	r7
     6be:	6f 90       	pop	r6
     6c0:	5f 90       	pop	r5
     6c2:	4f 90       	pop	r4
     6c4:	08 95       	ret

000006c6 <serial_send_byte>:
     6c6:	cf 93       	push	r28
     6c8:	df 93       	push	r29
     6ca:	fc 01       	movw	r30, r24
     6cc:	82 81       	ldd	r24, Z+2	; 0x02
     6ce:	93 81       	ldd	r25, Z+3	; 0x03
     6d0:	00 97       	sbiw	r24, 0x00	; 0
     6d2:	59 f0       	breq	.+22     	; 0x6ea <serial_send_byte+0x24>
     6d4:	ef 01       	movw	r28, r30
     6d6:	52 df       	rcall	.-348    	; 0x57c <buffer_put_item>
     6d8:	81 11       	cpse	r24, r1
     6da:	09 c0       	rjmp	.+18     	; 0x6ee <serial_send_byte+0x28>
     6dc:	e8 81       	ld	r30, Y
     6de:	f9 81       	ldd	r31, Y+1	; 0x01
     6e0:	35 97       	sbiw	r30, 0x05	; 5
     6e2:	90 81       	ld	r25, Z
     6e4:	90 62       	ori	r25, 0x20	; 32
     6e6:	90 83       	st	Z, r25
     6e8:	03 c0       	rjmp	.+6      	; 0x6f0 <serial_send_byte+0x2a>
     6ea:	82 e0       	ldi	r24, 0x02	; 2
     6ec:	01 c0       	rjmp	.+2      	; 0x6f0 <serial_send_byte+0x2a>
     6ee:	82 e0       	ldi	r24, 0x02	; 2
     6f0:	df 91       	pop	r29
     6f2:	cf 91       	pop	r28
     6f4:	08 95       	ret

000006f6 <__vector_25>:
     6f6:	1f 92       	push	r1
     6f8:	0f 92       	push	r0
     6fa:	0f b6       	in	r0, 0x3f	; 63
     6fc:	0f 92       	push	r0
     6fe:	11 24       	eor	r1, r1
     700:	0b b6       	in	r0, 0x3b	; 59
     702:	0f 92       	push	r0
     704:	2f 93       	push	r18
     706:	3f 93       	push	r19
     708:	4f 93       	push	r20
     70a:	5f 93       	push	r21
     70c:	6f 93       	push	r22
     70e:	7f 93       	push	r23
     710:	8f 93       	push	r24
     712:	9f 93       	push	r25
     714:	af 93       	push	r26
     716:	bf 93       	push	r27
     718:	cf 93       	push	r28
     71a:	ef 93       	push	r30
     71c:	ff 93       	push	r31
     71e:	e0 91 c8 03 	lds	r30, 0x03C8	; 0x8003c8 <_ser_handle>
     722:	f0 91 c9 03 	lds	r31, 0x03C9	; 0x8003c9 <_ser_handle+0x1>
     726:	30 97       	sbiw	r30, 0x00	; 0
     728:	99 f0       	breq	.+38     	; 0x750 <__vector_25+0x5a>
     72a:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     72e:	6c 2f       	mov	r22, r28
     730:	84 81       	ldd	r24, Z+4	; 0x04
     732:	95 81       	ldd	r25, Z+5	; 0x05
     734:	23 df       	rcall	.-442    	; 0x57c <buffer_put_item>
     736:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <_ser_handle>
     73a:	90 91 c9 03 	lds	r25, 0x03C9	; 0x8003c9 <_ser_handle+0x1>
     73e:	dc 01       	movw	r26, r24
     740:	16 96       	adiw	r26, 0x06	; 6
     742:	ed 91       	ld	r30, X+
     744:	fc 91       	ld	r31, X
     746:	17 97       	sbiw	r26, 0x07	; 7
     748:	30 97       	sbiw	r30, 0x00	; 0
     74a:	11 f0       	breq	.+4      	; 0x750 <__vector_25+0x5a>
     74c:	6c 2f       	mov	r22, r28
     74e:	19 95       	eicall
     750:	ff 91       	pop	r31
     752:	ef 91       	pop	r30
     754:	cf 91       	pop	r28
     756:	bf 91       	pop	r27
     758:	af 91       	pop	r26
     75a:	9f 91       	pop	r25
     75c:	8f 91       	pop	r24
     75e:	7f 91       	pop	r23
     760:	6f 91       	pop	r22
     762:	5f 91       	pop	r21
     764:	4f 91       	pop	r20
     766:	3f 91       	pop	r19
     768:	2f 91       	pop	r18
     76a:	0f 90       	pop	r0
     76c:	0b be       	out	0x3b, r0	; 59
     76e:	0f 90       	pop	r0
     770:	0f be       	out	0x3f, r0	; 63
     772:	0f 90       	pop	r0
     774:	1f 90       	pop	r1
     776:	18 95       	reti

00000778 <__vector_26>:
     778:	1f 92       	push	r1
     77a:	0f 92       	push	r0
     77c:	0f b6       	in	r0, 0x3f	; 63
     77e:	0f 92       	push	r0
     780:	11 24       	eor	r1, r1
     782:	0b b6       	in	r0, 0x3b	; 59
     784:	0f 92       	push	r0
     786:	2f 93       	push	r18
     788:	3f 93       	push	r19
     78a:	4f 93       	push	r20
     78c:	5f 93       	push	r21
     78e:	6f 93       	push	r22
     790:	7f 93       	push	r23
     792:	8f 93       	push	r24
     794:	9f 93       	push	r25
     796:	af 93       	push	r26
     798:	bf 93       	push	r27
     79a:	ef 93       	push	r30
     79c:	ff 93       	push	r31
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
     7a2:	1f 92       	push	r1
     7a4:	cd b7       	in	r28, 0x3d	; 61
     7a6:	de b7       	in	r29, 0x3e	; 62
     7a8:	e0 91 c8 03 	lds	r30, 0x03C8	; 0x8003c8 <_ser_handle>
     7ac:	f0 91 c9 03 	lds	r31, 0x03C9	; 0x8003c9 <_ser_handle+0x1>
     7b0:	30 97       	sbiw	r30, 0x00	; 0
     7b2:	91 f0       	breq	.+36     	; 0x7d8 <__vector_26+0x60>
     7b4:	be 01       	movw	r22, r28
     7b6:	6f 5f       	subi	r22, 0xFF	; 255
     7b8:	7f 4f       	sbci	r23, 0xFF	; 255
     7ba:	82 81       	ldd	r24, Z+2	; 0x02
     7bc:	93 81       	ldd	r25, Z+3	; 0x03
     7be:	b7 de       	rcall	.-658    	; 0x52e <buffer_get_item>
     7c0:	81 11       	cpse	r24, r1
     7c2:	04 c0       	rjmp	.+8      	; 0x7cc <__vector_26+0x54>
     7c4:	89 81       	ldd	r24, Y+1	; 0x01
     7c6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     7ca:	0b c0       	rjmp	.+22     	; 0x7e2 <__vector_26+0x6a>
     7cc:	e1 ec       	ldi	r30, 0xC1	; 193
     7ce:	f0 e0       	ldi	r31, 0x00	; 0
     7d0:	80 81       	ld	r24, Z
     7d2:	8f 7d       	andi	r24, 0xDF	; 223
     7d4:	80 83       	st	Z, r24
     7d6:	05 c0       	rjmp	.+10     	; 0x7e2 <__vector_26+0x6a>
     7d8:	e1 ec       	ldi	r30, 0xC1	; 193
     7da:	f0 e0       	ldi	r31, 0x00	; 0
     7dc:	80 81       	ld	r24, Z
     7de:	8f 7d       	andi	r24, 0xDF	; 223
     7e0:	80 83       	st	Z, r24
     7e2:	0f 90       	pop	r0
     7e4:	df 91       	pop	r29
     7e6:	cf 91       	pop	r28
     7e8:	ff 91       	pop	r31
     7ea:	ef 91       	pop	r30
     7ec:	bf 91       	pop	r27
     7ee:	af 91       	pop	r26
     7f0:	9f 91       	pop	r25
     7f2:	8f 91       	pop	r24
     7f4:	7f 91       	pop	r23
     7f6:	6f 91       	pop	r22
     7f8:	5f 91       	pop	r21
     7fa:	4f 91       	pop	r20
     7fc:	3f 91       	pop	r19
     7fe:	2f 91       	pop	r18
     800:	0f 90       	pop	r0
     802:	0b be       	out	0x3b, r0	; 59
     804:	0f 90       	pop	r0
     806:	0f be       	out	0x3f, r0	; 63
     808:	0f 90       	pop	r0
     80a:	1f 90       	pop	r1
     80c:	18 95       	reti

0000080e <__vector_36>:
     80e:	1f 92       	push	r1
     810:	0f 92       	push	r0
     812:	0f b6       	in	r0, 0x3f	; 63
     814:	0f 92       	push	r0
     816:	11 24       	eor	r1, r1
     818:	0b b6       	in	r0, 0x3b	; 59
     81a:	0f 92       	push	r0
     81c:	2f 93       	push	r18
     81e:	3f 93       	push	r19
     820:	4f 93       	push	r20
     822:	5f 93       	push	r21
     824:	6f 93       	push	r22
     826:	7f 93       	push	r23
     828:	8f 93       	push	r24
     82a:	9f 93       	push	r25
     82c:	af 93       	push	r26
     82e:	bf 93       	push	r27
     830:	cf 93       	push	r28
     832:	ef 93       	push	r30
     834:	ff 93       	push	r31
     836:	e0 91 ca 03 	lds	r30, 0x03CA	; 0x8003ca <_ser_handle+0x2>
     83a:	f0 91 cb 03 	lds	r31, 0x03CB	; 0x8003cb <_ser_handle+0x3>
     83e:	30 97       	sbiw	r30, 0x00	; 0
     840:	99 f0       	breq	.+38     	; 0x868 <__vector_36+0x5a>
     842:	c0 91 ce 00 	lds	r28, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     846:	6c 2f       	mov	r22, r28
     848:	84 81       	ldd	r24, Z+4	; 0x04
     84a:	95 81       	ldd	r25, Z+5	; 0x05
     84c:	97 de       	rcall	.-722    	; 0x57c <buffer_put_item>
     84e:	80 91 ca 03 	lds	r24, 0x03CA	; 0x8003ca <_ser_handle+0x2>
     852:	90 91 cb 03 	lds	r25, 0x03CB	; 0x8003cb <_ser_handle+0x3>
     856:	dc 01       	movw	r26, r24
     858:	16 96       	adiw	r26, 0x06	; 6
     85a:	ed 91       	ld	r30, X+
     85c:	fc 91       	ld	r31, X
     85e:	17 97       	sbiw	r26, 0x07	; 7
     860:	30 97       	sbiw	r30, 0x00	; 0
     862:	11 f0       	breq	.+4      	; 0x868 <__vector_36+0x5a>
     864:	6c 2f       	mov	r22, r28
     866:	19 95       	eicall
     868:	ff 91       	pop	r31
     86a:	ef 91       	pop	r30
     86c:	cf 91       	pop	r28
     86e:	bf 91       	pop	r27
     870:	af 91       	pop	r26
     872:	9f 91       	pop	r25
     874:	8f 91       	pop	r24
     876:	7f 91       	pop	r23
     878:	6f 91       	pop	r22
     87a:	5f 91       	pop	r21
     87c:	4f 91       	pop	r20
     87e:	3f 91       	pop	r19
     880:	2f 91       	pop	r18
     882:	0f 90       	pop	r0
     884:	0b be       	out	0x3b, r0	; 59
     886:	0f 90       	pop	r0
     888:	0f be       	out	0x3f, r0	; 63
     88a:	0f 90       	pop	r0
     88c:	1f 90       	pop	r1
     88e:	18 95       	reti

00000890 <__vector_37>:
     890:	1f 92       	push	r1
     892:	0f 92       	push	r0
     894:	0f b6       	in	r0, 0x3f	; 63
     896:	0f 92       	push	r0
     898:	11 24       	eor	r1, r1
     89a:	0b b6       	in	r0, 0x3b	; 59
     89c:	0f 92       	push	r0
     89e:	2f 93       	push	r18
     8a0:	3f 93       	push	r19
     8a2:	4f 93       	push	r20
     8a4:	5f 93       	push	r21
     8a6:	6f 93       	push	r22
     8a8:	7f 93       	push	r23
     8aa:	8f 93       	push	r24
     8ac:	9f 93       	push	r25
     8ae:	af 93       	push	r26
     8b0:	bf 93       	push	r27
     8b2:	ef 93       	push	r30
     8b4:	ff 93       	push	r31
     8b6:	cf 93       	push	r28
     8b8:	df 93       	push	r29
     8ba:	1f 92       	push	r1
     8bc:	cd b7       	in	r28, 0x3d	; 61
     8be:	de b7       	in	r29, 0x3e	; 62
     8c0:	e0 91 ca 03 	lds	r30, 0x03CA	; 0x8003ca <_ser_handle+0x2>
     8c4:	f0 91 cb 03 	lds	r31, 0x03CB	; 0x8003cb <_ser_handle+0x3>
     8c8:	30 97       	sbiw	r30, 0x00	; 0
     8ca:	91 f0       	breq	.+36     	; 0x8f0 <__vector_37+0x60>
     8cc:	be 01       	movw	r22, r28
     8ce:	6f 5f       	subi	r22, 0xFF	; 255
     8d0:	7f 4f       	sbci	r23, 0xFF	; 255
     8d2:	82 81       	ldd	r24, Z+2	; 0x02
     8d4:	93 81       	ldd	r25, Z+3	; 0x03
     8d6:	2b de       	rcall	.-938    	; 0x52e <buffer_get_item>
     8d8:	81 11       	cpse	r24, r1
     8da:	04 c0       	rjmp	.+8      	; 0x8e4 <__vector_37+0x54>
     8dc:	89 81       	ldd	r24, Y+1	; 0x01
     8de:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     8e2:	0b c0       	rjmp	.+22     	; 0x8fa <__vector_37+0x6a>
     8e4:	e9 ec       	ldi	r30, 0xC9	; 201
     8e6:	f0 e0       	ldi	r31, 0x00	; 0
     8e8:	80 81       	ld	r24, Z
     8ea:	8f 7d       	andi	r24, 0xDF	; 223
     8ec:	80 83       	st	Z, r24
     8ee:	05 c0       	rjmp	.+10     	; 0x8fa <__vector_37+0x6a>
     8f0:	e9 ec       	ldi	r30, 0xC9	; 201
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	80 81       	ld	r24, Z
     8f6:	8f 7d       	andi	r24, 0xDF	; 223
     8f8:	80 83       	st	Z, r24
     8fa:	0f 90       	pop	r0
     8fc:	df 91       	pop	r29
     8fe:	cf 91       	pop	r28
     900:	ff 91       	pop	r31
     902:	ef 91       	pop	r30
     904:	bf 91       	pop	r27
     906:	af 91       	pop	r26
     908:	9f 91       	pop	r25
     90a:	8f 91       	pop	r24
     90c:	7f 91       	pop	r23
     90e:	6f 91       	pop	r22
     910:	5f 91       	pop	r21
     912:	4f 91       	pop	r20
     914:	3f 91       	pop	r19
     916:	2f 91       	pop	r18
     918:	0f 90       	pop	r0
     91a:	0b be       	out	0x3b, r0	; 59
     91c:	0f 90       	pop	r0
     91e:	0f be       	out	0x3f, r0	; 63
     920:	0f 90       	pop	r0
     922:	1f 90       	pop	r1
     924:	18 95       	reti

00000926 <__vector_51>:
     926:	1f 92       	push	r1
     928:	0f 92       	push	r0
     92a:	0f b6       	in	r0, 0x3f	; 63
     92c:	0f 92       	push	r0
     92e:	11 24       	eor	r1, r1
     930:	0b b6       	in	r0, 0x3b	; 59
     932:	0f 92       	push	r0
     934:	2f 93       	push	r18
     936:	3f 93       	push	r19
     938:	4f 93       	push	r20
     93a:	5f 93       	push	r21
     93c:	6f 93       	push	r22
     93e:	7f 93       	push	r23
     940:	8f 93       	push	r24
     942:	9f 93       	push	r25
     944:	af 93       	push	r26
     946:	bf 93       	push	r27
     948:	cf 93       	push	r28
     94a:	ef 93       	push	r30
     94c:	ff 93       	push	r31
     94e:	e0 91 cc 03 	lds	r30, 0x03CC	; 0x8003cc <_ser_handle+0x4>
     952:	f0 91 cd 03 	lds	r31, 0x03CD	; 0x8003cd <_ser_handle+0x5>
     956:	30 97       	sbiw	r30, 0x00	; 0
     958:	99 f0       	breq	.+38     	; 0x980 <__vector_51+0x5a>
     95a:	c0 91 d6 00 	lds	r28, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     95e:	6c 2f       	mov	r22, r28
     960:	84 81       	ldd	r24, Z+4	; 0x04
     962:	95 81       	ldd	r25, Z+5	; 0x05
     964:	0b de       	rcall	.-1002   	; 0x57c <buffer_put_item>
     966:	80 91 cc 03 	lds	r24, 0x03CC	; 0x8003cc <_ser_handle+0x4>
     96a:	90 91 cd 03 	lds	r25, 0x03CD	; 0x8003cd <_ser_handle+0x5>
     96e:	dc 01       	movw	r26, r24
     970:	16 96       	adiw	r26, 0x06	; 6
     972:	ed 91       	ld	r30, X+
     974:	fc 91       	ld	r31, X
     976:	17 97       	sbiw	r26, 0x07	; 7
     978:	30 97       	sbiw	r30, 0x00	; 0
     97a:	11 f0       	breq	.+4      	; 0x980 <__vector_51+0x5a>
     97c:	6c 2f       	mov	r22, r28
     97e:	19 95       	eicall
     980:	ff 91       	pop	r31
     982:	ef 91       	pop	r30
     984:	cf 91       	pop	r28
     986:	bf 91       	pop	r27
     988:	af 91       	pop	r26
     98a:	9f 91       	pop	r25
     98c:	8f 91       	pop	r24
     98e:	7f 91       	pop	r23
     990:	6f 91       	pop	r22
     992:	5f 91       	pop	r21
     994:	4f 91       	pop	r20
     996:	3f 91       	pop	r19
     998:	2f 91       	pop	r18
     99a:	0f 90       	pop	r0
     99c:	0b be       	out	0x3b, r0	; 59
     99e:	0f 90       	pop	r0
     9a0:	0f be       	out	0x3f, r0	; 63
     9a2:	0f 90       	pop	r0
     9a4:	1f 90       	pop	r1
     9a6:	18 95       	reti

000009a8 <__vector_52>:
     9a8:	1f 92       	push	r1
     9aa:	0f 92       	push	r0
     9ac:	0f b6       	in	r0, 0x3f	; 63
     9ae:	0f 92       	push	r0
     9b0:	11 24       	eor	r1, r1
     9b2:	0b b6       	in	r0, 0x3b	; 59
     9b4:	0f 92       	push	r0
     9b6:	2f 93       	push	r18
     9b8:	3f 93       	push	r19
     9ba:	4f 93       	push	r20
     9bc:	5f 93       	push	r21
     9be:	6f 93       	push	r22
     9c0:	7f 93       	push	r23
     9c2:	8f 93       	push	r24
     9c4:	9f 93       	push	r25
     9c6:	af 93       	push	r26
     9c8:	bf 93       	push	r27
     9ca:	ef 93       	push	r30
     9cc:	ff 93       	push	r31
     9ce:	cf 93       	push	r28
     9d0:	df 93       	push	r29
     9d2:	1f 92       	push	r1
     9d4:	cd b7       	in	r28, 0x3d	; 61
     9d6:	de b7       	in	r29, 0x3e	; 62
     9d8:	e0 91 cc 03 	lds	r30, 0x03CC	; 0x8003cc <_ser_handle+0x4>
     9dc:	f0 91 cd 03 	lds	r31, 0x03CD	; 0x8003cd <_ser_handle+0x5>
     9e0:	30 97       	sbiw	r30, 0x00	; 0
     9e2:	91 f0       	breq	.+36     	; 0xa08 <__vector_52+0x60>
     9e4:	be 01       	movw	r22, r28
     9e6:	6f 5f       	subi	r22, 0xFF	; 255
     9e8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ea:	82 81       	ldd	r24, Z+2	; 0x02
     9ec:	93 81       	ldd	r25, Z+3	; 0x03
     9ee:	9f dd       	rcall	.-1218   	; 0x52e <buffer_get_item>
     9f0:	81 11       	cpse	r24, r1
     9f2:	04 c0       	rjmp	.+8      	; 0x9fc <__vector_52+0x54>
     9f4:	89 81       	ldd	r24, Y+1	; 0x01
     9f6:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     9fa:	0b c0       	rjmp	.+22     	; 0xa12 <__vector_52+0x6a>
     9fc:	e1 ed       	ldi	r30, 0xD1	; 209
     9fe:	f0 e0       	ldi	r31, 0x00	; 0
     a00:	80 81       	ld	r24, Z
     a02:	8f 7d       	andi	r24, 0xDF	; 223
     a04:	80 83       	st	Z, r24
     a06:	05 c0       	rjmp	.+10     	; 0xa12 <__vector_52+0x6a>
     a08:	e1 ed       	ldi	r30, 0xD1	; 209
     a0a:	f0 e0       	ldi	r31, 0x00	; 0
     a0c:	80 81       	ld	r24, Z
     a0e:	8f 7d       	andi	r24, 0xDF	; 223
     a10:	80 83       	st	Z, r24
     a12:	0f 90       	pop	r0
     a14:	df 91       	pop	r29
     a16:	cf 91       	pop	r28
     a18:	ff 91       	pop	r31
     a1a:	ef 91       	pop	r30
     a1c:	bf 91       	pop	r27
     a1e:	af 91       	pop	r26
     a20:	9f 91       	pop	r25
     a22:	8f 91       	pop	r24
     a24:	7f 91       	pop	r23
     a26:	6f 91       	pop	r22
     a28:	5f 91       	pop	r21
     a2a:	4f 91       	pop	r20
     a2c:	3f 91       	pop	r19
     a2e:	2f 91       	pop	r18
     a30:	0f 90       	pop	r0
     a32:	0b be       	out	0x3b, r0	; 59
     a34:	0f 90       	pop	r0
     a36:	0f be       	out	0x3f, r0	; 63
     a38:	0f 90       	pop	r0
     a3a:	1f 90       	pop	r1
     a3c:	18 95       	reti

00000a3e <__vector_54>:
     a3e:	1f 92       	push	r1
     a40:	0f 92       	push	r0
     a42:	0f b6       	in	r0, 0x3f	; 63
     a44:	0f 92       	push	r0
     a46:	11 24       	eor	r1, r1
     a48:	0b b6       	in	r0, 0x3b	; 59
     a4a:	0f 92       	push	r0
     a4c:	2f 93       	push	r18
     a4e:	3f 93       	push	r19
     a50:	4f 93       	push	r20
     a52:	5f 93       	push	r21
     a54:	6f 93       	push	r22
     a56:	7f 93       	push	r23
     a58:	8f 93       	push	r24
     a5a:	9f 93       	push	r25
     a5c:	af 93       	push	r26
     a5e:	bf 93       	push	r27
     a60:	cf 93       	push	r28
     a62:	ef 93       	push	r30
     a64:	ff 93       	push	r31
     a66:	e0 91 ce 03 	lds	r30, 0x03CE	; 0x8003ce <_ser_handle+0x6>
     a6a:	f0 91 cf 03 	lds	r31, 0x03CF	; 0x8003cf <_ser_handle+0x7>
     a6e:	30 97       	sbiw	r30, 0x00	; 0
     a70:	99 f0       	breq	.+38     	; 0xa98 <__vector_54+0x5a>
     a72:	c0 91 36 01 	lds	r28, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     a76:	6c 2f       	mov	r22, r28
     a78:	84 81       	ldd	r24, Z+4	; 0x04
     a7a:	95 81       	ldd	r25, Z+5	; 0x05
     a7c:	7f dd       	rcall	.-1282   	; 0x57c <buffer_put_item>
     a7e:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <_ser_handle+0x6>
     a82:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <_ser_handle+0x7>
     a86:	dc 01       	movw	r26, r24
     a88:	16 96       	adiw	r26, 0x06	; 6
     a8a:	ed 91       	ld	r30, X+
     a8c:	fc 91       	ld	r31, X
     a8e:	17 97       	sbiw	r26, 0x07	; 7
     a90:	30 97       	sbiw	r30, 0x00	; 0
     a92:	11 f0       	breq	.+4      	; 0xa98 <__vector_54+0x5a>
     a94:	6c 2f       	mov	r22, r28
     a96:	19 95       	eicall
     a98:	ff 91       	pop	r31
     a9a:	ef 91       	pop	r30
     a9c:	cf 91       	pop	r28
     a9e:	bf 91       	pop	r27
     aa0:	af 91       	pop	r26
     aa2:	9f 91       	pop	r25
     aa4:	8f 91       	pop	r24
     aa6:	7f 91       	pop	r23
     aa8:	6f 91       	pop	r22
     aaa:	5f 91       	pop	r21
     aac:	4f 91       	pop	r20
     aae:	3f 91       	pop	r19
     ab0:	2f 91       	pop	r18
     ab2:	0f 90       	pop	r0
     ab4:	0b be       	out	0x3b, r0	; 59
     ab6:	0f 90       	pop	r0
     ab8:	0f be       	out	0x3f, r0	; 63
     aba:	0f 90       	pop	r0
     abc:	1f 90       	pop	r1
     abe:	18 95       	reti

00000ac0 <__vector_55>:
     ac0:	1f 92       	push	r1
     ac2:	0f 92       	push	r0
     ac4:	0f b6       	in	r0, 0x3f	; 63
     ac6:	0f 92       	push	r0
     ac8:	11 24       	eor	r1, r1
     aca:	0b b6       	in	r0, 0x3b	; 59
     acc:	0f 92       	push	r0
     ace:	2f 93       	push	r18
     ad0:	3f 93       	push	r19
     ad2:	4f 93       	push	r20
     ad4:	5f 93       	push	r21
     ad6:	6f 93       	push	r22
     ad8:	7f 93       	push	r23
     ada:	8f 93       	push	r24
     adc:	9f 93       	push	r25
     ade:	af 93       	push	r26
     ae0:	bf 93       	push	r27
     ae2:	ef 93       	push	r30
     ae4:	ff 93       	push	r31
     ae6:	cf 93       	push	r28
     ae8:	df 93       	push	r29
     aea:	1f 92       	push	r1
     aec:	cd b7       	in	r28, 0x3d	; 61
     aee:	de b7       	in	r29, 0x3e	; 62
     af0:	e0 91 ce 03 	lds	r30, 0x03CE	; 0x8003ce <_ser_handle+0x6>
     af4:	f0 91 cf 03 	lds	r31, 0x03CF	; 0x8003cf <_ser_handle+0x7>
     af8:	30 97       	sbiw	r30, 0x00	; 0
     afa:	91 f0       	breq	.+36     	; 0xb20 <__vector_55+0x60>
     afc:	be 01       	movw	r22, r28
     afe:	6f 5f       	subi	r22, 0xFF	; 255
     b00:	7f 4f       	sbci	r23, 0xFF	; 255
     b02:	82 81       	ldd	r24, Z+2	; 0x02
     b04:	93 81       	ldd	r25, Z+3	; 0x03
     b06:	13 dd       	rcall	.-1498   	; 0x52e <buffer_get_item>
     b08:	81 11       	cpse	r24, r1
     b0a:	04 c0       	rjmp	.+8      	; 0xb14 <__vector_55+0x54>
     b0c:	89 81       	ldd	r24, Y+1	; 0x01
     b0e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     b12:	0b c0       	rjmp	.+22     	; 0xb2a <__vector_55+0x6a>
     b14:	e1 e3       	ldi	r30, 0x31	; 49
     b16:	f1 e0       	ldi	r31, 0x01	; 1
     b18:	80 81       	ld	r24, Z
     b1a:	8f 7d       	andi	r24, 0xDF	; 223
     b1c:	80 83       	st	Z, r24
     b1e:	05 c0       	rjmp	.+10     	; 0xb2a <__vector_55+0x6a>
     b20:	e1 e3       	ldi	r30, 0x31	; 49
     b22:	f1 e0       	ldi	r31, 0x01	; 1
     b24:	80 81       	ld	r24, Z
     b26:	8f 7d       	andi	r24, 0xDF	; 223
     b28:	80 83       	st	Z, r24
     b2a:	0f 90       	pop	r0
     b2c:	df 91       	pop	r29
     b2e:	cf 91       	pop	r28
     b30:	ff 91       	pop	r31
     b32:	ef 91       	pop	r30
     b34:	bf 91       	pop	r27
     b36:	af 91       	pop	r26
     b38:	9f 91       	pop	r25
     b3a:	8f 91       	pop	r24
     b3c:	7f 91       	pop	r23
     b3e:	6f 91       	pop	r22
     b40:	5f 91       	pop	r21
     b42:	4f 91       	pop	r20
     b44:	3f 91       	pop	r19
     b46:	2f 91       	pop	r18
     b48:	0f 90       	pop	r0
     b4a:	0b be       	out	0x3b, r0	; 59
     b4c:	0f 90       	pop	r0
     b4e:	0f be       	out	0x3f, r0	; 63
     b50:	0f 90       	pop	r0
     b52:	1f 90       	pop	r1
     b54:	18 95       	reti

00000b56 <__udivmodsi4>:
     b56:	a1 e2       	ldi	r26, 0x21	; 33
     b58:	1a 2e       	mov	r1, r26
     b5a:	aa 1b       	sub	r26, r26
     b5c:	bb 1b       	sub	r27, r27
     b5e:	fd 01       	movw	r30, r26
     b60:	0d c0       	rjmp	.+26     	; 0xb7c <__udivmodsi4_ep>

00000b62 <__udivmodsi4_loop>:
     b62:	aa 1f       	adc	r26, r26
     b64:	bb 1f       	adc	r27, r27
     b66:	ee 1f       	adc	r30, r30
     b68:	ff 1f       	adc	r31, r31
     b6a:	a2 17       	cp	r26, r18
     b6c:	b3 07       	cpc	r27, r19
     b6e:	e4 07       	cpc	r30, r20
     b70:	f5 07       	cpc	r31, r21
     b72:	20 f0       	brcs	.+8      	; 0xb7c <__udivmodsi4_ep>
     b74:	a2 1b       	sub	r26, r18
     b76:	b3 0b       	sbc	r27, r19
     b78:	e4 0b       	sbc	r30, r20
     b7a:	f5 0b       	sbc	r31, r21

00000b7c <__udivmodsi4_ep>:
     b7c:	66 1f       	adc	r22, r22
     b7e:	77 1f       	adc	r23, r23
     b80:	88 1f       	adc	r24, r24
     b82:	99 1f       	adc	r25, r25
     b84:	1a 94       	dec	r1
     b86:	69 f7       	brne	.-38     	; 0xb62 <__udivmodsi4_loop>
     b88:	60 95       	com	r22
     b8a:	70 95       	com	r23
     b8c:	80 95       	com	r24
     b8e:	90 95       	com	r25
     b90:	9b 01       	movw	r18, r22
     b92:	ac 01       	movw	r20, r24
     b94:	bd 01       	movw	r22, r26
     b96:	cf 01       	movw	r24, r30
     b98:	08 95       	ret

00000b9a <calloc>:
     b9a:	0f 93       	push	r16
     b9c:	1f 93       	push	r17
     b9e:	cf 93       	push	r28
     ba0:	df 93       	push	r29
     ba2:	86 9f       	mul	r24, r22
     ba4:	80 01       	movw	r16, r0
     ba6:	87 9f       	mul	r24, r23
     ba8:	10 0d       	add	r17, r0
     baa:	96 9f       	mul	r25, r22
     bac:	10 0d       	add	r17, r0
     bae:	11 24       	eor	r1, r1
     bb0:	c8 01       	movw	r24, r16
     bb2:	0d d0       	rcall	.+26     	; 0xbce <malloc>
     bb4:	ec 01       	movw	r28, r24
     bb6:	00 97       	sbiw	r24, 0x00	; 0
     bb8:	21 f0       	breq	.+8      	; 0xbc2 <calloc+0x28>
     bba:	a8 01       	movw	r20, r16
     bbc:	60 e0       	ldi	r22, 0x00	; 0
     bbe:	70 e0       	ldi	r23, 0x00	; 0
     bc0:	7c d1       	rcall	.+760    	; 0xeba <memset>
     bc2:	ce 01       	movw	r24, r28
     bc4:	df 91       	pop	r29
     bc6:	cf 91       	pop	r28
     bc8:	1f 91       	pop	r17
     bca:	0f 91       	pop	r16
     bcc:	08 95       	ret

00000bce <malloc>:
     bce:	0f 93       	push	r16
     bd0:	1f 93       	push	r17
     bd2:	cf 93       	push	r28
     bd4:	df 93       	push	r29
     bd6:	82 30       	cpi	r24, 0x02	; 2
     bd8:	91 05       	cpc	r25, r1
     bda:	10 f4       	brcc	.+4      	; 0xbe0 <malloc+0x12>
     bdc:	82 e0       	ldi	r24, 0x02	; 2
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	e0 91 d2 03 	lds	r30, 0x03D2	; 0x8003d2 <__flp>
     be4:	f0 91 d3 03 	lds	r31, 0x03D3	; 0x8003d3 <__flp+0x1>
     be8:	20 e0       	ldi	r18, 0x00	; 0
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	a0 e0       	ldi	r26, 0x00	; 0
     bee:	b0 e0       	ldi	r27, 0x00	; 0
     bf0:	30 97       	sbiw	r30, 0x00	; 0
     bf2:	19 f1       	breq	.+70     	; 0xc3a <malloc+0x6c>
     bf4:	40 81       	ld	r20, Z
     bf6:	51 81       	ldd	r21, Z+1	; 0x01
     bf8:	02 81       	ldd	r16, Z+2	; 0x02
     bfa:	13 81       	ldd	r17, Z+3	; 0x03
     bfc:	48 17       	cp	r20, r24
     bfe:	59 07       	cpc	r21, r25
     c00:	c8 f0       	brcs	.+50     	; 0xc34 <malloc+0x66>
     c02:	84 17       	cp	r24, r20
     c04:	95 07       	cpc	r25, r21
     c06:	69 f4       	brne	.+26     	; 0xc22 <malloc+0x54>
     c08:	10 97       	sbiw	r26, 0x00	; 0
     c0a:	31 f0       	breq	.+12     	; 0xc18 <malloc+0x4a>
     c0c:	12 96       	adiw	r26, 0x02	; 2
     c0e:	0c 93       	st	X, r16
     c10:	12 97       	sbiw	r26, 0x02	; 2
     c12:	13 96       	adiw	r26, 0x03	; 3
     c14:	1c 93       	st	X, r17
     c16:	27 c0       	rjmp	.+78     	; 0xc66 <malloc+0x98>
     c18:	00 93 d2 03 	sts	0x03D2, r16	; 0x8003d2 <__flp>
     c1c:	10 93 d3 03 	sts	0x03D3, r17	; 0x8003d3 <__flp+0x1>
     c20:	22 c0       	rjmp	.+68     	; 0xc66 <malloc+0x98>
     c22:	21 15       	cp	r18, r1
     c24:	31 05       	cpc	r19, r1
     c26:	19 f0       	breq	.+6      	; 0xc2e <malloc+0x60>
     c28:	42 17       	cp	r20, r18
     c2a:	53 07       	cpc	r21, r19
     c2c:	18 f4       	brcc	.+6      	; 0xc34 <malloc+0x66>
     c2e:	9a 01       	movw	r18, r20
     c30:	bd 01       	movw	r22, r26
     c32:	ef 01       	movw	r28, r30
     c34:	df 01       	movw	r26, r30
     c36:	f8 01       	movw	r30, r16
     c38:	db cf       	rjmp	.-74     	; 0xbf0 <malloc+0x22>
     c3a:	21 15       	cp	r18, r1
     c3c:	31 05       	cpc	r19, r1
     c3e:	f9 f0       	breq	.+62     	; 0xc7e <malloc+0xb0>
     c40:	28 1b       	sub	r18, r24
     c42:	39 0b       	sbc	r19, r25
     c44:	24 30       	cpi	r18, 0x04	; 4
     c46:	31 05       	cpc	r19, r1
     c48:	80 f4       	brcc	.+32     	; 0xc6a <malloc+0x9c>
     c4a:	8a 81       	ldd	r24, Y+2	; 0x02
     c4c:	9b 81       	ldd	r25, Y+3	; 0x03
     c4e:	61 15       	cp	r22, r1
     c50:	71 05       	cpc	r23, r1
     c52:	21 f0       	breq	.+8      	; 0xc5c <malloc+0x8e>
     c54:	fb 01       	movw	r30, r22
     c56:	93 83       	std	Z+3, r25	; 0x03
     c58:	82 83       	std	Z+2, r24	; 0x02
     c5a:	04 c0       	rjmp	.+8      	; 0xc64 <malloc+0x96>
     c5c:	90 93 d3 03 	sts	0x03D3, r25	; 0x8003d3 <__flp+0x1>
     c60:	80 93 d2 03 	sts	0x03D2, r24	; 0x8003d2 <__flp>
     c64:	fe 01       	movw	r30, r28
     c66:	32 96       	adiw	r30, 0x02	; 2
     c68:	44 c0       	rjmp	.+136    	; 0xcf2 <malloc+0x124>
     c6a:	fe 01       	movw	r30, r28
     c6c:	e2 0f       	add	r30, r18
     c6e:	f3 1f       	adc	r31, r19
     c70:	81 93       	st	Z+, r24
     c72:	91 93       	st	Z+, r25
     c74:	22 50       	subi	r18, 0x02	; 2
     c76:	31 09       	sbc	r19, r1
     c78:	39 83       	std	Y+1, r19	; 0x01
     c7a:	28 83       	st	Y, r18
     c7c:	3a c0       	rjmp	.+116    	; 0xcf2 <malloc+0x124>
     c7e:	20 91 d0 03 	lds	r18, 0x03D0	; 0x8003d0 <__brkval>
     c82:	30 91 d1 03 	lds	r19, 0x03D1	; 0x8003d1 <__brkval+0x1>
     c86:	23 2b       	or	r18, r19
     c88:	41 f4       	brne	.+16     	; 0xc9a <malloc+0xcc>
     c8a:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
     c8e:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
     c92:	30 93 d1 03 	sts	0x03D1, r19	; 0x8003d1 <__brkval+0x1>
     c96:	20 93 d0 03 	sts	0x03D0, r18	; 0x8003d0 <__brkval>
     c9a:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
     c9e:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
     ca2:	21 15       	cp	r18, r1
     ca4:	31 05       	cpc	r19, r1
     ca6:	41 f4       	brne	.+16     	; 0xcb8 <malloc+0xea>
     ca8:	2d b7       	in	r18, 0x3d	; 61
     caa:	3e b7       	in	r19, 0x3e	; 62
     cac:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
     cb0:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
     cb4:	24 1b       	sub	r18, r20
     cb6:	35 0b       	sbc	r19, r21
     cb8:	e0 91 d0 03 	lds	r30, 0x03D0	; 0x8003d0 <__brkval>
     cbc:	f0 91 d1 03 	lds	r31, 0x03D1	; 0x8003d1 <__brkval+0x1>
     cc0:	e2 17       	cp	r30, r18
     cc2:	f3 07       	cpc	r31, r19
     cc4:	a0 f4       	brcc	.+40     	; 0xcee <malloc+0x120>
     cc6:	2e 1b       	sub	r18, r30
     cc8:	3f 0b       	sbc	r19, r31
     cca:	28 17       	cp	r18, r24
     ccc:	39 07       	cpc	r19, r25
     cce:	78 f0       	brcs	.+30     	; 0xcee <malloc+0x120>
     cd0:	ac 01       	movw	r20, r24
     cd2:	4e 5f       	subi	r20, 0xFE	; 254
     cd4:	5f 4f       	sbci	r21, 0xFF	; 255
     cd6:	24 17       	cp	r18, r20
     cd8:	35 07       	cpc	r19, r21
     cda:	48 f0       	brcs	.+18     	; 0xcee <malloc+0x120>
     cdc:	4e 0f       	add	r20, r30
     cde:	5f 1f       	adc	r21, r31
     ce0:	50 93 d1 03 	sts	0x03D1, r21	; 0x8003d1 <__brkval+0x1>
     ce4:	40 93 d0 03 	sts	0x03D0, r20	; 0x8003d0 <__brkval>
     ce8:	81 93       	st	Z+, r24
     cea:	91 93       	st	Z+, r25
     cec:	02 c0       	rjmp	.+4      	; 0xcf2 <malloc+0x124>
     cee:	e0 e0       	ldi	r30, 0x00	; 0
     cf0:	f0 e0       	ldi	r31, 0x00	; 0
     cf2:	cf 01       	movw	r24, r30
     cf4:	df 91       	pop	r29
     cf6:	cf 91       	pop	r28
     cf8:	1f 91       	pop	r17
     cfa:	0f 91       	pop	r16
     cfc:	08 95       	ret

00000cfe <free>:
     cfe:	cf 93       	push	r28
     d00:	df 93       	push	r29
     d02:	00 97       	sbiw	r24, 0x00	; 0
     d04:	09 f4       	brne	.+2      	; 0xd08 <free+0xa>
     d06:	81 c0       	rjmp	.+258    	; 0xe0a <free+0x10c>
     d08:	fc 01       	movw	r30, r24
     d0a:	32 97       	sbiw	r30, 0x02	; 2
     d0c:	13 82       	std	Z+3, r1	; 0x03
     d0e:	12 82       	std	Z+2, r1	; 0x02
     d10:	a0 91 d2 03 	lds	r26, 0x03D2	; 0x8003d2 <__flp>
     d14:	b0 91 d3 03 	lds	r27, 0x03D3	; 0x8003d3 <__flp+0x1>
     d18:	10 97       	sbiw	r26, 0x00	; 0
     d1a:	81 f4       	brne	.+32     	; 0xd3c <free+0x3e>
     d1c:	20 81       	ld	r18, Z
     d1e:	31 81       	ldd	r19, Z+1	; 0x01
     d20:	82 0f       	add	r24, r18
     d22:	93 1f       	adc	r25, r19
     d24:	20 91 d0 03 	lds	r18, 0x03D0	; 0x8003d0 <__brkval>
     d28:	30 91 d1 03 	lds	r19, 0x03D1	; 0x8003d1 <__brkval+0x1>
     d2c:	28 17       	cp	r18, r24
     d2e:	39 07       	cpc	r19, r25
     d30:	51 f5       	brne	.+84     	; 0xd86 <free+0x88>
     d32:	f0 93 d1 03 	sts	0x03D1, r31	; 0x8003d1 <__brkval+0x1>
     d36:	e0 93 d0 03 	sts	0x03D0, r30	; 0x8003d0 <__brkval>
     d3a:	67 c0       	rjmp	.+206    	; 0xe0a <free+0x10c>
     d3c:	ed 01       	movw	r28, r26
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	ce 17       	cp	r28, r30
     d44:	df 07       	cpc	r29, r31
     d46:	40 f4       	brcc	.+16     	; 0xd58 <free+0x5a>
     d48:	4a 81       	ldd	r20, Y+2	; 0x02
     d4a:	5b 81       	ldd	r21, Y+3	; 0x03
     d4c:	9e 01       	movw	r18, r28
     d4e:	41 15       	cp	r20, r1
     d50:	51 05       	cpc	r21, r1
     d52:	f1 f0       	breq	.+60     	; 0xd90 <free+0x92>
     d54:	ea 01       	movw	r28, r20
     d56:	f5 cf       	rjmp	.-22     	; 0xd42 <free+0x44>
     d58:	d3 83       	std	Z+3, r29	; 0x03
     d5a:	c2 83       	std	Z+2, r28	; 0x02
     d5c:	40 81       	ld	r20, Z
     d5e:	51 81       	ldd	r21, Z+1	; 0x01
     d60:	84 0f       	add	r24, r20
     d62:	95 1f       	adc	r25, r21
     d64:	c8 17       	cp	r28, r24
     d66:	d9 07       	cpc	r29, r25
     d68:	59 f4       	brne	.+22     	; 0xd80 <free+0x82>
     d6a:	88 81       	ld	r24, Y
     d6c:	99 81       	ldd	r25, Y+1	; 0x01
     d6e:	84 0f       	add	r24, r20
     d70:	95 1f       	adc	r25, r21
     d72:	02 96       	adiw	r24, 0x02	; 2
     d74:	91 83       	std	Z+1, r25	; 0x01
     d76:	80 83       	st	Z, r24
     d78:	8a 81       	ldd	r24, Y+2	; 0x02
     d7a:	9b 81       	ldd	r25, Y+3	; 0x03
     d7c:	93 83       	std	Z+3, r25	; 0x03
     d7e:	82 83       	std	Z+2, r24	; 0x02
     d80:	21 15       	cp	r18, r1
     d82:	31 05       	cpc	r19, r1
     d84:	29 f4       	brne	.+10     	; 0xd90 <free+0x92>
     d86:	f0 93 d3 03 	sts	0x03D3, r31	; 0x8003d3 <__flp+0x1>
     d8a:	e0 93 d2 03 	sts	0x03D2, r30	; 0x8003d2 <__flp>
     d8e:	3d c0       	rjmp	.+122    	; 0xe0a <free+0x10c>
     d90:	e9 01       	movw	r28, r18
     d92:	fb 83       	std	Y+3, r31	; 0x03
     d94:	ea 83       	std	Y+2, r30	; 0x02
     d96:	49 91       	ld	r20, Y+
     d98:	59 91       	ld	r21, Y+
     d9a:	c4 0f       	add	r28, r20
     d9c:	d5 1f       	adc	r29, r21
     d9e:	ec 17       	cp	r30, r28
     da0:	fd 07       	cpc	r31, r29
     da2:	61 f4       	brne	.+24     	; 0xdbc <free+0xbe>
     da4:	80 81       	ld	r24, Z
     da6:	91 81       	ldd	r25, Z+1	; 0x01
     da8:	84 0f       	add	r24, r20
     daa:	95 1f       	adc	r25, r21
     dac:	02 96       	adiw	r24, 0x02	; 2
     dae:	e9 01       	movw	r28, r18
     db0:	99 83       	std	Y+1, r25	; 0x01
     db2:	88 83       	st	Y, r24
     db4:	82 81       	ldd	r24, Z+2	; 0x02
     db6:	93 81       	ldd	r25, Z+3	; 0x03
     db8:	9b 83       	std	Y+3, r25	; 0x03
     dba:	8a 83       	std	Y+2, r24	; 0x02
     dbc:	e0 e0       	ldi	r30, 0x00	; 0
     dbe:	f0 e0       	ldi	r31, 0x00	; 0
     dc0:	12 96       	adiw	r26, 0x02	; 2
     dc2:	8d 91       	ld	r24, X+
     dc4:	9c 91       	ld	r25, X
     dc6:	13 97       	sbiw	r26, 0x03	; 3
     dc8:	00 97       	sbiw	r24, 0x00	; 0
     dca:	19 f0       	breq	.+6      	; 0xdd2 <free+0xd4>
     dcc:	fd 01       	movw	r30, r26
     dce:	dc 01       	movw	r26, r24
     dd0:	f7 cf       	rjmp	.-18     	; 0xdc0 <free+0xc2>
     dd2:	8d 91       	ld	r24, X+
     dd4:	9c 91       	ld	r25, X
     dd6:	11 97       	sbiw	r26, 0x01	; 1
     dd8:	9d 01       	movw	r18, r26
     dda:	2e 5f       	subi	r18, 0xFE	; 254
     ddc:	3f 4f       	sbci	r19, 0xFF	; 255
     dde:	82 0f       	add	r24, r18
     de0:	93 1f       	adc	r25, r19
     de2:	20 91 d0 03 	lds	r18, 0x03D0	; 0x8003d0 <__brkval>
     de6:	30 91 d1 03 	lds	r19, 0x03D1	; 0x8003d1 <__brkval+0x1>
     dea:	28 17       	cp	r18, r24
     dec:	39 07       	cpc	r19, r25
     dee:	69 f4       	brne	.+26     	; 0xe0a <free+0x10c>
     df0:	30 97       	sbiw	r30, 0x00	; 0
     df2:	29 f4       	brne	.+10     	; 0xdfe <free+0x100>
     df4:	10 92 d3 03 	sts	0x03D3, r1	; 0x8003d3 <__flp+0x1>
     df8:	10 92 d2 03 	sts	0x03D2, r1	; 0x8003d2 <__flp>
     dfc:	02 c0       	rjmp	.+4      	; 0xe02 <free+0x104>
     dfe:	13 82       	std	Z+3, r1	; 0x03
     e00:	12 82       	std	Z+2, r1	; 0x02
     e02:	b0 93 d1 03 	sts	0x03D1, r27	; 0x8003d1 <__brkval+0x1>
     e06:	a0 93 d0 03 	sts	0x03D0, r26	; 0x8003d0 <__brkval>
     e0a:	df 91       	pop	r29
     e0c:	cf 91       	pop	r28
     e0e:	08 95       	ret

00000e10 <do_rand>:
     e10:	8f 92       	push	r8
     e12:	9f 92       	push	r9
     e14:	af 92       	push	r10
     e16:	bf 92       	push	r11
     e18:	cf 92       	push	r12
     e1a:	df 92       	push	r13
     e1c:	ef 92       	push	r14
     e1e:	ff 92       	push	r15
     e20:	cf 93       	push	r28
     e22:	df 93       	push	r29
     e24:	ec 01       	movw	r28, r24
     e26:	68 81       	ld	r22, Y
     e28:	79 81       	ldd	r23, Y+1	; 0x01
     e2a:	8a 81       	ldd	r24, Y+2	; 0x02
     e2c:	9b 81       	ldd	r25, Y+3	; 0x03
     e2e:	61 15       	cp	r22, r1
     e30:	71 05       	cpc	r23, r1
     e32:	81 05       	cpc	r24, r1
     e34:	91 05       	cpc	r25, r1
     e36:	21 f4       	brne	.+8      	; 0xe40 <do_rand+0x30>
     e38:	64 e2       	ldi	r22, 0x24	; 36
     e3a:	79 ed       	ldi	r23, 0xD9	; 217
     e3c:	8b e5       	ldi	r24, 0x5B	; 91
     e3e:	97 e0       	ldi	r25, 0x07	; 7
     e40:	2d e1       	ldi	r18, 0x1D	; 29
     e42:	33 ef       	ldi	r19, 0xF3	; 243
     e44:	41 e0       	ldi	r20, 0x01	; 1
     e46:	50 e0       	ldi	r21, 0x00	; 0
     e48:	2f d3       	rcall	.+1630   	; 0x14a8 <__divmodsi4>
     e4a:	49 01       	movw	r8, r18
     e4c:	5a 01       	movw	r10, r20
     e4e:	9b 01       	movw	r18, r22
     e50:	ac 01       	movw	r20, r24
     e52:	a7 ea       	ldi	r26, 0xA7	; 167
     e54:	b1 e4       	ldi	r27, 0x41	; 65
     e56:	44 d3       	rcall	.+1672   	; 0x14e0 <__muluhisi3>
     e58:	6b 01       	movw	r12, r22
     e5a:	7c 01       	movw	r14, r24
     e5c:	ac ee       	ldi	r26, 0xEC	; 236
     e5e:	b4 ef       	ldi	r27, 0xF4	; 244
     e60:	a5 01       	movw	r20, r10
     e62:	94 01       	movw	r18, r8
     e64:	49 d3       	rcall	.+1682   	; 0x14f8 <__mulohisi3>
     e66:	dc 01       	movw	r26, r24
     e68:	cb 01       	movw	r24, r22
     e6a:	8c 0d       	add	r24, r12
     e6c:	9d 1d       	adc	r25, r13
     e6e:	ae 1d       	adc	r26, r14
     e70:	bf 1d       	adc	r27, r15
     e72:	b7 ff       	sbrs	r27, 7
     e74:	03 c0       	rjmp	.+6      	; 0xe7c <do_rand+0x6c>
     e76:	01 97       	sbiw	r24, 0x01	; 1
     e78:	a1 09       	sbc	r26, r1
     e7a:	b0 48       	sbci	r27, 0x80	; 128
     e7c:	88 83       	st	Y, r24
     e7e:	99 83       	std	Y+1, r25	; 0x01
     e80:	aa 83       	std	Y+2, r26	; 0x02
     e82:	bb 83       	std	Y+3, r27	; 0x03
     e84:	9f 77       	andi	r25, 0x7F	; 127
     e86:	df 91       	pop	r29
     e88:	cf 91       	pop	r28
     e8a:	ff 90       	pop	r15
     e8c:	ef 90       	pop	r14
     e8e:	df 90       	pop	r13
     e90:	cf 90       	pop	r12
     e92:	bf 90       	pop	r11
     e94:	af 90       	pop	r10
     e96:	9f 90       	pop	r9
     e98:	8f 90       	pop	r8
     e9a:	08 95       	ret

00000e9c <rand_r>:
     e9c:	b9 cf       	rjmp	.-142    	; 0xe10 <do_rand>

00000e9e <rand>:
     e9e:	86 e0       	ldi	r24, 0x06	; 6
     ea0:	92 e0       	ldi	r25, 0x02	; 2
     ea2:	b6 cf       	rjmp	.-148    	; 0xe10 <do_rand>

00000ea4 <srand>:
     ea4:	a0 e0       	ldi	r26, 0x00	; 0
     ea6:	b0 e0       	ldi	r27, 0x00	; 0
     ea8:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <next>
     eac:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <next+0x1>
     eb0:	a0 93 08 02 	sts	0x0208, r26	; 0x800208 <next+0x2>
     eb4:	b0 93 09 02 	sts	0x0209, r27	; 0x800209 <next+0x3>
     eb8:	08 95       	ret

00000eba <memset>:
     eba:	dc 01       	movw	r26, r24
     ebc:	01 c0       	rjmp	.+2      	; 0xec0 <memset+0x6>
     ebe:	6d 93       	st	X+, r22
     ec0:	41 50       	subi	r20, 0x01	; 1
     ec2:	50 40       	sbci	r21, 0x00	; 0
     ec4:	e0 f7       	brcc	.-8      	; 0xebe <memset+0x4>
     ec6:	08 95       	ret

00000ec8 <printf>:
     ec8:	cf 93       	push	r28
     eca:	df 93       	push	r29
     ecc:	cd b7       	in	r28, 0x3d	; 61
     ece:	de b7       	in	r29, 0x3e	; 62
     ed0:	ae 01       	movw	r20, r28
     ed2:	4a 5f       	subi	r20, 0xFA	; 250
     ed4:	5f 4f       	sbci	r21, 0xFF	; 255
     ed6:	fa 01       	movw	r30, r20
     ed8:	61 91       	ld	r22, Z+
     eda:	71 91       	ld	r23, Z+
     edc:	af 01       	movw	r20, r30
     ede:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__iob+0x2>
     ee2:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__iob+0x3>
     ee6:	33 d0       	rcall	.+102    	; 0xf4e <vfprintf>
     ee8:	df 91       	pop	r29
     eea:	cf 91       	pop	r28
     eec:	08 95       	ret

00000eee <puts>:
     eee:	0f 93       	push	r16
     ef0:	1f 93       	push	r17
     ef2:	cf 93       	push	r28
     ef4:	df 93       	push	r29
     ef6:	e0 91 d6 03 	lds	r30, 0x03D6	; 0x8003d6 <__iob+0x2>
     efa:	f0 91 d7 03 	lds	r31, 0x03D7	; 0x8003d7 <__iob+0x3>
     efe:	23 81       	ldd	r18, Z+3	; 0x03
     f00:	21 ff       	sbrs	r18, 1
     f02:	1b c0       	rjmp	.+54     	; 0xf3a <puts+0x4c>
     f04:	8c 01       	movw	r16, r24
     f06:	d0 e0       	ldi	r29, 0x00	; 0
     f08:	c0 e0       	ldi	r28, 0x00	; 0
     f0a:	f8 01       	movw	r30, r16
     f0c:	81 91       	ld	r24, Z+
     f0e:	8f 01       	movw	r16, r30
     f10:	60 91 d6 03 	lds	r22, 0x03D6	; 0x8003d6 <__iob+0x2>
     f14:	70 91 d7 03 	lds	r23, 0x03D7	; 0x8003d7 <__iob+0x3>
     f18:	db 01       	movw	r26, r22
     f1a:	18 96       	adiw	r26, 0x08	; 8
     f1c:	ed 91       	ld	r30, X+
     f1e:	fc 91       	ld	r31, X
     f20:	19 97       	sbiw	r26, 0x09	; 9
     f22:	88 23       	and	r24, r24
     f24:	31 f0       	breq	.+12     	; 0xf32 <puts+0x44>
     f26:	19 95       	eicall
     f28:	89 2b       	or	r24, r25
     f2a:	79 f3       	breq	.-34     	; 0xf0a <puts+0x1c>
     f2c:	df ef       	ldi	r29, 0xFF	; 255
     f2e:	cf ef       	ldi	r28, 0xFF	; 255
     f30:	ec cf       	rjmp	.-40     	; 0xf0a <puts+0x1c>
     f32:	8a e0       	ldi	r24, 0x0A	; 10
     f34:	19 95       	eicall
     f36:	89 2b       	or	r24, r25
     f38:	19 f0       	breq	.+6      	; 0xf40 <puts+0x52>
     f3a:	8f ef       	ldi	r24, 0xFF	; 255
     f3c:	9f ef       	ldi	r25, 0xFF	; 255
     f3e:	02 c0       	rjmp	.+4      	; 0xf44 <puts+0x56>
     f40:	8d 2f       	mov	r24, r29
     f42:	9c 2f       	mov	r25, r28
     f44:	df 91       	pop	r29
     f46:	cf 91       	pop	r28
     f48:	1f 91       	pop	r17
     f4a:	0f 91       	pop	r16
     f4c:	08 95       	ret

00000f4e <vfprintf>:
     f4e:	2f 92       	push	r2
     f50:	3f 92       	push	r3
     f52:	4f 92       	push	r4
     f54:	5f 92       	push	r5
     f56:	6f 92       	push	r6
     f58:	7f 92       	push	r7
     f5a:	8f 92       	push	r8
     f5c:	9f 92       	push	r9
     f5e:	af 92       	push	r10
     f60:	bf 92       	push	r11
     f62:	cf 92       	push	r12
     f64:	df 92       	push	r13
     f66:	ef 92       	push	r14
     f68:	ff 92       	push	r15
     f6a:	0f 93       	push	r16
     f6c:	1f 93       	push	r17
     f6e:	cf 93       	push	r28
     f70:	df 93       	push	r29
     f72:	cd b7       	in	r28, 0x3d	; 61
     f74:	de b7       	in	r29, 0x3e	; 62
     f76:	2b 97       	sbiw	r28, 0x0b	; 11
     f78:	0f b6       	in	r0, 0x3f	; 63
     f7a:	f8 94       	cli
     f7c:	de bf       	out	0x3e, r29	; 62
     f7e:	0f be       	out	0x3f, r0	; 63
     f80:	cd bf       	out	0x3d, r28	; 61
     f82:	6c 01       	movw	r12, r24
     f84:	7b 01       	movw	r14, r22
     f86:	8a 01       	movw	r16, r20
     f88:	fc 01       	movw	r30, r24
     f8a:	17 82       	std	Z+7, r1	; 0x07
     f8c:	16 82       	std	Z+6, r1	; 0x06
     f8e:	83 81       	ldd	r24, Z+3	; 0x03
     f90:	81 ff       	sbrs	r24, 1
     f92:	bf c1       	rjmp	.+894    	; 0x1312 <vfprintf+0x3c4>
     f94:	ce 01       	movw	r24, r28
     f96:	01 96       	adiw	r24, 0x01	; 1
     f98:	3c 01       	movw	r6, r24
     f9a:	f6 01       	movw	r30, r12
     f9c:	93 81       	ldd	r25, Z+3	; 0x03
     f9e:	f7 01       	movw	r30, r14
     fa0:	93 fd       	sbrc	r25, 3
     fa2:	85 91       	lpm	r24, Z+
     fa4:	93 ff       	sbrs	r25, 3
     fa6:	81 91       	ld	r24, Z+
     fa8:	7f 01       	movw	r14, r30
     faa:	88 23       	and	r24, r24
     fac:	09 f4       	brne	.+2      	; 0xfb0 <vfprintf+0x62>
     fae:	ad c1       	rjmp	.+858    	; 0x130a <vfprintf+0x3bc>
     fb0:	85 32       	cpi	r24, 0x25	; 37
     fb2:	39 f4       	brne	.+14     	; 0xfc2 <vfprintf+0x74>
     fb4:	93 fd       	sbrc	r25, 3
     fb6:	85 91       	lpm	r24, Z+
     fb8:	93 ff       	sbrs	r25, 3
     fba:	81 91       	ld	r24, Z+
     fbc:	7f 01       	movw	r14, r30
     fbe:	85 32       	cpi	r24, 0x25	; 37
     fc0:	21 f4       	brne	.+8      	; 0xfca <vfprintf+0x7c>
     fc2:	b6 01       	movw	r22, r12
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	d6 d1       	rcall	.+940    	; 0x1374 <fputc>
     fc8:	e8 cf       	rjmp	.-48     	; 0xf9a <vfprintf+0x4c>
     fca:	91 2c       	mov	r9, r1
     fcc:	21 2c       	mov	r2, r1
     fce:	31 2c       	mov	r3, r1
     fd0:	ff e1       	ldi	r31, 0x1F	; 31
     fd2:	f3 15       	cp	r31, r3
     fd4:	d8 f0       	brcs	.+54     	; 0x100c <vfprintf+0xbe>
     fd6:	8b 32       	cpi	r24, 0x2B	; 43
     fd8:	79 f0       	breq	.+30     	; 0xff8 <vfprintf+0xaa>
     fda:	38 f4       	brcc	.+14     	; 0xfea <vfprintf+0x9c>
     fdc:	80 32       	cpi	r24, 0x20	; 32
     fde:	79 f0       	breq	.+30     	; 0xffe <vfprintf+0xb0>
     fe0:	83 32       	cpi	r24, 0x23	; 35
     fe2:	a1 f4       	brne	.+40     	; 0x100c <vfprintf+0xbe>
     fe4:	23 2d       	mov	r18, r3
     fe6:	20 61       	ori	r18, 0x10	; 16
     fe8:	1d c0       	rjmp	.+58     	; 0x1024 <vfprintf+0xd6>
     fea:	8d 32       	cpi	r24, 0x2D	; 45
     fec:	61 f0       	breq	.+24     	; 0x1006 <vfprintf+0xb8>
     fee:	80 33       	cpi	r24, 0x30	; 48
     ff0:	69 f4       	brne	.+26     	; 0x100c <vfprintf+0xbe>
     ff2:	23 2d       	mov	r18, r3
     ff4:	21 60       	ori	r18, 0x01	; 1
     ff6:	16 c0       	rjmp	.+44     	; 0x1024 <vfprintf+0xd6>
     ff8:	83 2d       	mov	r24, r3
     ffa:	82 60       	ori	r24, 0x02	; 2
     ffc:	38 2e       	mov	r3, r24
     ffe:	e3 2d       	mov	r30, r3
    1000:	e4 60       	ori	r30, 0x04	; 4
    1002:	3e 2e       	mov	r3, r30
    1004:	2a c0       	rjmp	.+84     	; 0x105a <vfprintf+0x10c>
    1006:	f3 2d       	mov	r31, r3
    1008:	f8 60       	ori	r31, 0x08	; 8
    100a:	1d c0       	rjmp	.+58     	; 0x1046 <vfprintf+0xf8>
    100c:	37 fc       	sbrc	r3, 7
    100e:	2d c0       	rjmp	.+90     	; 0x106a <vfprintf+0x11c>
    1010:	20 ed       	ldi	r18, 0xD0	; 208
    1012:	28 0f       	add	r18, r24
    1014:	2a 30       	cpi	r18, 0x0A	; 10
    1016:	40 f0       	brcs	.+16     	; 0x1028 <vfprintf+0xda>
    1018:	8e 32       	cpi	r24, 0x2E	; 46
    101a:	b9 f4       	brne	.+46     	; 0x104a <vfprintf+0xfc>
    101c:	36 fc       	sbrc	r3, 6
    101e:	75 c1       	rjmp	.+746    	; 0x130a <vfprintf+0x3bc>
    1020:	23 2d       	mov	r18, r3
    1022:	20 64       	ori	r18, 0x40	; 64
    1024:	32 2e       	mov	r3, r18
    1026:	19 c0       	rjmp	.+50     	; 0x105a <vfprintf+0x10c>
    1028:	36 fe       	sbrs	r3, 6
    102a:	06 c0       	rjmp	.+12     	; 0x1038 <vfprintf+0xea>
    102c:	8a e0       	ldi	r24, 0x0A	; 10
    102e:	98 9e       	mul	r9, r24
    1030:	20 0d       	add	r18, r0
    1032:	11 24       	eor	r1, r1
    1034:	92 2e       	mov	r9, r18
    1036:	11 c0       	rjmp	.+34     	; 0x105a <vfprintf+0x10c>
    1038:	ea e0       	ldi	r30, 0x0A	; 10
    103a:	2e 9e       	mul	r2, r30
    103c:	20 0d       	add	r18, r0
    103e:	11 24       	eor	r1, r1
    1040:	22 2e       	mov	r2, r18
    1042:	f3 2d       	mov	r31, r3
    1044:	f0 62       	ori	r31, 0x20	; 32
    1046:	3f 2e       	mov	r3, r31
    1048:	08 c0       	rjmp	.+16     	; 0x105a <vfprintf+0x10c>
    104a:	8c 36       	cpi	r24, 0x6C	; 108
    104c:	21 f4       	brne	.+8      	; 0x1056 <vfprintf+0x108>
    104e:	83 2d       	mov	r24, r3
    1050:	80 68       	ori	r24, 0x80	; 128
    1052:	38 2e       	mov	r3, r24
    1054:	02 c0       	rjmp	.+4      	; 0x105a <vfprintf+0x10c>
    1056:	88 36       	cpi	r24, 0x68	; 104
    1058:	41 f4       	brne	.+16     	; 0x106a <vfprintf+0x11c>
    105a:	f7 01       	movw	r30, r14
    105c:	93 fd       	sbrc	r25, 3
    105e:	85 91       	lpm	r24, Z+
    1060:	93 ff       	sbrs	r25, 3
    1062:	81 91       	ld	r24, Z+
    1064:	7f 01       	movw	r14, r30
    1066:	81 11       	cpse	r24, r1
    1068:	b3 cf       	rjmp	.-154    	; 0xfd0 <vfprintf+0x82>
    106a:	98 2f       	mov	r25, r24
    106c:	9f 7d       	andi	r25, 0xDF	; 223
    106e:	95 54       	subi	r25, 0x45	; 69
    1070:	93 30       	cpi	r25, 0x03	; 3
    1072:	28 f4       	brcc	.+10     	; 0x107e <vfprintf+0x130>
    1074:	0c 5f       	subi	r16, 0xFC	; 252
    1076:	1f 4f       	sbci	r17, 0xFF	; 255
    1078:	9f e3       	ldi	r25, 0x3F	; 63
    107a:	99 83       	std	Y+1, r25	; 0x01
    107c:	0d c0       	rjmp	.+26     	; 0x1098 <vfprintf+0x14a>
    107e:	83 36       	cpi	r24, 0x63	; 99
    1080:	31 f0       	breq	.+12     	; 0x108e <vfprintf+0x140>
    1082:	83 37       	cpi	r24, 0x73	; 115
    1084:	71 f0       	breq	.+28     	; 0x10a2 <vfprintf+0x154>
    1086:	83 35       	cpi	r24, 0x53	; 83
    1088:	09 f0       	breq	.+2      	; 0x108c <vfprintf+0x13e>
    108a:	55 c0       	rjmp	.+170    	; 0x1136 <vfprintf+0x1e8>
    108c:	20 c0       	rjmp	.+64     	; 0x10ce <vfprintf+0x180>
    108e:	f8 01       	movw	r30, r16
    1090:	80 81       	ld	r24, Z
    1092:	89 83       	std	Y+1, r24	; 0x01
    1094:	0e 5f       	subi	r16, 0xFE	; 254
    1096:	1f 4f       	sbci	r17, 0xFF	; 255
    1098:	88 24       	eor	r8, r8
    109a:	83 94       	inc	r8
    109c:	91 2c       	mov	r9, r1
    109e:	53 01       	movw	r10, r6
    10a0:	12 c0       	rjmp	.+36     	; 0x10c6 <vfprintf+0x178>
    10a2:	28 01       	movw	r4, r16
    10a4:	f2 e0       	ldi	r31, 0x02	; 2
    10a6:	4f 0e       	add	r4, r31
    10a8:	51 1c       	adc	r5, r1
    10aa:	f8 01       	movw	r30, r16
    10ac:	a0 80       	ld	r10, Z
    10ae:	b1 80       	ldd	r11, Z+1	; 0x01
    10b0:	36 fe       	sbrs	r3, 6
    10b2:	03 c0       	rjmp	.+6      	; 0x10ba <vfprintf+0x16c>
    10b4:	69 2d       	mov	r22, r9
    10b6:	70 e0       	ldi	r23, 0x00	; 0
    10b8:	02 c0       	rjmp	.+4      	; 0x10be <vfprintf+0x170>
    10ba:	6f ef       	ldi	r22, 0xFF	; 255
    10bc:	7f ef       	ldi	r23, 0xFF	; 255
    10be:	c5 01       	movw	r24, r10
    10c0:	4e d1       	rcall	.+668    	; 0x135e <strnlen>
    10c2:	4c 01       	movw	r8, r24
    10c4:	82 01       	movw	r16, r4
    10c6:	f3 2d       	mov	r31, r3
    10c8:	ff 77       	andi	r31, 0x7F	; 127
    10ca:	3f 2e       	mov	r3, r31
    10cc:	15 c0       	rjmp	.+42     	; 0x10f8 <vfprintf+0x1aa>
    10ce:	28 01       	movw	r4, r16
    10d0:	22 e0       	ldi	r18, 0x02	; 2
    10d2:	42 0e       	add	r4, r18
    10d4:	51 1c       	adc	r5, r1
    10d6:	f8 01       	movw	r30, r16
    10d8:	a0 80       	ld	r10, Z
    10da:	b1 80       	ldd	r11, Z+1	; 0x01
    10dc:	36 fe       	sbrs	r3, 6
    10de:	03 c0       	rjmp	.+6      	; 0x10e6 <vfprintf+0x198>
    10e0:	69 2d       	mov	r22, r9
    10e2:	70 e0       	ldi	r23, 0x00	; 0
    10e4:	02 c0       	rjmp	.+4      	; 0x10ea <vfprintf+0x19c>
    10e6:	6f ef       	ldi	r22, 0xFF	; 255
    10e8:	7f ef       	ldi	r23, 0xFF	; 255
    10ea:	c5 01       	movw	r24, r10
    10ec:	2d d1       	rcall	.+602    	; 0x1348 <strnlen_P>
    10ee:	4c 01       	movw	r8, r24
    10f0:	f3 2d       	mov	r31, r3
    10f2:	f0 68       	ori	r31, 0x80	; 128
    10f4:	3f 2e       	mov	r3, r31
    10f6:	82 01       	movw	r16, r4
    10f8:	33 fc       	sbrc	r3, 3
    10fa:	19 c0       	rjmp	.+50     	; 0x112e <vfprintf+0x1e0>
    10fc:	82 2d       	mov	r24, r2
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	88 16       	cp	r8, r24
    1102:	99 06       	cpc	r9, r25
    1104:	a0 f4       	brcc	.+40     	; 0x112e <vfprintf+0x1e0>
    1106:	b6 01       	movw	r22, r12
    1108:	80 e2       	ldi	r24, 0x20	; 32
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	33 d1       	rcall	.+614    	; 0x1374 <fputc>
    110e:	2a 94       	dec	r2
    1110:	f5 cf       	rjmp	.-22     	; 0x10fc <vfprintf+0x1ae>
    1112:	f5 01       	movw	r30, r10
    1114:	37 fc       	sbrc	r3, 7
    1116:	85 91       	lpm	r24, Z+
    1118:	37 fe       	sbrs	r3, 7
    111a:	81 91       	ld	r24, Z+
    111c:	5f 01       	movw	r10, r30
    111e:	b6 01       	movw	r22, r12
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	28 d1       	rcall	.+592    	; 0x1374 <fputc>
    1124:	21 10       	cpse	r2, r1
    1126:	2a 94       	dec	r2
    1128:	21 e0       	ldi	r18, 0x01	; 1
    112a:	82 1a       	sub	r8, r18
    112c:	91 08       	sbc	r9, r1
    112e:	81 14       	cp	r8, r1
    1130:	91 04       	cpc	r9, r1
    1132:	79 f7       	brne	.-34     	; 0x1112 <vfprintf+0x1c4>
    1134:	e1 c0       	rjmp	.+450    	; 0x12f8 <vfprintf+0x3aa>
    1136:	84 36       	cpi	r24, 0x64	; 100
    1138:	11 f0       	breq	.+4      	; 0x113e <vfprintf+0x1f0>
    113a:	89 36       	cpi	r24, 0x69	; 105
    113c:	39 f5       	brne	.+78     	; 0x118c <vfprintf+0x23e>
    113e:	f8 01       	movw	r30, r16
    1140:	37 fe       	sbrs	r3, 7
    1142:	07 c0       	rjmp	.+14     	; 0x1152 <vfprintf+0x204>
    1144:	60 81       	ld	r22, Z
    1146:	71 81       	ldd	r23, Z+1	; 0x01
    1148:	82 81       	ldd	r24, Z+2	; 0x02
    114a:	93 81       	ldd	r25, Z+3	; 0x03
    114c:	0c 5f       	subi	r16, 0xFC	; 252
    114e:	1f 4f       	sbci	r17, 0xFF	; 255
    1150:	08 c0       	rjmp	.+16     	; 0x1162 <vfprintf+0x214>
    1152:	60 81       	ld	r22, Z
    1154:	71 81       	ldd	r23, Z+1	; 0x01
    1156:	07 2e       	mov	r0, r23
    1158:	00 0c       	add	r0, r0
    115a:	88 0b       	sbc	r24, r24
    115c:	99 0b       	sbc	r25, r25
    115e:	0e 5f       	subi	r16, 0xFE	; 254
    1160:	1f 4f       	sbci	r17, 0xFF	; 255
    1162:	f3 2d       	mov	r31, r3
    1164:	ff 76       	andi	r31, 0x6F	; 111
    1166:	3f 2e       	mov	r3, r31
    1168:	97 ff       	sbrs	r25, 7
    116a:	09 c0       	rjmp	.+18     	; 0x117e <vfprintf+0x230>
    116c:	90 95       	com	r25
    116e:	80 95       	com	r24
    1170:	70 95       	com	r23
    1172:	61 95       	neg	r22
    1174:	7f 4f       	sbci	r23, 0xFF	; 255
    1176:	8f 4f       	sbci	r24, 0xFF	; 255
    1178:	9f 4f       	sbci	r25, 0xFF	; 255
    117a:	f0 68       	ori	r31, 0x80	; 128
    117c:	3f 2e       	mov	r3, r31
    117e:	2a e0       	ldi	r18, 0x0A	; 10
    1180:	30 e0       	ldi	r19, 0x00	; 0
    1182:	a3 01       	movw	r20, r6
    1184:	33 d1       	rcall	.+614    	; 0x13ec <__ultoa_invert>
    1186:	88 2e       	mov	r8, r24
    1188:	86 18       	sub	r8, r6
    118a:	44 c0       	rjmp	.+136    	; 0x1214 <vfprintf+0x2c6>
    118c:	85 37       	cpi	r24, 0x75	; 117
    118e:	31 f4       	brne	.+12     	; 0x119c <vfprintf+0x24e>
    1190:	23 2d       	mov	r18, r3
    1192:	2f 7e       	andi	r18, 0xEF	; 239
    1194:	b2 2e       	mov	r11, r18
    1196:	2a e0       	ldi	r18, 0x0A	; 10
    1198:	30 e0       	ldi	r19, 0x00	; 0
    119a:	25 c0       	rjmp	.+74     	; 0x11e6 <vfprintf+0x298>
    119c:	93 2d       	mov	r25, r3
    119e:	99 7f       	andi	r25, 0xF9	; 249
    11a0:	b9 2e       	mov	r11, r25
    11a2:	8f 36       	cpi	r24, 0x6F	; 111
    11a4:	c1 f0       	breq	.+48     	; 0x11d6 <vfprintf+0x288>
    11a6:	18 f4       	brcc	.+6      	; 0x11ae <vfprintf+0x260>
    11a8:	88 35       	cpi	r24, 0x58	; 88
    11aa:	79 f0       	breq	.+30     	; 0x11ca <vfprintf+0x27c>
    11ac:	ae c0       	rjmp	.+348    	; 0x130a <vfprintf+0x3bc>
    11ae:	80 37       	cpi	r24, 0x70	; 112
    11b0:	19 f0       	breq	.+6      	; 0x11b8 <vfprintf+0x26a>
    11b2:	88 37       	cpi	r24, 0x78	; 120
    11b4:	21 f0       	breq	.+8      	; 0x11be <vfprintf+0x270>
    11b6:	a9 c0       	rjmp	.+338    	; 0x130a <vfprintf+0x3bc>
    11b8:	e9 2f       	mov	r30, r25
    11ba:	e0 61       	ori	r30, 0x10	; 16
    11bc:	be 2e       	mov	r11, r30
    11be:	b4 fe       	sbrs	r11, 4
    11c0:	0d c0       	rjmp	.+26     	; 0x11dc <vfprintf+0x28e>
    11c2:	fb 2d       	mov	r31, r11
    11c4:	f4 60       	ori	r31, 0x04	; 4
    11c6:	bf 2e       	mov	r11, r31
    11c8:	09 c0       	rjmp	.+18     	; 0x11dc <vfprintf+0x28e>
    11ca:	34 fe       	sbrs	r3, 4
    11cc:	0a c0       	rjmp	.+20     	; 0x11e2 <vfprintf+0x294>
    11ce:	29 2f       	mov	r18, r25
    11d0:	26 60       	ori	r18, 0x06	; 6
    11d2:	b2 2e       	mov	r11, r18
    11d4:	06 c0       	rjmp	.+12     	; 0x11e2 <vfprintf+0x294>
    11d6:	28 e0       	ldi	r18, 0x08	; 8
    11d8:	30 e0       	ldi	r19, 0x00	; 0
    11da:	05 c0       	rjmp	.+10     	; 0x11e6 <vfprintf+0x298>
    11dc:	20 e1       	ldi	r18, 0x10	; 16
    11de:	30 e0       	ldi	r19, 0x00	; 0
    11e0:	02 c0       	rjmp	.+4      	; 0x11e6 <vfprintf+0x298>
    11e2:	20 e1       	ldi	r18, 0x10	; 16
    11e4:	32 e0       	ldi	r19, 0x02	; 2
    11e6:	f8 01       	movw	r30, r16
    11e8:	b7 fe       	sbrs	r11, 7
    11ea:	07 c0       	rjmp	.+14     	; 0x11fa <vfprintf+0x2ac>
    11ec:	60 81       	ld	r22, Z
    11ee:	71 81       	ldd	r23, Z+1	; 0x01
    11f0:	82 81       	ldd	r24, Z+2	; 0x02
    11f2:	93 81       	ldd	r25, Z+3	; 0x03
    11f4:	0c 5f       	subi	r16, 0xFC	; 252
    11f6:	1f 4f       	sbci	r17, 0xFF	; 255
    11f8:	06 c0       	rjmp	.+12     	; 0x1206 <vfprintf+0x2b8>
    11fa:	60 81       	ld	r22, Z
    11fc:	71 81       	ldd	r23, Z+1	; 0x01
    11fe:	80 e0       	ldi	r24, 0x00	; 0
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	0e 5f       	subi	r16, 0xFE	; 254
    1204:	1f 4f       	sbci	r17, 0xFF	; 255
    1206:	a3 01       	movw	r20, r6
    1208:	f1 d0       	rcall	.+482    	; 0x13ec <__ultoa_invert>
    120a:	88 2e       	mov	r8, r24
    120c:	86 18       	sub	r8, r6
    120e:	fb 2d       	mov	r31, r11
    1210:	ff 77       	andi	r31, 0x7F	; 127
    1212:	3f 2e       	mov	r3, r31
    1214:	36 fe       	sbrs	r3, 6
    1216:	0d c0       	rjmp	.+26     	; 0x1232 <vfprintf+0x2e4>
    1218:	23 2d       	mov	r18, r3
    121a:	2e 7f       	andi	r18, 0xFE	; 254
    121c:	a2 2e       	mov	r10, r18
    121e:	89 14       	cp	r8, r9
    1220:	58 f4       	brcc	.+22     	; 0x1238 <vfprintf+0x2ea>
    1222:	34 fe       	sbrs	r3, 4
    1224:	0b c0       	rjmp	.+22     	; 0x123c <vfprintf+0x2ee>
    1226:	32 fc       	sbrc	r3, 2
    1228:	09 c0       	rjmp	.+18     	; 0x123c <vfprintf+0x2ee>
    122a:	83 2d       	mov	r24, r3
    122c:	8e 7e       	andi	r24, 0xEE	; 238
    122e:	a8 2e       	mov	r10, r24
    1230:	05 c0       	rjmp	.+10     	; 0x123c <vfprintf+0x2ee>
    1232:	b8 2c       	mov	r11, r8
    1234:	a3 2c       	mov	r10, r3
    1236:	03 c0       	rjmp	.+6      	; 0x123e <vfprintf+0x2f0>
    1238:	b8 2c       	mov	r11, r8
    123a:	01 c0       	rjmp	.+2      	; 0x123e <vfprintf+0x2f0>
    123c:	b9 2c       	mov	r11, r9
    123e:	a4 fe       	sbrs	r10, 4
    1240:	0f c0       	rjmp	.+30     	; 0x1260 <vfprintf+0x312>
    1242:	fe 01       	movw	r30, r28
    1244:	e8 0d       	add	r30, r8
    1246:	f1 1d       	adc	r31, r1
    1248:	80 81       	ld	r24, Z
    124a:	80 33       	cpi	r24, 0x30	; 48
    124c:	21 f4       	brne	.+8      	; 0x1256 <vfprintf+0x308>
    124e:	9a 2d       	mov	r25, r10
    1250:	99 7e       	andi	r25, 0xE9	; 233
    1252:	a9 2e       	mov	r10, r25
    1254:	09 c0       	rjmp	.+18     	; 0x1268 <vfprintf+0x31a>
    1256:	a2 fe       	sbrs	r10, 2
    1258:	06 c0       	rjmp	.+12     	; 0x1266 <vfprintf+0x318>
    125a:	b3 94       	inc	r11
    125c:	b3 94       	inc	r11
    125e:	04 c0       	rjmp	.+8      	; 0x1268 <vfprintf+0x31a>
    1260:	8a 2d       	mov	r24, r10
    1262:	86 78       	andi	r24, 0x86	; 134
    1264:	09 f0       	breq	.+2      	; 0x1268 <vfprintf+0x31a>
    1266:	b3 94       	inc	r11
    1268:	a3 fc       	sbrc	r10, 3
    126a:	10 c0       	rjmp	.+32     	; 0x128c <vfprintf+0x33e>
    126c:	a0 fe       	sbrs	r10, 0
    126e:	06 c0       	rjmp	.+12     	; 0x127c <vfprintf+0x32e>
    1270:	b2 14       	cp	r11, r2
    1272:	80 f4       	brcc	.+32     	; 0x1294 <vfprintf+0x346>
    1274:	28 0c       	add	r2, r8
    1276:	92 2c       	mov	r9, r2
    1278:	9b 18       	sub	r9, r11
    127a:	0d c0       	rjmp	.+26     	; 0x1296 <vfprintf+0x348>
    127c:	b2 14       	cp	r11, r2
    127e:	58 f4       	brcc	.+22     	; 0x1296 <vfprintf+0x348>
    1280:	b6 01       	movw	r22, r12
    1282:	80 e2       	ldi	r24, 0x20	; 32
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	76 d0       	rcall	.+236    	; 0x1374 <fputc>
    1288:	b3 94       	inc	r11
    128a:	f8 cf       	rjmp	.-16     	; 0x127c <vfprintf+0x32e>
    128c:	b2 14       	cp	r11, r2
    128e:	18 f4       	brcc	.+6      	; 0x1296 <vfprintf+0x348>
    1290:	2b 18       	sub	r2, r11
    1292:	02 c0       	rjmp	.+4      	; 0x1298 <vfprintf+0x34a>
    1294:	98 2c       	mov	r9, r8
    1296:	21 2c       	mov	r2, r1
    1298:	a4 fe       	sbrs	r10, 4
    129a:	0f c0       	rjmp	.+30     	; 0x12ba <vfprintf+0x36c>
    129c:	b6 01       	movw	r22, r12
    129e:	80 e3       	ldi	r24, 0x30	; 48
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	68 d0       	rcall	.+208    	; 0x1374 <fputc>
    12a4:	a2 fe       	sbrs	r10, 2
    12a6:	16 c0       	rjmp	.+44     	; 0x12d4 <vfprintf+0x386>
    12a8:	a1 fc       	sbrc	r10, 1
    12aa:	03 c0       	rjmp	.+6      	; 0x12b2 <vfprintf+0x364>
    12ac:	88 e7       	ldi	r24, 0x78	; 120
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	02 c0       	rjmp	.+4      	; 0x12b6 <vfprintf+0x368>
    12b2:	88 e5       	ldi	r24, 0x58	; 88
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	b6 01       	movw	r22, r12
    12b8:	0c c0       	rjmp	.+24     	; 0x12d2 <vfprintf+0x384>
    12ba:	8a 2d       	mov	r24, r10
    12bc:	86 78       	andi	r24, 0x86	; 134
    12be:	51 f0       	breq	.+20     	; 0x12d4 <vfprintf+0x386>
    12c0:	a1 fe       	sbrs	r10, 1
    12c2:	02 c0       	rjmp	.+4      	; 0x12c8 <vfprintf+0x37a>
    12c4:	8b e2       	ldi	r24, 0x2B	; 43
    12c6:	01 c0       	rjmp	.+2      	; 0x12ca <vfprintf+0x37c>
    12c8:	80 e2       	ldi	r24, 0x20	; 32
    12ca:	a7 fc       	sbrc	r10, 7
    12cc:	8d e2       	ldi	r24, 0x2D	; 45
    12ce:	b6 01       	movw	r22, r12
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	50 d0       	rcall	.+160    	; 0x1374 <fputc>
    12d4:	89 14       	cp	r8, r9
    12d6:	30 f4       	brcc	.+12     	; 0x12e4 <vfprintf+0x396>
    12d8:	b6 01       	movw	r22, r12
    12da:	80 e3       	ldi	r24, 0x30	; 48
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	4a d0       	rcall	.+148    	; 0x1374 <fputc>
    12e0:	9a 94       	dec	r9
    12e2:	f8 cf       	rjmp	.-16     	; 0x12d4 <vfprintf+0x386>
    12e4:	8a 94       	dec	r8
    12e6:	f3 01       	movw	r30, r6
    12e8:	e8 0d       	add	r30, r8
    12ea:	f1 1d       	adc	r31, r1
    12ec:	80 81       	ld	r24, Z
    12ee:	b6 01       	movw	r22, r12
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	40 d0       	rcall	.+128    	; 0x1374 <fputc>
    12f4:	81 10       	cpse	r8, r1
    12f6:	f6 cf       	rjmp	.-20     	; 0x12e4 <vfprintf+0x396>
    12f8:	22 20       	and	r2, r2
    12fa:	09 f4       	brne	.+2      	; 0x12fe <vfprintf+0x3b0>
    12fc:	4e ce       	rjmp	.-868    	; 0xf9a <vfprintf+0x4c>
    12fe:	b6 01       	movw	r22, r12
    1300:	80 e2       	ldi	r24, 0x20	; 32
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	37 d0       	rcall	.+110    	; 0x1374 <fputc>
    1306:	2a 94       	dec	r2
    1308:	f7 cf       	rjmp	.-18     	; 0x12f8 <vfprintf+0x3aa>
    130a:	f6 01       	movw	r30, r12
    130c:	86 81       	ldd	r24, Z+6	; 0x06
    130e:	97 81       	ldd	r25, Z+7	; 0x07
    1310:	02 c0       	rjmp	.+4      	; 0x1316 <vfprintf+0x3c8>
    1312:	8f ef       	ldi	r24, 0xFF	; 255
    1314:	9f ef       	ldi	r25, 0xFF	; 255
    1316:	2b 96       	adiw	r28, 0x0b	; 11
    1318:	0f b6       	in	r0, 0x3f	; 63
    131a:	f8 94       	cli
    131c:	de bf       	out	0x3e, r29	; 62
    131e:	0f be       	out	0x3f, r0	; 63
    1320:	cd bf       	out	0x3d, r28	; 61
    1322:	df 91       	pop	r29
    1324:	cf 91       	pop	r28
    1326:	1f 91       	pop	r17
    1328:	0f 91       	pop	r16
    132a:	ff 90       	pop	r15
    132c:	ef 90       	pop	r14
    132e:	df 90       	pop	r13
    1330:	cf 90       	pop	r12
    1332:	bf 90       	pop	r11
    1334:	af 90       	pop	r10
    1336:	9f 90       	pop	r9
    1338:	8f 90       	pop	r8
    133a:	7f 90       	pop	r7
    133c:	6f 90       	pop	r6
    133e:	5f 90       	pop	r5
    1340:	4f 90       	pop	r4
    1342:	3f 90       	pop	r3
    1344:	2f 90       	pop	r2
    1346:	08 95       	ret

00001348 <strnlen_P>:
    1348:	fc 01       	movw	r30, r24
    134a:	05 90       	lpm	r0, Z+
    134c:	61 50       	subi	r22, 0x01	; 1
    134e:	70 40       	sbci	r23, 0x00	; 0
    1350:	01 10       	cpse	r0, r1
    1352:	d8 f7       	brcc	.-10     	; 0x134a <strnlen_P+0x2>
    1354:	80 95       	com	r24
    1356:	90 95       	com	r25
    1358:	8e 0f       	add	r24, r30
    135a:	9f 1f       	adc	r25, r31
    135c:	08 95       	ret

0000135e <strnlen>:
    135e:	fc 01       	movw	r30, r24
    1360:	61 50       	subi	r22, 0x01	; 1
    1362:	70 40       	sbci	r23, 0x00	; 0
    1364:	01 90       	ld	r0, Z+
    1366:	01 10       	cpse	r0, r1
    1368:	d8 f7       	brcc	.-10     	; 0x1360 <strnlen+0x2>
    136a:	80 95       	com	r24
    136c:	90 95       	com	r25
    136e:	8e 0f       	add	r24, r30
    1370:	9f 1f       	adc	r25, r31
    1372:	08 95       	ret

00001374 <fputc>:
    1374:	0f 93       	push	r16
    1376:	1f 93       	push	r17
    1378:	cf 93       	push	r28
    137a:	df 93       	push	r29
    137c:	fb 01       	movw	r30, r22
    137e:	23 81       	ldd	r18, Z+3	; 0x03
    1380:	21 fd       	sbrc	r18, 1
    1382:	03 c0       	rjmp	.+6      	; 0x138a <fputc+0x16>
    1384:	8f ef       	ldi	r24, 0xFF	; 255
    1386:	9f ef       	ldi	r25, 0xFF	; 255
    1388:	2c c0       	rjmp	.+88     	; 0x13e2 <fputc+0x6e>
    138a:	22 ff       	sbrs	r18, 2
    138c:	16 c0       	rjmp	.+44     	; 0x13ba <fputc+0x46>
    138e:	46 81       	ldd	r20, Z+6	; 0x06
    1390:	57 81       	ldd	r21, Z+7	; 0x07
    1392:	24 81       	ldd	r18, Z+4	; 0x04
    1394:	35 81       	ldd	r19, Z+5	; 0x05
    1396:	42 17       	cp	r20, r18
    1398:	53 07       	cpc	r21, r19
    139a:	44 f4       	brge	.+16     	; 0x13ac <fputc+0x38>
    139c:	a0 81       	ld	r26, Z
    139e:	b1 81       	ldd	r27, Z+1	; 0x01
    13a0:	9d 01       	movw	r18, r26
    13a2:	2f 5f       	subi	r18, 0xFF	; 255
    13a4:	3f 4f       	sbci	r19, 0xFF	; 255
    13a6:	31 83       	std	Z+1, r19	; 0x01
    13a8:	20 83       	st	Z, r18
    13aa:	8c 93       	st	X, r24
    13ac:	26 81       	ldd	r18, Z+6	; 0x06
    13ae:	37 81       	ldd	r19, Z+7	; 0x07
    13b0:	2f 5f       	subi	r18, 0xFF	; 255
    13b2:	3f 4f       	sbci	r19, 0xFF	; 255
    13b4:	37 83       	std	Z+7, r19	; 0x07
    13b6:	26 83       	std	Z+6, r18	; 0x06
    13b8:	14 c0       	rjmp	.+40     	; 0x13e2 <fputc+0x6e>
    13ba:	8b 01       	movw	r16, r22
    13bc:	ec 01       	movw	r28, r24
    13be:	fb 01       	movw	r30, r22
    13c0:	00 84       	ldd	r0, Z+8	; 0x08
    13c2:	f1 85       	ldd	r31, Z+9	; 0x09
    13c4:	e0 2d       	mov	r30, r0
    13c6:	19 95       	eicall
    13c8:	89 2b       	or	r24, r25
    13ca:	e1 f6       	brne	.-72     	; 0x1384 <fputc+0x10>
    13cc:	d8 01       	movw	r26, r16
    13ce:	16 96       	adiw	r26, 0x06	; 6
    13d0:	8d 91       	ld	r24, X+
    13d2:	9c 91       	ld	r25, X
    13d4:	17 97       	sbiw	r26, 0x07	; 7
    13d6:	01 96       	adiw	r24, 0x01	; 1
    13d8:	17 96       	adiw	r26, 0x07	; 7
    13da:	9c 93       	st	X, r25
    13dc:	8e 93       	st	-X, r24
    13de:	16 97       	sbiw	r26, 0x06	; 6
    13e0:	ce 01       	movw	r24, r28
    13e2:	df 91       	pop	r29
    13e4:	cf 91       	pop	r28
    13e6:	1f 91       	pop	r17
    13e8:	0f 91       	pop	r16
    13ea:	08 95       	ret

000013ec <__ultoa_invert>:
    13ec:	fa 01       	movw	r30, r20
    13ee:	aa 27       	eor	r26, r26
    13f0:	28 30       	cpi	r18, 0x08	; 8
    13f2:	51 f1       	breq	.+84     	; 0x1448 <__ultoa_invert+0x5c>
    13f4:	20 31       	cpi	r18, 0x10	; 16
    13f6:	81 f1       	breq	.+96     	; 0x1458 <__ultoa_invert+0x6c>
    13f8:	e8 94       	clt
    13fa:	6f 93       	push	r22
    13fc:	6e 7f       	andi	r22, 0xFE	; 254
    13fe:	6e 5f       	subi	r22, 0xFE	; 254
    1400:	7f 4f       	sbci	r23, 0xFF	; 255
    1402:	8f 4f       	sbci	r24, 0xFF	; 255
    1404:	9f 4f       	sbci	r25, 0xFF	; 255
    1406:	af 4f       	sbci	r26, 0xFF	; 255
    1408:	b1 e0       	ldi	r27, 0x01	; 1
    140a:	3e d0       	rcall	.+124    	; 0x1488 <__ultoa_invert+0x9c>
    140c:	b4 e0       	ldi	r27, 0x04	; 4
    140e:	3c d0       	rcall	.+120    	; 0x1488 <__ultoa_invert+0x9c>
    1410:	67 0f       	add	r22, r23
    1412:	78 1f       	adc	r23, r24
    1414:	89 1f       	adc	r24, r25
    1416:	9a 1f       	adc	r25, r26
    1418:	a1 1d       	adc	r26, r1
    141a:	68 0f       	add	r22, r24
    141c:	79 1f       	adc	r23, r25
    141e:	8a 1f       	adc	r24, r26
    1420:	91 1d       	adc	r25, r1
    1422:	a1 1d       	adc	r26, r1
    1424:	6a 0f       	add	r22, r26
    1426:	71 1d       	adc	r23, r1
    1428:	81 1d       	adc	r24, r1
    142a:	91 1d       	adc	r25, r1
    142c:	a1 1d       	adc	r26, r1
    142e:	20 d0       	rcall	.+64     	; 0x1470 <__ultoa_invert+0x84>
    1430:	09 f4       	brne	.+2      	; 0x1434 <__ultoa_invert+0x48>
    1432:	68 94       	set
    1434:	3f 91       	pop	r19
    1436:	2a e0       	ldi	r18, 0x0A	; 10
    1438:	26 9f       	mul	r18, r22
    143a:	11 24       	eor	r1, r1
    143c:	30 19       	sub	r19, r0
    143e:	30 5d       	subi	r19, 0xD0	; 208
    1440:	31 93       	st	Z+, r19
    1442:	de f6       	brtc	.-74     	; 0x13fa <__ultoa_invert+0xe>
    1444:	cf 01       	movw	r24, r30
    1446:	08 95       	ret
    1448:	46 2f       	mov	r20, r22
    144a:	47 70       	andi	r20, 0x07	; 7
    144c:	40 5d       	subi	r20, 0xD0	; 208
    144e:	41 93       	st	Z+, r20
    1450:	b3 e0       	ldi	r27, 0x03	; 3
    1452:	0f d0       	rcall	.+30     	; 0x1472 <__ultoa_invert+0x86>
    1454:	c9 f7       	brne	.-14     	; 0x1448 <__ultoa_invert+0x5c>
    1456:	f6 cf       	rjmp	.-20     	; 0x1444 <__ultoa_invert+0x58>
    1458:	46 2f       	mov	r20, r22
    145a:	4f 70       	andi	r20, 0x0F	; 15
    145c:	40 5d       	subi	r20, 0xD0	; 208
    145e:	4a 33       	cpi	r20, 0x3A	; 58
    1460:	18 f0       	brcs	.+6      	; 0x1468 <__ultoa_invert+0x7c>
    1462:	49 5d       	subi	r20, 0xD9	; 217
    1464:	31 fd       	sbrc	r19, 1
    1466:	40 52       	subi	r20, 0x20	; 32
    1468:	41 93       	st	Z+, r20
    146a:	02 d0       	rcall	.+4      	; 0x1470 <__ultoa_invert+0x84>
    146c:	a9 f7       	brne	.-22     	; 0x1458 <__ultoa_invert+0x6c>
    146e:	ea cf       	rjmp	.-44     	; 0x1444 <__ultoa_invert+0x58>
    1470:	b4 e0       	ldi	r27, 0x04	; 4
    1472:	a6 95       	lsr	r26
    1474:	97 95       	ror	r25
    1476:	87 95       	ror	r24
    1478:	77 95       	ror	r23
    147a:	67 95       	ror	r22
    147c:	ba 95       	dec	r27
    147e:	c9 f7       	brne	.-14     	; 0x1472 <__ultoa_invert+0x86>
    1480:	00 97       	sbiw	r24, 0x00	; 0
    1482:	61 05       	cpc	r22, r1
    1484:	71 05       	cpc	r23, r1
    1486:	08 95       	ret
    1488:	9b 01       	movw	r18, r22
    148a:	ac 01       	movw	r20, r24
    148c:	0a 2e       	mov	r0, r26
    148e:	06 94       	lsr	r0
    1490:	57 95       	ror	r21
    1492:	47 95       	ror	r20
    1494:	37 95       	ror	r19
    1496:	27 95       	ror	r18
    1498:	ba 95       	dec	r27
    149a:	c9 f7       	brne	.-14     	; 0x148e <__ultoa_invert+0xa2>
    149c:	62 0f       	add	r22, r18
    149e:	73 1f       	adc	r23, r19
    14a0:	84 1f       	adc	r24, r20
    14a2:	95 1f       	adc	r25, r21
    14a4:	a0 1d       	adc	r26, r0
    14a6:	08 95       	ret

000014a8 <__divmodsi4>:
    14a8:	05 2e       	mov	r0, r21
    14aa:	97 fb       	bst	r25, 7
    14ac:	16 f4       	brtc	.+4      	; 0x14b2 <__divmodsi4+0xa>
    14ae:	00 94       	com	r0
    14b0:	0f d0       	rcall	.+30     	; 0x14d0 <__negsi2>
    14b2:	57 fd       	sbrc	r21, 7
    14b4:	05 d0       	rcall	.+10     	; 0x14c0 <__divmodsi4_neg2>
    14b6:	4f db       	rcall	.-2402   	; 0xb56 <__udivmodsi4>
    14b8:	07 fc       	sbrc	r0, 7
    14ba:	02 d0       	rcall	.+4      	; 0x14c0 <__divmodsi4_neg2>
    14bc:	46 f4       	brtc	.+16     	; 0x14ce <__divmodsi4_exit>
    14be:	08 c0       	rjmp	.+16     	; 0x14d0 <__negsi2>

000014c0 <__divmodsi4_neg2>:
    14c0:	50 95       	com	r21
    14c2:	40 95       	com	r20
    14c4:	30 95       	com	r19
    14c6:	21 95       	neg	r18
    14c8:	3f 4f       	sbci	r19, 0xFF	; 255
    14ca:	4f 4f       	sbci	r20, 0xFF	; 255
    14cc:	5f 4f       	sbci	r21, 0xFF	; 255

000014ce <__divmodsi4_exit>:
    14ce:	08 95       	ret

000014d0 <__negsi2>:
    14d0:	90 95       	com	r25
    14d2:	80 95       	com	r24
    14d4:	70 95       	com	r23
    14d6:	61 95       	neg	r22
    14d8:	7f 4f       	sbci	r23, 0xFF	; 255
    14da:	8f 4f       	sbci	r24, 0xFF	; 255
    14dc:	9f 4f       	sbci	r25, 0xFF	; 255
    14de:	08 95       	ret

000014e0 <__muluhisi3>:
    14e0:	0f d0       	rcall	.+30     	; 0x1500 <__umulhisi3>
    14e2:	a5 9f       	mul	r26, r21
    14e4:	90 0d       	add	r25, r0
    14e6:	b4 9f       	mul	r27, r20
    14e8:	90 0d       	add	r25, r0
    14ea:	a4 9f       	mul	r26, r20
    14ec:	80 0d       	add	r24, r0
    14ee:	91 1d       	adc	r25, r1
    14f0:	11 24       	eor	r1, r1
    14f2:	08 95       	ret

000014f4 <__mulshisi3>:
    14f4:	b7 ff       	sbrs	r27, 7
    14f6:	f4 cf       	rjmp	.-24     	; 0x14e0 <__muluhisi3>

000014f8 <__mulohisi3>:
    14f8:	f3 df       	rcall	.-26     	; 0x14e0 <__muluhisi3>
    14fa:	82 1b       	sub	r24, r18
    14fc:	93 0b       	sbc	r25, r19
    14fe:	08 95       	ret

00001500 <__umulhisi3>:
    1500:	a2 9f       	mul	r26, r18
    1502:	b0 01       	movw	r22, r0
    1504:	b3 9f       	mul	r27, r19
    1506:	c0 01       	movw	r24, r0
    1508:	a3 9f       	mul	r26, r19
    150a:	70 0d       	add	r23, r0
    150c:	81 1d       	adc	r24, r1
    150e:	11 24       	eor	r1, r1
    1510:	91 1d       	adc	r25, r1
    1512:	b2 9f       	mul	r27, r18
    1514:	70 0d       	add	r23, r0
    1516:	81 1d       	adc	r24, r1
    1518:	11 24       	eor	r1, r1
    151a:	91 1d       	adc	r25, r1
    151c:	08 95       	ret

0000151e <_exit>:
    151e:	f8 94       	cli

00001520 <__stop_program>:
    1520:	ff cf       	rjmp	.-2      	; 0x1520 <__stop_program>
