
AVRGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000110  00800200  00001634  000016c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001634  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000011c  00800310  00800310  000017d8  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  000017d8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001864  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  000018a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000020d6  00000000  00000000  00001a2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000012fe  00000000  00000000  00003b02  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d63  00000000  00000000  00004e00  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000708  00000000  00000000  00005b64  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000aa3  00000000  00000000  0000626c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000174c  00000000  00000000  00006d0f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0000845b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	d1 c3       	rjmp	.+1954   	; 0x808 <__vector_25>
      66:	00 00       	nop
      68:	10 c4       	rjmp	.+2080   	; 0x88a <__vector_26>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	47 c4       	rjmp	.+2190   	; 0x920 <__vector_36>
      92:	00 00       	nop
      94:	86 c4       	rjmp	.+2316   	; 0x9a2 <__vector_37>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	b5 c4       	rjmp	.+2410   	; 0xa38 <__vector_51>
      ce:	00 00       	nop
      d0:	f4 c4       	rjmp	.+2536   	; 0xaba <__vector_52>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	3b c5       	rjmp	.+2678   	; 0xb50 <__vector_54>
      da:	00 00       	nop
      dc:	7a c5       	rjmp	.+2804   	; 0xbd2 <__vector_55>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e4 e3       	ldi	r30, 0x34	; 52
      fc:	f6 e1       	ldi	r31, 0x16	; 22
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 31       	cpi	r26, 0x10	; 16
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	24 e0       	ldi	r18, 0x04	; 4
     110:	a0 e1       	ldi	r26, 0x10	; 16
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ac 32       	cpi	r26, 0x2C	; 44
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	03 d0       	rcall	.+6      	; 0x126 <main>
     120:	0c 94 18 0b 	jmp	0x1630	; 0x1630 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <main>:
	return 0;
}

int main(void)
{
	    init_stdio(0, 10000000L);
     126:	40 e8       	ldi	r20, 0x80	; 128
     128:	56 e9       	ldi	r21, 0x96	; 150
     12a:	68 e9       	ldi	r22, 0x98	; 152
     12c:	70 e0       	ldi	r23, 0x00	; 0
     12e:	80 e0       	ldi	r24, 0x00	; 0
     130:	32 d2       	rcall	.+1124   	; 0x596 <init_stdio>
	    sei();
     132:	78 94       	sei
	    printf("Initiating Unit Test...\n");
     134:	80 e2       	ldi	r24, 0x20	; 32
     136:	92 e0       	ldi	r25, 0x02	; 2

int tests_run = 0; 

static char * all_tests()
{
	mu_run_suite(utility_tests);
     138:	63 d7       	rcall	.+3782   	; 0x1000 <puts>
     13a:	12 d0       	rcall	.+36     	; 0x160 <utility_tests>
	    init_stdio(0, 10000000L);
	    sei();
	    printf("Initiating Unit Test...\n");
		
		char *result = all_tests();
		if (result != 0) {
     13c:	00 97       	sbiw	r24, 0x00	; 0
     13e:	61 f0       	breq	.+24     	; 0x158 <main+0x32>
			printf("Error: %s\n", result);
     140:	9f 93       	push	r25
     142:	8f 93       	push	r24
     144:	88 e3       	ldi	r24, 0x38	; 56
     146:	92 e0       	ldi	r25, 0x02	; 2
     148:	9f 93       	push	r25
     14a:	8f 93       	push	r24
     14c:	46 d7       	rcall	.+3724   	; 0xfda <printf>
     14e:	0f 90       	pop	r0
     150:	0f 90       	pop	r0
     152:	0f 90       	pop	r0
     154:	0f 90       	pop	r0
		}
		else {
			printf("ALL TESTS PASSED\n");
     156:	03 c0       	rjmp	.+6      	; 0x15e <main+0x38>
     158:	83 e4       	ldi	r24, 0x43	; 67
     15a:	92 e0       	ldi	r25, 0x02	; 2
     15c:	51 d7       	rcall	.+3746   	; 0x1000 <puts>
     15e:	ff cf       	rjmp	.-2      	; 0x15e <main+0x38>

00000160 <utility_tests>:
	
	return 0;
}

char * utility_tests()
{
     160:	4f 92       	push	r4
     162:	5f 92       	push	r5
     164:	6f 92       	push	r6
     166:	7f 92       	push	r7
     168:	8f 92       	push	r8
     16a:	9f 92       	push	r9
     16c:	af 92       	push	r10
     16e:	bf 92       	push	r11
     170:	cf 92       	push	r12
     172:	df 92       	push	r13
     174:	ef 92       	push	r14
     176:	ff 92       	push	r15
     178:	0f 93       	push	r16
     17a:	1f 93       	push	r17
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
	int i0=0, i1=0, i2=0, i3=0, i4=0, i5=0, i6=0, i7=0;
	


	//Level is increase to 1000 and 
	utility_t* u = utility_create();
     180:	60 d1       	rcall	.+704    	; 0x442 <utility_create>
     182:	8c 01       	movw	r16, r24
	u->level = 1000;
     184:	88 ee       	ldi	r24, 0xE8	; 232
     186:	93 e0       	ldi	r25, 0x03	; 3
     188:	d8 01       	movw	r26, r16
     18a:	8d 93       	st	X+, r24
     18c:	9c 93       	st	X, r25
	u->sequence = calloc((u->level + 2), sizeof(int));
     18e:	62 e0       	ldi	r22, 0x02	; 2
     190:	70 e0       	ldi	r23, 0x00	; 0
     192:	8a ee       	ldi	r24, 0xEA	; 234
     194:	93 e0       	ldi	r25, 0x03	; 3
     196:	8a d5       	rcall	.+2836   	; 0xcac <calloc>
     198:	f8 01       	movw	r30, r16
     19a:	93 83       	std	Z+3, r25	; 0x03
     19c:	82 83       	std	Z+2, r24	; 0x02
	generateRandomNumbers(u);
     19e:	c8 01       	movw	r24, r16
     1a0:	83 d1       	rcall	.+774    	; 0x4a8 <generateRandomNumbers>
     1a2:	d8 01       	movw	r26, r16

	//int i;
	for(int i = 0; i < (u->level + 2); i++)
     1a4:	2d 91       	ld	r18, X+
     1a6:	3c 91       	ld	r19, X
     1a8:	11 97       	sbiw	r26, 0x01	; 1
     1aa:	c9 01       	movw	r24, r18
     1ac:	02 96       	adiw	r24, 0x02	; 2
     1ae:	18 16       	cp	r1, r24
     1b0:	19 06       	cpc	r1, r25
     1b2:	0c f0       	brlt	.+2      	; 0x1b6 <utility_tests+0x56>
     1b4:	52 c0       	rjmp	.+164    	; 0x25a <utility_tests+0xfa>
     1b6:	12 96       	adiw	r26, 0x02	; 2
	{
		int randomNumber = u->sequence[i];
     1b8:	ed 91       	ld	r30, X+
     1ba:	fc 91       	ld	r31, X
     1bc:	13 97       	sbiw	r26, 0x03	; 3
     1be:	9c 01       	movw	r18, r24
     1c0:	22 0f       	add	r18, r18
     1c2:	33 1f       	adc	r19, r19
     1c4:	2e 0f       	add	r18, r30
     1c6:	3f 1f       	adc	r19, r31
     1c8:	a1 2c       	mov	r10, r1
     1ca:	b1 2c       	mov	r11, r1
     1cc:	41 2c       	mov	r4, r1
     1ce:	51 2c       	mov	r5, r1
     1d0:	61 2c       	mov	r6, r1
     1d2:	71 2c       	mov	r7, r1
     1d4:	81 2c       	mov	r8, r1
     1d6:	91 2c       	mov	r9, r1
     1d8:	c1 2c       	mov	r12, r1
     1da:	d1 2c       	mov	r13, r1
     1dc:	e1 2c       	mov	r14, r1
     1de:	f1 2c       	mov	r15, r1
     1e0:	c0 e0       	ldi	r28, 0x00	; 0
     1e2:	d0 e0       	ldi	r29, 0x00	; 0
     1e4:	40 e0       	ldi	r20, 0x00	; 0
     1e6:	50 e0       	ldi	r21, 0x00	; 0
     1e8:	81 91       	ld	r24, Z+
     1ea:	91 91       	ld	r25, Z+
     1ec:	00 97       	sbiw	r24, 0x00	; 0
		
		if(randomNumber == 0) i0++;
     1ee:	19 f4       	brne	.+6      	; 0x1f6 <utility_tests+0x96>
     1f0:	4f 5f       	subi	r20, 0xFF	; 255
     1f2:	5f 4f       	sbci	r21, 0xFF	; 255
     1f4:	2e c0       	rjmp	.+92     	; 0x252 <utility_tests+0xf2>
     1f6:	81 30       	cpi	r24, 0x01	; 1
		else if(randomNumber == 1) i1++;
     1f8:	91 05       	cpc	r25, r1
     1fa:	11 f4       	brne	.+4      	; 0x200 <utility_tests+0xa0>
     1fc:	21 96       	adiw	r28, 0x01	; 1
     1fe:	29 c0       	rjmp	.+82     	; 0x252 <utility_tests+0xf2>
     200:	82 30       	cpi	r24, 0x02	; 2
		else if(randomNumber == 2) i2++;
     202:	91 05       	cpc	r25, r1
     204:	21 f4       	brne	.+8      	; 0x20e <utility_tests+0xae>
     206:	bf ef       	ldi	r27, 0xFF	; 255
     208:	eb 1a       	sub	r14, r27
     20a:	fb 0a       	sbc	r15, r27
     20c:	22 c0       	rjmp	.+68     	; 0x252 <utility_tests+0xf2>
     20e:	83 30       	cpi	r24, 0x03	; 3
		else if(randomNumber == 3) i3++;
     210:	91 05       	cpc	r25, r1
     212:	21 f4       	brne	.+8      	; 0x21c <utility_tests+0xbc>
     214:	8f ef       	ldi	r24, 0xFF	; 255
     216:	c8 1a       	sub	r12, r24
     218:	d8 0a       	sbc	r13, r24
     21a:	1b c0       	rjmp	.+54     	; 0x252 <utility_tests+0xf2>
     21c:	84 30       	cpi	r24, 0x04	; 4
		else if(randomNumber == 4) i4++;
     21e:	91 05       	cpc	r25, r1
     220:	21 f4       	brne	.+8      	; 0x22a <utility_tests+0xca>
     222:	9f ef       	ldi	r25, 0xFF	; 255
     224:	89 1a       	sub	r8, r25
     226:	99 0a       	sbc	r9, r25
     228:	14 c0       	rjmp	.+40     	; 0x252 <utility_tests+0xf2>
     22a:	85 30       	cpi	r24, 0x05	; 5
		else if(randomNumber == 5) i5++;
     22c:	91 05       	cpc	r25, r1
     22e:	21 f4       	brne	.+8      	; 0x238 <utility_tests+0xd8>
     230:	af ef       	ldi	r26, 0xFF	; 255
     232:	6a 1a       	sub	r6, r26
     234:	7a 0a       	sbc	r7, r26
     236:	0d c0       	rjmp	.+26     	; 0x252 <utility_tests+0xf2>
     238:	86 30       	cpi	r24, 0x06	; 6
		else if(randomNumber == 6) i6++;
     23a:	91 05       	cpc	r25, r1
     23c:	21 f4       	brne	.+8      	; 0x246 <utility_tests+0xe6>
     23e:	bf ef       	ldi	r27, 0xFF	; 255
     240:	4b 1a       	sub	r4, r27
     242:	5b 0a       	sbc	r5, r27
     244:	06 c0       	rjmp	.+12     	; 0x252 <utility_tests+0xf2>
     246:	07 97       	sbiw	r24, 0x07	; 7
		else if(randomNumber == 7) i7++;
     248:	09 f0       	breq	.+2      	; 0x24c <utility_tests+0xec>
     24a:	c7 c0       	rjmp	.+398    	; 0x3da <utility_tests+0x27a>
     24c:	8f ef       	ldi	r24, 0xFF	; 255
     24e:	a8 1a       	sub	r10, r24
     250:	b8 0a       	sbc	r11, r24
     252:	e2 17       	cp	r30, r18
	u->level = 1000;
	u->sequence = calloc((u->level + 2), sizeof(int));
	generateRandomNumbers(u);

	//int i;
	for(int i = 0; i < (u->level + 2); i++)
     254:	f3 07       	cpc	r31, r19
     256:	41 f6       	brne	.-112    	; 0x1e8 <utility_tests+0x88>
     258:	10 c0       	rjmp	.+32     	; 0x27a <utility_tests+0x11a>
     25a:	a1 2c       	mov	r10, r1
#include <unistd.h>

static char* test_randomNumbers()
{
	bool test_fail = false;
	int i0=0, i1=0, i2=0, i3=0, i4=0, i5=0, i6=0, i7=0;
     25c:	b1 2c       	mov	r11, r1
     25e:	41 2c       	mov	r4, r1
     260:	51 2c       	mov	r5, r1
     262:	61 2c       	mov	r6, r1
     264:	71 2c       	mov	r7, r1
     266:	81 2c       	mov	r8, r1
     268:	91 2c       	mov	r9, r1
     26a:	c1 2c       	mov	r12, r1
     26c:	d1 2c       	mov	r13, r1
     26e:	e1 2c       	mov	r14, r1
     270:	f1 2c       	mov	r15, r1
     272:	c0 e0       	ldi	r28, 0x00	; 0
     274:	d0 e0       	ldi	r29, 0x00	; 0
     276:	40 e0       	ldi	r20, 0x00	; 0
     278:	50 e0       	ldi	r21, 0x00	; 0
     27a:	5f 93       	push	r21
			utility_destroy(u);
			return 0;
		}
	}
	
	printf("\nInput0: %d", i0);
     27c:	4f 93       	push	r20
     27e:	86 ea       	ldi	r24, 0xA6	; 166
     280:	92 e0       	ldi	r25, 0x02	; 2
     282:	9f 93       	push	r25
     284:	8f 93       	push	r24
     286:	a9 d6       	rcall	.+3410   	; 0xfda <printf>
     288:	df 93       	push	r29
	printf("\nInput1: %d", i1);
     28a:	cf 93       	push	r28
     28c:	82 eb       	ldi	r24, 0xB2	; 178
     28e:	92 e0       	ldi	r25, 0x02	; 2
     290:	9f 93       	push	r25
     292:	8f 93       	push	r24
     294:	a2 d6       	rcall	.+3396   	; 0xfda <printf>
     296:	ff 92       	push	r15
	printf("\nInput2: %d", i2);
     298:	ef 92       	push	r14
     29a:	8e eb       	ldi	r24, 0xBE	; 190
     29c:	92 e0       	ldi	r25, 0x02	; 2
     29e:	9f 93       	push	r25
     2a0:	8f 93       	push	r24
     2a2:	9b d6       	rcall	.+3382   	; 0xfda <printf>
     2a4:	df 92       	push	r13
	printf("\nInput3: %d", i3);
     2a6:	cf 92       	push	r12
     2a8:	8a ec       	ldi	r24, 0xCA	; 202
     2aa:	92 e0       	ldi	r25, 0x02	; 2
     2ac:	9f 93       	push	r25
     2ae:	8f 93       	push	r24
     2b0:	94 d6       	rcall	.+3368   	; 0xfda <printf>
     2b2:	9f 92       	push	r9
	printf("\nInput4: %d", i4);
     2b4:	8f 92       	push	r8
     2b6:	86 ed       	ldi	r24, 0xD6	; 214
     2b8:	92 e0       	ldi	r25, 0x02	; 2
     2ba:	9f 93       	push	r25
     2bc:	8f 93       	push	r24
     2be:	8d d6       	rcall	.+3354   	; 0xfda <printf>
     2c0:	7f 92       	push	r7
	printf("\nInput5: %d", i5);
     2c2:	6f 92       	push	r6
     2c4:	82 ee       	ldi	r24, 0xE2	; 226
     2c6:	92 e0       	ldi	r25, 0x02	; 2
     2c8:	9f 93       	push	r25
     2ca:	8f 93       	push	r24
     2cc:	86 d6       	rcall	.+3340   	; 0xfda <printf>
     2ce:	5f 92       	push	r5
	printf("\nInput6: %d", i6);
     2d0:	4f 92       	push	r4
     2d2:	8e ee       	ldi	r24, 0xEE	; 238
     2d4:	92 e0       	ldi	r25, 0x02	; 2
     2d6:	9f 93       	push	r25
     2d8:	8f 93       	push	r24
     2da:	7f d6       	rcall	.+3326   	; 0xfda <printf>
     2dc:	bf 92       	push	r11
	printf("\nInput6: %d\n", i7);
     2de:	af 92       	push	r10
     2e0:	8a ef       	ldi	r24, 0xFA	; 250
     2e2:	92 e0       	ldi	r25, 0x02	; 2
     2e4:	9f 93       	push	r25
     2e6:	8f 93       	push	r24
     2e8:	78 d6       	rcall	.+3312   	; 0xfda <printf>
     2ea:	ed b7       	in	r30, 0x3d	; 61
	if(i6 <= 100 && i6 >= 150) test_fail = true;
	if(i7 <= 100 && i7 >= 150) test_fail = true;
	
	mu_assert("Numbers are not random", !test_fail);
	
	utility_destroy(u);	
     2ec:	fe b7       	in	r31, 0x3e	; 62
     2ee:	b0 96       	adiw	r30, 0x20	; 32
     2f0:	0f b6       	in	r0, 0x3f	; 63
     2f2:	f8 94       	cli
     2f4:	fe bf       	out	0x3e, r31	; 62
     2f6:	0f be       	out	0x3f, r0	; 63
     2f8:	ed bf       	out	0x3d, r30	; 61
     2fa:	c8 01       	movw	r24, r16
     2fc:	b7 d0       	rcall	.+366    	; 0x46c <utility_destroy>
     2fe:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <__data_end>
	return 0;
}

char * utility_tests()
{
	mu_run_test(test_randomNumbers);
     302:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <__data_end+0x1>
     306:	01 96       	adiw	r24, 0x01	; 1
     308:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <__data_end+0x1>
     30c:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <__data_end>
	return 0;
}

static char* test_increaseLevel()
{
	utility_t* u = utility_create();
     310:	98 d0       	rcall	.+304    	; 0x442 <utility_create>
     312:	8c 01       	movw	r16, r24
     314:	f1 2c       	mov	r15, r1
	bool test_fail = false;
     316:	c2 e0       	ldi	r28, 0x02	; 2
	
	for(int i=2; i<10; i++)
     318:	d0 e0       	ldi	r29, 0x00	; 0
     31a:	ee 24       	eor	r14, r14
	{
		increaseLevel(u);
		if(u->level != i) test_fail = true;		
     31c:	e3 94       	inc	r14
     31e:	c8 01       	movw	r24, r16
	utility_t* u = utility_create();
	bool test_fail = false;
	
	for(int i=2; i<10; i++)
	{
		increaseLevel(u);
     320:	ec d0       	rcall	.+472    	; 0x4fa <increaseLevel>
     322:	d8 01       	movw	r26, r16
     324:	8d 91       	ld	r24, X+
		if(u->level != i) test_fail = true;		
     326:	9c 91       	ld	r25, X
     328:	8c 17       	cp	r24, r28
     32a:	9d 07       	cpc	r25, r29
     32c:	09 f0       	breq	.+2      	; 0x330 <utility_tests+0x1d0>
     32e:	fe 2c       	mov	r15, r14
     330:	21 96       	adiw	r28, 0x01	; 1
static char* test_increaseLevel()
{
	utility_t* u = utility_create();
	bool test_fail = false;
	
	for(int i=2; i<10; i++)
     332:	ca 30       	cpi	r28, 0x0A	; 10
     334:	d1 05       	cpc	r29, r1
     336:	99 f7       	brne	.-26     	; 0x31e <utility_tests+0x1be>
	{
		increaseLevel(u);
		if(u->level != i) test_fail = true;		
	}
	
	mu_assert("Increase level failed", !test_fail);
     338:	f1 10       	cpse	r15, r1
	utility_destroy(u);
     33a:	5b c0       	rjmp	.+182    	; 0x3f2 <utility_tests+0x292>
     33c:	c8 01       	movw	r24, r16
}

char * utility_tests()
{
	mu_run_test(test_randomNumbers);
	mu_run_test(test_increaseLevel);
     33e:	96 d0       	rcall	.+300    	; 0x46c <utility_destroy>
     340:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <__data_end>
     344:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <__data_end+0x1>
     348:	01 96       	adiw	r24, 0x01	; 1
     34a:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <__data_end+0x1>
	return 0;
}

static char* test_resetLevel()
{
	utility_t* u = utility_create();
     34e:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <__data_end>
	
	increaseLevel(u);
     352:	77 d0       	rcall	.+238    	; 0x442 <utility_create>
	increaseLevel(u);
     354:	ec 01       	movw	r28, r24
     356:	d1 d0       	rcall	.+418    	; 0x4fa <increaseLevel>
     358:	ce 01       	movw	r24, r28
	increaseLevel(u);
     35a:	cf d0       	rcall	.+414    	; 0x4fa <increaseLevel>
     35c:	ce 01       	movw	r24, r28
     35e:	cd d0       	rcall	.+410    	; 0x4fa <increaseLevel>
	//Level == 4
	
	resetLevel(u);
     360:	ce 01       	movw	r24, r28
     362:	e1 d0       	rcall	.+450    	; 0x526 <resetLevel>
     364:	88 81       	ld	r24, Y
	
	mu_assert("Reset level failed", u->level == 1);
     366:	99 81       	ldd	r25, Y+1	; 0x01
     368:	01 97       	sbiw	r24, 0x01	; 1
     36a:	09 f0       	breq	.+2      	; 0x36e <utility_tests+0x20e>
     36c:	4e c0       	rjmp	.+156    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
	utility_destroy(u);
     36e:	ce 01       	movw	r24, r28
     370:	7d d0       	rcall	.+250    	; 0x46c <utility_destroy>

char * utility_tests()
{
	mu_run_test(test_randomNumbers);
	mu_run_test(test_increaseLevel);
	mu_run_test(test_resetLevel);
     372:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <__data_end>
     376:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <__data_end+0x1>
     37a:	01 96       	adiw	r24, 0x01	; 1
     37c:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <__data_end+0x1>
     380:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <__data_end>

static char* test_compareValues()
{
	int a = 1, b = 1;
	
	mu_assert("a != b", compareValues(a, b));
     384:	61 e0       	ldi	r22, 0x01	; 1
     386:	70 e0       	ldi	r23, 0x00	; 0
     388:	81 e0       	ldi	r24, 0x01	; 1
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	e1 d0       	rcall	.+450    	; 0x550 <compareValues>
     38e:	88 23       	and	r24, r24
     390:	89 f0       	breq	.+34     	; 0x3b4 <utility_tests+0x254>
	
	b = 2;
	mu_assert("Reset level failed", !compareValues(a, b));
     392:	62 e0       	ldi	r22, 0x02	; 2
     394:	70 e0       	ldi	r23, 0x00	; 0
     396:	81 e0       	ldi	r24, 0x01	; 1
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	da d0       	rcall	.+436    	; 0x550 <compareValues>
     39c:	81 11       	cpse	r24, r1
     39e:	0d c0       	rjmp	.+26     	; 0x3ba <utility_tests+0x25a>
     3a0:	62 e0       	ldi	r22, 0x02	; 2

	a = 3;
	mu_assert("Reset level failed", !compareValues(a, b));
     3a2:	70 e0       	ldi	r23, 0x00	; 0
     3a4:	83 e0       	ldi	r24, 0x03	; 3
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	d3 d0       	rcall	.+422    	; 0x550 <compareValues>
     3aa:	81 11       	cpse	r24, r1
     3ac:	09 c0       	rjmp	.+18     	; 0x3c0 <utility_tests+0x260>
     3ae:	80 e0       	ldi	r24, 0x00	; 0
     3b0:	90 e0       	ldi	r25, 0x00	; 0
	
	return 0;
     3b2:	08 c0       	rjmp	.+16     	; 0x3c4 <utility_tests+0x264>
     3b4:	84 e5       	ldi	r24, 0x54	; 84
     3b6:	92 e0       	ldi	r25, 0x02	; 2

static char* test_compareValues()
{
	int a = 1, b = 1;
	
	mu_assert("a != b", compareValues(a, b));
     3b8:	05 c0       	rjmp	.+10     	; 0x3c4 <utility_tests+0x264>
     3ba:	8b e5       	ldi	r24, 0x5B	; 91
     3bc:	92 e0       	ldi	r25, 0x02	; 2
	
	b = 2;
	mu_assert("Reset level failed", !compareValues(a, b));
     3be:	02 c0       	rjmp	.+4      	; 0x3c4 <utility_tests+0x264>
     3c0:	8b e5       	ldi	r24, 0x5B	; 91
     3c2:	92 e0       	ldi	r25, 0x02	; 2

	a = 3;
	mu_assert("Reset level failed", !compareValues(a, b));
     3c4:	20 91 10 03 	lds	r18, 0x0310	; 0x800310 <__data_end>
char * utility_tests()
{
	mu_run_test(test_randomNumbers);
	mu_run_test(test_increaseLevel);
	mu_run_test(test_resetLevel);
	mu_run_test(test_compareValues);
     3c8:	30 91 11 03 	lds	r19, 0x0311	; 0x800311 <__data_end+0x1>
     3cc:	2f 5f       	subi	r18, 0xFF	; 255
     3ce:	3f 4f       	sbci	r19, 0xFF	; 255
     3d0:	30 93 11 03 	sts	0x0311, r19	; 0x800311 <__data_end+0x1>
     3d4:	20 93 10 03 	sts	0x0310, r18	; 0x800310 <__data_end>
     3d8:	23 c0       	rjmp	.+70     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     3da:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <__data_end>
	return 0;
}

char * utility_tests()
{
	mu_run_test(test_randomNumbers);
     3de:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <__data_end+0x1>
     3e2:	01 96       	adiw	r24, 0x01	; 1
     3e4:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <__data_end+0x1>
     3e8:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <__data_end>
     3ec:	8e e6       	ldi	r24, 0x6E	; 110
     3ee:	92 e0       	ldi	r25, 0x02	; 2
		else if(randomNumber == 4) i4++;
		else if(randomNumber == 5) i5++;
		else if(randomNumber == 6) i6++;
		else if(randomNumber == 7) i7++;
		else{
			mu_assert("Random number not between 0 and 7", 0);
     3f0:	17 c0       	rjmp	.+46     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     3f2:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <__data_end>
}

char * utility_tests()
{
	mu_run_test(test_randomNumbers);
	mu_run_test(test_increaseLevel);
     3f6:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <__data_end+0x1>
     3fa:	01 96       	adiw	r24, 0x01	; 1
     3fc:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <__data_end+0x1>
     400:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <__data_end>
     404:	80 e9       	ldi	r24, 0x90	; 144
     406:	92 e0       	ldi	r25, 0x02	; 2
	{
		increaseLevel(u);
		if(u->level != i) test_fail = true;		
	}
	
	mu_assert("Increase level failed", !test_fail);
     408:	0b c0       	rjmp	.+22     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     40a:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <__data_end>

char * utility_tests()
{
	mu_run_test(test_randomNumbers);
	mu_run_test(test_increaseLevel);
	mu_run_test(test_resetLevel);
     40e:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <__data_end+0x1>
     412:	01 96       	adiw	r24, 0x01	; 1
     414:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <__data_end+0x1>
     418:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <__data_end>
     41c:	8b e5       	ldi	r24, 0x5B	; 91
     41e:	92 e0       	ldi	r25, 0x02	; 2
	increaseLevel(u);
	//Level == 4
	
	resetLevel(u);
	
	mu_assert("Reset level failed", u->level == 1);
     420:	df 91       	pop	r29
     422:	cf 91       	pop	r28
	mu_run_test(test_randomNumbers);
	mu_run_test(test_increaseLevel);
	mu_run_test(test_resetLevel);
	mu_run_test(test_compareValues);
	return 0;
}
     424:	1f 91       	pop	r17
     426:	0f 91       	pop	r16
     428:	ff 90       	pop	r15
     42a:	ef 90       	pop	r14
     42c:	df 90       	pop	r13
     42e:	cf 90       	pop	r12
     430:	bf 90       	pop	r11
     432:	af 90       	pop	r10
     434:	9f 90       	pop	r9
     436:	8f 90       	pop	r8
     438:	7f 90       	pop	r7
     43a:	6f 90       	pop	r6
     43c:	5f 90       	pop	r5
     43e:	4f 90       	pop	r4
     440:	08 95       	ret

00000442 <utility_create>:
#include <time.h> 
#include <avr/io.h>
#include <unistd.h>

utility_t* utility_create()
{	
     442:	cf 93       	push	r28
     444:	df 93       	push	r29
	utility_t* new_utility = (utility_t*)malloc(sizeof(struct utility_t));
     446:	84 e0       	ldi	r24, 0x04	; 4
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	4a d4       	rcall	.+2196   	; 0xce0 <malloc>
     44c:	ec 01       	movw	r28, r24
	new_utility->level = 1;
     44e:	81 e0       	ldi	r24, 0x01	; 1
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	99 83       	std	Y+1, r25	; 0x01
     454:	88 83       	st	Y, r24
	new_utility->sequence = calloc((new_utility->level + 2), sizeof(int));
     456:	62 e0       	ldi	r22, 0x02	; 2
     458:	70 e0       	ldi	r23, 0x00	; 0
     45a:	83 e0       	ldi	r24, 0x03	; 3
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	26 d4       	rcall	.+2124   	; 0xcac <calloc>
     460:	9b 83       	std	Y+3, r25	; 0x03
     462:	8a 83       	std	Y+2, r24	; 0x02
	return new_utility;
}
     464:	ce 01       	movw	r24, r28
     466:	df 91       	pop	r29
     468:	cf 91       	pop	r28
     46a:	08 95       	ret

0000046c <utility_destroy>:

void utility_destroy(utility_t *self)
{
	free(self);
     46c:	d1 c4       	rjmp	.+2466   	; 0xe10 <free>
     46e:	08 95       	ret

00000470 <randomNumber>:
}

int randomNumber()
{	
     470:	cf 93       	push	r28
     472:	df 93       	push	r29
	int n = rand() % 8;
     474:	9d d5       	rcall	.+2874   	; 0xfb0 <rand>
     476:	ec 01       	movw	r28, r24
     478:	c7 70       	andi	r28, 0x07	; 7
     47a:	d0 78       	andi	r29, 0x80	; 128
     47c:	dd 23       	and	r29, r29
     47e:	24 f4       	brge	.+8      	; 0x488 <randomNumber+0x18>
     480:	21 97       	sbiw	r28, 0x01	; 1
     482:	c8 6f       	ori	r28, 0xF8	; 248
     484:	df 6f       	ori	r29, 0xFF	; 255
     486:	21 96       	adiw	r28, 0x01	; 1
	printf(" %d", n);
     488:	df 93       	push	r29
     48a:	cf 93       	push	r28
     48c:	8e ea       	ldi	r24, 0xAE	; 174
     48e:	92 e0       	ldi	r25, 0x02	; 2
     490:	9f 93       	push	r25
     492:	8f 93       	push	r24
     494:	a2 d5       	rcall	.+2884   	; 0xfda <printf>
	return n;	
     496:	0f 90       	pop	r0
     498:	0f 90       	pop	r0
     49a:	0f 90       	pop	r0
     49c:	0f 90       	pop	r0
}
     49e:	8c 2f       	mov	r24, r28
     4a0:	9d 2f       	mov	r25, r29
     4a2:	df 91       	pop	r29
     4a4:	cf 91       	pop	r28
     4a6:	08 95       	ret

000004a8 <generateRandomNumbers>:

void generateRandomNumbers(utility_t *self)
{
     4a8:	ef 92       	push	r14
     4aa:	ff 92       	push	r15
     4ac:	0f 93       	push	r16
     4ae:	1f 93       	push	r17
     4b0:	cf 93       	push	r28
     4b2:	df 93       	push	r29
     4b4:	fc 01       	movw	r30, r24
	int *sequence = self->sequence;
     4b6:	32 81       	ldd	r19, Z+2	; 0x02
     4b8:	23 81       	ldd	r18, Z+3	; 0x03
	int i;
	for(i = 0; i < (self->level + 2); i++)
     4ba:	80 81       	ld	r24, Z
     4bc:	91 81       	ldd	r25, Z+1	; 0x01
     4be:	02 96       	adiw	r24, 0x02	; 2
     4c0:	18 16       	cp	r1, r24
     4c2:	19 06       	cpc	r1, r25
     4c4:	9c f4       	brge	.+38     	; 0x4ec <generateRandomNumbers+0x44>
     4c6:	7f 01       	movw	r14, r30
     4c8:	03 2f       	mov	r16, r19
     4ca:	12 2f       	mov	r17, r18
     4cc:	c0 e0       	ldi	r28, 0x00	; 0
     4ce:	d0 e0       	ldi	r29, 0x00	; 0
	{
		sequence[i] = randomNumber();
     4d0:	cf df       	rcall	.-98     	; 0x470 <randomNumber>
     4d2:	f8 01       	movw	r30, r16
     4d4:	81 93       	st	Z+, r24
     4d6:	91 93       	st	Z+, r25
     4d8:	8f 01       	movw	r16, r30

void generateRandomNumbers(utility_t *self)
{
	int *sequence = self->sequence;
	int i;
	for(i = 0; i < (self->level + 2); i++)
     4da:	21 96       	adiw	r28, 0x01	; 1
     4dc:	f7 01       	movw	r30, r14
     4de:	20 81       	ld	r18, Z
     4e0:	31 81       	ldd	r19, Z+1	; 0x01
     4e2:	2e 5f       	subi	r18, 0xFE	; 254
     4e4:	3f 4f       	sbci	r19, 0xFF	; 255
     4e6:	c2 17       	cp	r28, r18
     4e8:	d3 07       	cpc	r29, r19
     4ea:	94 f3       	brlt	.-28     	; 0x4d0 <generateRandomNumbers+0x28>
	{
		sequence[i] = randomNumber();
	}
}
     4ec:	df 91       	pop	r29
     4ee:	cf 91       	pop	r28
     4f0:	1f 91       	pop	r17
     4f2:	0f 91       	pop	r16
     4f4:	ff 90       	pop	r15
     4f6:	ef 90       	pop	r14
     4f8:	08 95       	ret

000004fa <increaseLevel>:

void increaseLevel(utility_t *self)
{
     4fa:	cf 93       	push	r28
     4fc:	df 93       	push	r29
     4fe:	ec 01       	movw	r28, r24
	self->level++;
     500:	88 81       	ld	r24, Y
     502:	99 81       	ldd	r25, Y+1	; 0x01
     504:	01 96       	adiw	r24, 0x01	; 1
     506:	99 83       	std	Y+1, r25	; 0x01
     508:	88 83       	st	Y, r24
	free(self->sequence);
     50a:	8a 81       	ldd	r24, Y+2	; 0x02
     50c:	9b 81       	ldd	r25, Y+3	; 0x03
     50e:	80 d4       	rcall	.+2304   	; 0xe10 <free>
	self->sequence = calloc((self->level + 2), sizeof(int));
     510:	88 81       	ld	r24, Y
     512:	99 81       	ldd	r25, Y+1	; 0x01
     514:	62 e0       	ldi	r22, 0x02	; 2
     516:	70 e0       	ldi	r23, 0x00	; 0
     518:	02 96       	adiw	r24, 0x02	; 2
     51a:	c8 d3       	rcall	.+1936   	; 0xcac <calloc>
     51c:	9b 83       	std	Y+3, r25	; 0x03
     51e:	8a 83       	std	Y+2, r24	; 0x02
}
     520:	df 91       	pop	r29
     522:	cf 91       	pop	r28
     524:	08 95       	ret

00000526 <resetLevel>:

void resetLevel(utility_t *self)
{
     526:	cf 93       	push	r28
     528:	df 93       	push	r29
     52a:	ec 01       	movw	r28, r24
	self->level = 1;
     52c:	81 e0       	ldi	r24, 0x01	; 1
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	99 83       	std	Y+1, r25	; 0x01
     532:	88 83       	st	Y, r24
	free(self->sequence);
     534:	8a 81       	ldd	r24, Y+2	; 0x02
     536:	9b 81       	ldd	r25, Y+3	; 0x03
     538:	6b d4       	rcall	.+2262   	; 0xe10 <free>
	self->sequence = calloc((self->level + 2), sizeof(int));
     53a:	88 81       	ld	r24, Y
     53c:	99 81       	ldd	r25, Y+1	; 0x01
     53e:	62 e0       	ldi	r22, 0x02	; 2
     540:	70 e0       	ldi	r23, 0x00	; 0
     542:	02 96       	adiw	r24, 0x02	; 2
     544:	b3 d3       	rcall	.+1894   	; 0xcac <calloc>
     546:	9b 83       	std	Y+3, r25	; 0x03
     548:	8a 83       	std	Y+2, r24	; 0x02
}
     54a:	df 91       	pop	r29
     54c:	cf 91       	pop	r28
     54e:	08 95       	ret

00000550 <compareValues>:

bool compareValues(int a, int b)
{
     550:	21 e0       	ldi	r18, 0x01	; 1
     552:	86 17       	cp	r24, r22
     554:	97 07       	cpc	r25, r23
     556:	09 f0       	breq	.+2      	; 0x55a <compareValues+0xa>
     558:	20 e0       	ldi	r18, 0x00	; 0
	if(a == b)
	{
		return true;
	}
	return false;
}
     55a:	82 2f       	mov	r24, r18
     55c:	08 95       	ret

0000055e <usart_getchar>:
     55e:	cf 93       	push	r28
     560:	df 93       	push	r29
     562:	1f 92       	push	r1
     564:	cd b7       	in	r28, 0x3d	; 61
     566:	de b7       	in	r29, 0x3e	; 62
     568:	be 01       	movw	r22, r28
     56a:	6f 5f       	subi	r22, 0xFF	; 255
     56c:	7f 4f       	sbci	r23, 0xFF	; 255
     56e:	85 e9       	ldi	r24, 0x95	; 149
     570:	93 e0       	ldi	r25, 0x03	; 3
     572:	66 d0       	rcall	.+204    	; 0x640 <buffer_get_item>
     574:	81 11       	cpse	r24, r1
     576:	f8 cf       	rjmp	.-16     	; 0x568 <usart_getchar+0xa>
     578:	89 81       	ldd	r24, Y+1	; 0x01
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	0f 90       	pop	r0
     57e:	df 91       	pop	r29
     580:	cf 91       	pop	r28
     582:	08 95       	ret

00000584 <usart_putchar>:
     584:	68 2f       	mov	r22, r24
     586:	80 91 18 04 	lds	r24, 0x0418	; 0x800418 <_com_serial_instance>
     58a:	90 91 19 04 	lds	r25, 0x0419	; 0x800419 <_com_serial_instance+0x1>
     58e:	24 d1       	rcall	.+584    	; 0x7d8 <serial_send_byte>
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	08 95       	ret

00000596 <init_stdio>:
     596:	4f 92       	push	r4
     598:	5f 92       	push	r5
     59a:	6f 92       	push	r6
     59c:	7f 92       	push	r7
     59e:	8f 92       	push	r8
     5a0:	9f 92       	push	r9
     5a2:	af 92       	push	r10
     5a4:	cf 92       	push	r12
     5a6:	ef 92       	push	r14
     5a8:	0f 93       	push	r16
     5aa:	1f 93       	push	r17
     5ac:	cf 93       	push	r28
     5ae:	c8 2f       	mov	r28, r24
     5b0:	2a 01       	movw	r4, r20
     5b2:	3b 01       	movw	r6, r22
     5b4:	85 e9       	ldi	r24, 0x95	; 149
     5b6:	93 e0       	ldi	r25, 0x03	; 3
     5b8:	3a d0       	rcall	.+116    	; 0x62e <buffer_init>
     5ba:	82 e1       	ldi	r24, 0x12	; 18
     5bc:	93 e0       	ldi	r25, 0x03	; 3
     5be:	37 d0       	rcall	.+110    	; 0x62e <buffer_init>
     5c0:	1f 92       	push	r1
     5c2:	1f 92       	push	r1
     5c4:	82 e1       	ldi	r24, 0x12	; 18
     5c6:	93 e0       	ldi	r25, 0x03	; 3
     5c8:	9f 93       	push	r25
     5ca:	8f 93       	push	r24
     5cc:	0f 2e       	mov	r0, r31
     5ce:	f5 e9       	ldi	r31, 0x95	; 149
     5d0:	8f 2e       	mov	r8, r31
     5d2:	f3 e0       	ldi	r31, 0x03	; 3
     5d4:	9f 2e       	mov	r9, r31
     5d6:	f0 2d       	mov	r31, r0
     5d8:	a1 2c       	mov	r10, r1
     5da:	c1 2c       	mov	r12, r1
     5dc:	0f 2e       	mov	r0, r31
     5de:	f3 e0       	ldi	r31, 0x03	; 3
     5e0:	ef 2e       	mov	r14, r31
     5e2:	f0 2d       	mov	r31, r0
     5e4:	00 e0       	ldi	r16, 0x00	; 0
     5e6:	11 ee       	ldi	r17, 0xE1	; 225
     5e8:	20 e0       	ldi	r18, 0x00	; 0
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	b3 01       	movw	r22, r6
     5ee:	a2 01       	movw	r20, r4
     5f0:	8c 2f       	mov	r24, r28
     5f2:	70 d0       	rcall	.+224    	; 0x6d4 <serial_new_instance>
     5f4:	90 93 19 04 	sts	0x0419, r25	; 0x800419 <_com_serial_instance+0x1>
     5f8:	80 93 18 04 	sts	0x0418, r24	; 0x800418 <_com_serial_instance>
     5fc:	e6 e2       	ldi	r30, 0x26	; 38
     5fe:	f4 e0       	ldi	r31, 0x04	; 4
     600:	8a e0       	ldi	r24, 0x0A	; 10
     602:	92 e0       	ldi	r25, 0x02	; 2
     604:	91 83       	std	Z+1, r25	; 0x01
     606:	80 83       	st	Z, r24
     608:	93 83       	std	Z+3, r25	; 0x03
     60a:	82 83       	std	Z+2, r24	; 0x02
     60c:	0f 90       	pop	r0
     60e:	0f 90       	pop	r0
     610:	0f 90       	pop	r0
     612:	0f 90       	pop	r0
     614:	cf 91       	pop	r28
     616:	1f 91       	pop	r17
     618:	0f 91       	pop	r16
     61a:	ef 90       	pop	r14
     61c:	cf 90       	pop	r12
     61e:	af 90       	pop	r10
     620:	9f 90       	pop	r9
     622:	8f 90       	pop	r8
     624:	7f 90       	pop	r7
     626:	6f 90       	pop	r6
     628:	5f 90       	pop	r5
     62a:	4f 90       	pop	r4
     62c:	08 95       	ret

0000062e <buffer_init>:
     62e:	fc 01       	movw	r30, r24
     630:	e0 58       	subi	r30, 0x80	; 128
     632:	ff 4f       	sbci	r31, 0xFF	; 255
     634:	10 82       	st	Z, r1
     636:	31 96       	adiw	r30, 0x01	; 1
     638:	10 82       	st	Z, r1
     63a:	31 96       	adiw	r30, 0x01	; 1
     63c:	10 82       	st	Z, r1
     63e:	08 95       	ret

00000640 <buffer_get_item>:
     640:	fc 01       	movw	r30, r24
     642:	ee 57       	subi	r30, 0x7E	; 126
     644:	ff 4f       	sbci	r31, 0xFF	; 255
     646:	20 81       	ld	r18, Z
     648:	22 23       	and	r18, r18
     64a:	f9 f0       	breq	.+62     	; 0x68a <buffer_get_item+0x4a>
     64c:	31 97       	sbiw	r30, 0x01	; 1
     64e:	20 81       	ld	r18, Z
     650:	dc 01       	movw	r26, r24
     652:	a2 0f       	add	r26, r18
     654:	b1 1d       	adc	r27, r1
     656:	2c 91       	ld	r18, X
     658:	db 01       	movw	r26, r22
     65a:	2c 93       	st	X, r18
     65c:	20 81       	ld	r18, Z
     65e:	30 e0       	ldi	r19, 0x00	; 0
     660:	2f 5f       	subi	r18, 0xFF	; 255
     662:	3f 4f       	sbci	r19, 0xFF	; 255
     664:	2f 77       	andi	r18, 0x7F	; 127
     666:	30 78       	andi	r19, 0x80	; 128
     668:	33 23       	and	r19, r19
     66a:	34 f4       	brge	.+12     	; 0x678 <buffer_get_item+0x38>
     66c:	21 50       	subi	r18, 0x01	; 1
     66e:	31 09       	sbc	r19, r1
     670:	20 68       	ori	r18, 0x80	; 128
     672:	3f 6f       	ori	r19, 0xFF	; 255
     674:	2f 5f       	subi	r18, 0xFF	; 255
     676:	3f 4f       	sbci	r19, 0xFF	; 255
     678:	20 83       	st	Z, r18
     67a:	fc 01       	movw	r30, r24
     67c:	ee 57       	subi	r30, 0x7E	; 126
     67e:	ff 4f       	sbci	r31, 0xFF	; 255
     680:	80 81       	ld	r24, Z
     682:	81 50       	subi	r24, 0x01	; 1
     684:	80 83       	st	Z, r24
     686:	80 e0       	ldi	r24, 0x00	; 0
     688:	08 95       	ret
     68a:	81 e0       	ldi	r24, 0x01	; 1
     68c:	08 95       	ret

0000068e <buffer_put_item>:
     68e:	fc 01       	movw	r30, r24
     690:	ee 57       	subi	r30, 0x7E	; 126
     692:	ff 4f       	sbci	r31, 0xFF	; 255
     694:	40 81       	ld	r20, Z
     696:	44 23       	and	r20, r20
     698:	dc f0       	brlt	.+54     	; 0x6d0 <buffer_put_item+0x42>
     69a:	32 97       	sbiw	r30, 0x02	; 2
     69c:	20 81       	ld	r18, Z
     69e:	30 e0       	ldi	r19, 0x00	; 0
     6a0:	dc 01       	movw	r26, r24
     6a2:	a2 0f       	add	r26, r18
     6a4:	b3 1f       	adc	r27, r19
     6a6:	6c 93       	st	X, r22
     6a8:	2f 5f       	subi	r18, 0xFF	; 255
     6aa:	3f 4f       	sbci	r19, 0xFF	; 255
     6ac:	2f 77       	andi	r18, 0x7F	; 127
     6ae:	30 78       	andi	r19, 0x80	; 128
     6b0:	33 23       	and	r19, r19
     6b2:	34 f4       	brge	.+12     	; 0x6c0 <buffer_put_item+0x32>
     6b4:	21 50       	subi	r18, 0x01	; 1
     6b6:	31 09       	sbc	r19, r1
     6b8:	20 68       	ori	r18, 0x80	; 128
     6ba:	3f 6f       	ori	r19, 0xFF	; 255
     6bc:	2f 5f       	subi	r18, 0xFF	; 255
     6be:	3f 4f       	sbci	r19, 0xFF	; 255
     6c0:	20 83       	st	Z, r18
     6c2:	fc 01       	movw	r30, r24
     6c4:	ee 57       	subi	r30, 0x7E	; 126
     6c6:	ff 4f       	sbci	r31, 0xFF	; 255
     6c8:	4f 5f       	subi	r20, 0xFF	; 255
     6ca:	40 83       	st	Z, r20
     6cc:	80 e0       	ldi	r24, 0x00	; 0
     6ce:	08 95       	ret
     6d0:	82 e0       	ldi	r24, 0x02	; 2
     6d2:	08 95       	ret

000006d4 <serial_new_instance>:
     6d4:	4f 92       	push	r4
     6d6:	5f 92       	push	r5
     6d8:	6f 92       	push	r6
     6da:	7f 92       	push	r7
     6dc:	8f 92       	push	r8
     6de:	9f 92       	push	r9
     6e0:	df 92       	push	r13
     6e2:	ef 92       	push	r14
     6e4:	ff 92       	push	r15
     6e6:	0f 93       	push	r16
     6e8:	1f 93       	push	r17
     6ea:	cf 93       	push	r28
     6ec:	df 93       	push	r29
     6ee:	00 d0       	rcall	.+0      	; 0x6f0 <serial_new_instance+0x1c>
     6f0:	1f 92       	push	r1
     6f2:	cd b7       	in	r28, 0x3d	; 61
     6f4:	de b7       	in	r29, 0x3e	; 62
     6f6:	d8 2e       	mov	r13, r24
     6f8:	49 83       	std	Y+1, r20	; 0x01
     6fa:	5a 83       	std	Y+2, r21	; 0x02
     6fc:	6b 83       	std	Y+3, r22	; 0x03
     6fe:	7c 83       	std	Y+4, r23	; 0x04
     700:	28 01       	movw	r4, r16
     702:	39 01       	movw	r6, r18
     704:	88 e0       	ldi	r24, 0x08	; 8
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	eb d2       	rcall	.+1494   	; 0xce0 <malloc>
     70a:	7c 01       	movw	r14, r24
     70c:	8d 2d       	mov	r24, r13
     70e:	90 e0       	ldi	r25, 0x00	; 0
     710:	88 0f       	add	r24, r24
     712:	99 1f       	adc	r25, r25
     714:	fc 01       	movw	r30, r24
     716:	e6 5e       	subi	r30, 0xE6	; 230
     718:	fb 4f       	sbci	r31, 0xFB	; 251
     71a:	f1 82       	std	Z+1, r15	; 0x01
     71c:	e0 82       	st	Z, r14
     71e:	fc 01       	movw	r30, r24
     720:	e8 5e       	subi	r30, 0xE8	; 232
     722:	fd 4f       	sbci	r31, 0xFD	; 253
     724:	80 81       	ld	r24, Z
     726:	91 81       	ldd	r25, Z+1	; 0x01
     728:	d7 01       	movw	r26, r14
     72a:	11 96       	adiw	r26, 0x01	; 1
     72c:	9c 93       	st	X, r25
     72e:	8e 93       	st	-X, r24
     730:	8d 89       	ldd	r24, Y+21	; 0x15
     732:	9e 89       	ldd	r25, Y+22	; 0x16
     734:	13 96       	adiw	r26, 0x03	; 3
     736:	9c 93       	st	X, r25
     738:	8e 93       	st	-X, r24
     73a:	12 97       	sbiw	r26, 0x02	; 2
     73c:	15 96       	adiw	r26, 0x05	; 5
     73e:	9c 92       	st	X, r9
     740:	8e 92       	st	-X, r8
     742:	14 97       	sbiw	r26, 0x04	; 4
     744:	8f 89       	ldd	r24, Y+23	; 0x17
     746:	98 8d       	ldd	r25, Y+24	; 0x18
     748:	17 96       	adiw	r26, 0x07	; 7
     74a:	9c 93       	st	X, r25
     74c:	8e 93       	st	-X, r24
     74e:	16 97       	sbiw	r26, 0x06	; 6
     750:	df b6       	in	r13, 0x3f	; 63
     752:	f8 94       	cli
     754:	ed 91       	ld	r30, X+
     756:	fc 91       	ld	r31, X
     758:	11 97       	sbiw	r26, 0x01	; 1
     75a:	36 97       	sbiw	r30, 0x06	; 6
     75c:	80 81       	ld	r24, Z
     75e:	82 60       	ori	r24, 0x02	; 2
     760:	80 83       	st	Z, r24
     762:	8d 90       	ld	r8, X+
     764:	9c 90       	ld	r9, X
     766:	d3 01       	movw	r26, r6
     768:	c2 01       	movw	r24, r4
     76a:	88 0f       	add	r24, r24
     76c:	99 1f       	adc	r25, r25
     76e:	aa 1f       	adc	r26, r26
     770:	bb 1f       	adc	r27, r27
     772:	88 0f       	add	r24, r24
     774:	99 1f       	adc	r25, r25
     776:	aa 1f       	adc	r26, r26
     778:	bb 1f       	adc	r27, r27
     77a:	9c 01       	movw	r18, r24
     77c:	ad 01       	movw	r20, r26
     77e:	22 0f       	add	r18, r18
     780:	33 1f       	adc	r19, r19
     782:	44 1f       	adc	r20, r20
     784:	55 1f       	adc	r21, r21
     786:	69 81       	ldd	r22, Y+1	; 0x01
     788:	7a 81       	ldd	r23, Y+2	; 0x02
     78a:	8b 81       	ldd	r24, Y+3	; 0x03
     78c:	9c 81       	ldd	r25, Y+4	; 0x04
     78e:	6c d2       	rcall	.+1240   	; 0xc68 <__udivmodsi4>
     790:	21 50       	subi	r18, 0x01	; 1
     792:	f4 01       	movw	r30, r8
     794:	32 97       	sbiw	r30, 0x02	; 2
     796:	20 83       	st	Z, r18
     798:	d7 01       	movw	r26, r14
     79a:	ed 91       	ld	r30, X+
     79c:	fc 91       	ld	r31, X
     79e:	11 97       	sbiw	r26, 0x01	; 1
     7a0:	35 97       	sbiw	r30, 0x05	; 5
     7a2:	88 e9       	ldi	r24, 0x98	; 152
     7a4:	80 83       	st	Z, r24
     7a6:	ed 91       	ld	r30, X+
     7a8:	fc 91       	ld	r31, X
     7aa:	34 97       	sbiw	r30, 0x04	; 4
     7ac:	86 e0       	ldi	r24, 0x06	; 6
     7ae:	80 83       	st	Z, r24
     7b0:	df be       	out	0x3f, r13	; 63
     7b2:	c7 01       	movw	r24, r14
     7b4:	0f 90       	pop	r0
     7b6:	0f 90       	pop	r0
     7b8:	0f 90       	pop	r0
     7ba:	0f 90       	pop	r0
     7bc:	df 91       	pop	r29
     7be:	cf 91       	pop	r28
     7c0:	1f 91       	pop	r17
     7c2:	0f 91       	pop	r16
     7c4:	ff 90       	pop	r15
     7c6:	ef 90       	pop	r14
     7c8:	df 90       	pop	r13
     7ca:	9f 90       	pop	r9
     7cc:	8f 90       	pop	r8
     7ce:	7f 90       	pop	r7
     7d0:	6f 90       	pop	r6
     7d2:	5f 90       	pop	r5
     7d4:	4f 90       	pop	r4
     7d6:	08 95       	ret

000007d8 <serial_send_byte>:
     7d8:	cf 93       	push	r28
     7da:	df 93       	push	r29
     7dc:	fc 01       	movw	r30, r24
     7de:	82 81       	ldd	r24, Z+2	; 0x02
     7e0:	93 81       	ldd	r25, Z+3	; 0x03
     7e2:	00 97       	sbiw	r24, 0x00	; 0
     7e4:	59 f0       	breq	.+22     	; 0x7fc <serial_send_byte+0x24>
     7e6:	ef 01       	movw	r28, r30
     7e8:	52 df       	rcall	.-348    	; 0x68e <buffer_put_item>
     7ea:	81 11       	cpse	r24, r1
     7ec:	09 c0       	rjmp	.+18     	; 0x800 <serial_send_byte+0x28>
     7ee:	e8 81       	ld	r30, Y
     7f0:	f9 81       	ldd	r31, Y+1	; 0x01
     7f2:	35 97       	sbiw	r30, 0x05	; 5
     7f4:	90 81       	ld	r25, Z
     7f6:	90 62       	ori	r25, 0x20	; 32
     7f8:	90 83       	st	Z, r25
     7fa:	03 c0       	rjmp	.+6      	; 0x802 <serial_send_byte+0x2a>
     7fc:	82 e0       	ldi	r24, 0x02	; 2
     7fe:	01 c0       	rjmp	.+2      	; 0x802 <serial_send_byte+0x2a>
     800:	82 e0       	ldi	r24, 0x02	; 2
     802:	df 91       	pop	r29
     804:	cf 91       	pop	r28
     806:	08 95       	ret

00000808 <__vector_25>:
     808:	1f 92       	push	r1
     80a:	0f 92       	push	r0
     80c:	0f b6       	in	r0, 0x3f	; 63
     80e:	0f 92       	push	r0
     810:	11 24       	eor	r1, r1
     812:	0b b6       	in	r0, 0x3b	; 59
     814:	0f 92       	push	r0
     816:	2f 93       	push	r18
     818:	3f 93       	push	r19
     81a:	4f 93       	push	r20
     81c:	5f 93       	push	r21
     81e:	6f 93       	push	r22
     820:	7f 93       	push	r23
     822:	8f 93       	push	r24
     824:	9f 93       	push	r25
     826:	af 93       	push	r26
     828:	bf 93       	push	r27
     82a:	cf 93       	push	r28
     82c:	ef 93       	push	r30
     82e:	ff 93       	push	r31
     830:	e0 91 1a 04 	lds	r30, 0x041A	; 0x80041a <_ser_handle>
     834:	f0 91 1b 04 	lds	r31, 0x041B	; 0x80041b <_ser_handle+0x1>
     838:	30 97       	sbiw	r30, 0x00	; 0
     83a:	99 f0       	breq	.+38     	; 0x862 <__vector_25+0x5a>
     83c:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     840:	6c 2f       	mov	r22, r28
     842:	84 81       	ldd	r24, Z+4	; 0x04
     844:	95 81       	ldd	r25, Z+5	; 0x05
     846:	23 df       	rcall	.-442    	; 0x68e <buffer_put_item>
     848:	80 91 1a 04 	lds	r24, 0x041A	; 0x80041a <_ser_handle>
     84c:	90 91 1b 04 	lds	r25, 0x041B	; 0x80041b <_ser_handle+0x1>
     850:	dc 01       	movw	r26, r24
     852:	16 96       	adiw	r26, 0x06	; 6
     854:	ed 91       	ld	r30, X+
     856:	fc 91       	ld	r31, X
     858:	17 97       	sbiw	r26, 0x07	; 7
     85a:	30 97       	sbiw	r30, 0x00	; 0
     85c:	11 f0       	breq	.+4      	; 0x862 <__vector_25+0x5a>
     85e:	6c 2f       	mov	r22, r28
     860:	19 95       	eicall
     862:	ff 91       	pop	r31
     864:	ef 91       	pop	r30
     866:	cf 91       	pop	r28
     868:	bf 91       	pop	r27
     86a:	af 91       	pop	r26
     86c:	9f 91       	pop	r25
     86e:	8f 91       	pop	r24
     870:	7f 91       	pop	r23
     872:	6f 91       	pop	r22
     874:	5f 91       	pop	r21
     876:	4f 91       	pop	r20
     878:	3f 91       	pop	r19
     87a:	2f 91       	pop	r18
     87c:	0f 90       	pop	r0
     87e:	0b be       	out	0x3b, r0	; 59
     880:	0f 90       	pop	r0
     882:	0f be       	out	0x3f, r0	; 63
     884:	0f 90       	pop	r0
     886:	1f 90       	pop	r1
     888:	18 95       	reti

0000088a <__vector_26>:
     88a:	1f 92       	push	r1
     88c:	0f 92       	push	r0
     88e:	0f b6       	in	r0, 0x3f	; 63
     890:	0f 92       	push	r0
     892:	11 24       	eor	r1, r1
     894:	0b b6       	in	r0, 0x3b	; 59
     896:	0f 92       	push	r0
     898:	2f 93       	push	r18
     89a:	3f 93       	push	r19
     89c:	4f 93       	push	r20
     89e:	5f 93       	push	r21
     8a0:	6f 93       	push	r22
     8a2:	7f 93       	push	r23
     8a4:	8f 93       	push	r24
     8a6:	9f 93       	push	r25
     8a8:	af 93       	push	r26
     8aa:	bf 93       	push	r27
     8ac:	ef 93       	push	r30
     8ae:	ff 93       	push	r31
     8b0:	cf 93       	push	r28
     8b2:	df 93       	push	r29
     8b4:	1f 92       	push	r1
     8b6:	cd b7       	in	r28, 0x3d	; 61
     8b8:	de b7       	in	r29, 0x3e	; 62
     8ba:	e0 91 1a 04 	lds	r30, 0x041A	; 0x80041a <_ser_handle>
     8be:	f0 91 1b 04 	lds	r31, 0x041B	; 0x80041b <_ser_handle+0x1>
     8c2:	30 97       	sbiw	r30, 0x00	; 0
     8c4:	91 f0       	breq	.+36     	; 0x8ea <__vector_26+0x60>
     8c6:	be 01       	movw	r22, r28
     8c8:	6f 5f       	subi	r22, 0xFF	; 255
     8ca:	7f 4f       	sbci	r23, 0xFF	; 255
     8cc:	82 81       	ldd	r24, Z+2	; 0x02
     8ce:	93 81       	ldd	r25, Z+3	; 0x03
     8d0:	b7 de       	rcall	.-658    	; 0x640 <buffer_get_item>
     8d2:	81 11       	cpse	r24, r1
     8d4:	04 c0       	rjmp	.+8      	; 0x8de <__vector_26+0x54>
     8d6:	89 81       	ldd	r24, Y+1	; 0x01
     8d8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     8dc:	0b c0       	rjmp	.+22     	; 0x8f4 <__vector_26+0x6a>
     8de:	e1 ec       	ldi	r30, 0xC1	; 193
     8e0:	f0 e0       	ldi	r31, 0x00	; 0
     8e2:	80 81       	ld	r24, Z
     8e4:	8f 7d       	andi	r24, 0xDF	; 223
     8e6:	80 83       	st	Z, r24
     8e8:	05 c0       	rjmp	.+10     	; 0x8f4 <__vector_26+0x6a>
     8ea:	e1 ec       	ldi	r30, 0xC1	; 193
     8ec:	f0 e0       	ldi	r31, 0x00	; 0
     8ee:	80 81       	ld	r24, Z
     8f0:	8f 7d       	andi	r24, 0xDF	; 223
     8f2:	80 83       	st	Z, r24
     8f4:	0f 90       	pop	r0
     8f6:	df 91       	pop	r29
     8f8:	cf 91       	pop	r28
     8fa:	ff 91       	pop	r31
     8fc:	ef 91       	pop	r30
     8fe:	bf 91       	pop	r27
     900:	af 91       	pop	r26
     902:	9f 91       	pop	r25
     904:	8f 91       	pop	r24
     906:	7f 91       	pop	r23
     908:	6f 91       	pop	r22
     90a:	5f 91       	pop	r21
     90c:	4f 91       	pop	r20
     90e:	3f 91       	pop	r19
     910:	2f 91       	pop	r18
     912:	0f 90       	pop	r0
     914:	0b be       	out	0x3b, r0	; 59
     916:	0f 90       	pop	r0
     918:	0f be       	out	0x3f, r0	; 63
     91a:	0f 90       	pop	r0
     91c:	1f 90       	pop	r1
     91e:	18 95       	reti

00000920 <__vector_36>:
     920:	1f 92       	push	r1
     922:	0f 92       	push	r0
     924:	0f b6       	in	r0, 0x3f	; 63
     926:	0f 92       	push	r0
     928:	11 24       	eor	r1, r1
     92a:	0b b6       	in	r0, 0x3b	; 59
     92c:	0f 92       	push	r0
     92e:	2f 93       	push	r18
     930:	3f 93       	push	r19
     932:	4f 93       	push	r20
     934:	5f 93       	push	r21
     936:	6f 93       	push	r22
     938:	7f 93       	push	r23
     93a:	8f 93       	push	r24
     93c:	9f 93       	push	r25
     93e:	af 93       	push	r26
     940:	bf 93       	push	r27
     942:	cf 93       	push	r28
     944:	ef 93       	push	r30
     946:	ff 93       	push	r31
     948:	e0 91 1c 04 	lds	r30, 0x041C	; 0x80041c <_ser_handle+0x2>
     94c:	f0 91 1d 04 	lds	r31, 0x041D	; 0x80041d <_ser_handle+0x3>
     950:	30 97       	sbiw	r30, 0x00	; 0
     952:	99 f0       	breq	.+38     	; 0x97a <__vector_36+0x5a>
     954:	c0 91 ce 00 	lds	r28, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     958:	6c 2f       	mov	r22, r28
     95a:	84 81       	ldd	r24, Z+4	; 0x04
     95c:	95 81       	ldd	r25, Z+5	; 0x05
     95e:	97 de       	rcall	.-722    	; 0x68e <buffer_put_item>
     960:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <_ser_handle+0x2>
     964:	90 91 1d 04 	lds	r25, 0x041D	; 0x80041d <_ser_handle+0x3>
     968:	dc 01       	movw	r26, r24
     96a:	16 96       	adiw	r26, 0x06	; 6
     96c:	ed 91       	ld	r30, X+
     96e:	fc 91       	ld	r31, X
     970:	17 97       	sbiw	r26, 0x07	; 7
     972:	30 97       	sbiw	r30, 0x00	; 0
     974:	11 f0       	breq	.+4      	; 0x97a <__vector_36+0x5a>
     976:	6c 2f       	mov	r22, r28
     978:	19 95       	eicall
     97a:	ff 91       	pop	r31
     97c:	ef 91       	pop	r30
     97e:	cf 91       	pop	r28
     980:	bf 91       	pop	r27
     982:	af 91       	pop	r26
     984:	9f 91       	pop	r25
     986:	8f 91       	pop	r24
     988:	7f 91       	pop	r23
     98a:	6f 91       	pop	r22
     98c:	5f 91       	pop	r21
     98e:	4f 91       	pop	r20
     990:	3f 91       	pop	r19
     992:	2f 91       	pop	r18
     994:	0f 90       	pop	r0
     996:	0b be       	out	0x3b, r0	; 59
     998:	0f 90       	pop	r0
     99a:	0f be       	out	0x3f, r0	; 63
     99c:	0f 90       	pop	r0
     99e:	1f 90       	pop	r1
     9a0:	18 95       	reti

000009a2 <__vector_37>:
     9a2:	1f 92       	push	r1
     9a4:	0f 92       	push	r0
     9a6:	0f b6       	in	r0, 0x3f	; 63
     9a8:	0f 92       	push	r0
     9aa:	11 24       	eor	r1, r1
     9ac:	0b b6       	in	r0, 0x3b	; 59
     9ae:	0f 92       	push	r0
     9b0:	2f 93       	push	r18
     9b2:	3f 93       	push	r19
     9b4:	4f 93       	push	r20
     9b6:	5f 93       	push	r21
     9b8:	6f 93       	push	r22
     9ba:	7f 93       	push	r23
     9bc:	8f 93       	push	r24
     9be:	9f 93       	push	r25
     9c0:	af 93       	push	r26
     9c2:	bf 93       	push	r27
     9c4:	ef 93       	push	r30
     9c6:	ff 93       	push	r31
     9c8:	cf 93       	push	r28
     9ca:	df 93       	push	r29
     9cc:	1f 92       	push	r1
     9ce:	cd b7       	in	r28, 0x3d	; 61
     9d0:	de b7       	in	r29, 0x3e	; 62
     9d2:	e0 91 1c 04 	lds	r30, 0x041C	; 0x80041c <_ser_handle+0x2>
     9d6:	f0 91 1d 04 	lds	r31, 0x041D	; 0x80041d <_ser_handle+0x3>
     9da:	30 97       	sbiw	r30, 0x00	; 0
     9dc:	91 f0       	breq	.+36     	; 0xa02 <__vector_37+0x60>
     9de:	be 01       	movw	r22, r28
     9e0:	6f 5f       	subi	r22, 0xFF	; 255
     9e2:	7f 4f       	sbci	r23, 0xFF	; 255
     9e4:	82 81       	ldd	r24, Z+2	; 0x02
     9e6:	93 81       	ldd	r25, Z+3	; 0x03
     9e8:	2b de       	rcall	.-938    	; 0x640 <buffer_get_item>
     9ea:	81 11       	cpse	r24, r1
     9ec:	04 c0       	rjmp	.+8      	; 0x9f6 <__vector_37+0x54>
     9ee:	89 81       	ldd	r24, Y+1	; 0x01
     9f0:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     9f4:	0b c0       	rjmp	.+22     	; 0xa0c <__vector_37+0x6a>
     9f6:	e9 ec       	ldi	r30, 0xC9	; 201
     9f8:	f0 e0       	ldi	r31, 0x00	; 0
     9fa:	80 81       	ld	r24, Z
     9fc:	8f 7d       	andi	r24, 0xDF	; 223
     9fe:	80 83       	st	Z, r24
     a00:	05 c0       	rjmp	.+10     	; 0xa0c <__vector_37+0x6a>
     a02:	e9 ec       	ldi	r30, 0xC9	; 201
     a04:	f0 e0       	ldi	r31, 0x00	; 0
     a06:	80 81       	ld	r24, Z
     a08:	8f 7d       	andi	r24, 0xDF	; 223
     a0a:	80 83       	st	Z, r24
     a0c:	0f 90       	pop	r0
     a0e:	df 91       	pop	r29
     a10:	cf 91       	pop	r28
     a12:	ff 91       	pop	r31
     a14:	ef 91       	pop	r30
     a16:	bf 91       	pop	r27
     a18:	af 91       	pop	r26
     a1a:	9f 91       	pop	r25
     a1c:	8f 91       	pop	r24
     a1e:	7f 91       	pop	r23
     a20:	6f 91       	pop	r22
     a22:	5f 91       	pop	r21
     a24:	4f 91       	pop	r20
     a26:	3f 91       	pop	r19
     a28:	2f 91       	pop	r18
     a2a:	0f 90       	pop	r0
     a2c:	0b be       	out	0x3b, r0	; 59
     a2e:	0f 90       	pop	r0
     a30:	0f be       	out	0x3f, r0	; 63
     a32:	0f 90       	pop	r0
     a34:	1f 90       	pop	r1
     a36:	18 95       	reti

00000a38 <__vector_51>:
     a38:	1f 92       	push	r1
     a3a:	0f 92       	push	r0
     a3c:	0f b6       	in	r0, 0x3f	; 63
     a3e:	0f 92       	push	r0
     a40:	11 24       	eor	r1, r1
     a42:	0b b6       	in	r0, 0x3b	; 59
     a44:	0f 92       	push	r0
     a46:	2f 93       	push	r18
     a48:	3f 93       	push	r19
     a4a:	4f 93       	push	r20
     a4c:	5f 93       	push	r21
     a4e:	6f 93       	push	r22
     a50:	7f 93       	push	r23
     a52:	8f 93       	push	r24
     a54:	9f 93       	push	r25
     a56:	af 93       	push	r26
     a58:	bf 93       	push	r27
     a5a:	cf 93       	push	r28
     a5c:	ef 93       	push	r30
     a5e:	ff 93       	push	r31
     a60:	e0 91 1e 04 	lds	r30, 0x041E	; 0x80041e <_ser_handle+0x4>
     a64:	f0 91 1f 04 	lds	r31, 0x041F	; 0x80041f <_ser_handle+0x5>
     a68:	30 97       	sbiw	r30, 0x00	; 0
     a6a:	99 f0       	breq	.+38     	; 0xa92 <__vector_51+0x5a>
     a6c:	c0 91 d6 00 	lds	r28, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     a70:	6c 2f       	mov	r22, r28
     a72:	84 81       	ldd	r24, Z+4	; 0x04
     a74:	95 81       	ldd	r25, Z+5	; 0x05
     a76:	0b de       	rcall	.-1002   	; 0x68e <buffer_put_item>
     a78:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <_ser_handle+0x4>
     a7c:	90 91 1f 04 	lds	r25, 0x041F	; 0x80041f <_ser_handle+0x5>
     a80:	dc 01       	movw	r26, r24
     a82:	16 96       	adiw	r26, 0x06	; 6
     a84:	ed 91       	ld	r30, X+
     a86:	fc 91       	ld	r31, X
     a88:	17 97       	sbiw	r26, 0x07	; 7
     a8a:	30 97       	sbiw	r30, 0x00	; 0
     a8c:	11 f0       	breq	.+4      	; 0xa92 <__vector_51+0x5a>
     a8e:	6c 2f       	mov	r22, r28
     a90:	19 95       	eicall
     a92:	ff 91       	pop	r31
     a94:	ef 91       	pop	r30
     a96:	cf 91       	pop	r28
     a98:	bf 91       	pop	r27
     a9a:	af 91       	pop	r26
     a9c:	9f 91       	pop	r25
     a9e:	8f 91       	pop	r24
     aa0:	7f 91       	pop	r23
     aa2:	6f 91       	pop	r22
     aa4:	5f 91       	pop	r21
     aa6:	4f 91       	pop	r20
     aa8:	3f 91       	pop	r19
     aaa:	2f 91       	pop	r18
     aac:	0f 90       	pop	r0
     aae:	0b be       	out	0x3b, r0	; 59
     ab0:	0f 90       	pop	r0
     ab2:	0f be       	out	0x3f, r0	; 63
     ab4:	0f 90       	pop	r0
     ab6:	1f 90       	pop	r1
     ab8:	18 95       	reti

00000aba <__vector_52>:
     aba:	1f 92       	push	r1
     abc:	0f 92       	push	r0
     abe:	0f b6       	in	r0, 0x3f	; 63
     ac0:	0f 92       	push	r0
     ac2:	11 24       	eor	r1, r1
     ac4:	0b b6       	in	r0, 0x3b	; 59
     ac6:	0f 92       	push	r0
     ac8:	2f 93       	push	r18
     aca:	3f 93       	push	r19
     acc:	4f 93       	push	r20
     ace:	5f 93       	push	r21
     ad0:	6f 93       	push	r22
     ad2:	7f 93       	push	r23
     ad4:	8f 93       	push	r24
     ad6:	9f 93       	push	r25
     ad8:	af 93       	push	r26
     ada:	bf 93       	push	r27
     adc:	ef 93       	push	r30
     ade:	ff 93       	push	r31
     ae0:	cf 93       	push	r28
     ae2:	df 93       	push	r29
     ae4:	1f 92       	push	r1
     ae6:	cd b7       	in	r28, 0x3d	; 61
     ae8:	de b7       	in	r29, 0x3e	; 62
     aea:	e0 91 1e 04 	lds	r30, 0x041E	; 0x80041e <_ser_handle+0x4>
     aee:	f0 91 1f 04 	lds	r31, 0x041F	; 0x80041f <_ser_handle+0x5>
     af2:	30 97       	sbiw	r30, 0x00	; 0
     af4:	91 f0       	breq	.+36     	; 0xb1a <__vector_52+0x60>
     af6:	be 01       	movw	r22, r28
     af8:	6f 5f       	subi	r22, 0xFF	; 255
     afa:	7f 4f       	sbci	r23, 0xFF	; 255
     afc:	82 81       	ldd	r24, Z+2	; 0x02
     afe:	93 81       	ldd	r25, Z+3	; 0x03
     b00:	9f dd       	rcall	.-1218   	; 0x640 <buffer_get_item>
     b02:	81 11       	cpse	r24, r1
     b04:	04 c0       	rjmp	.+8      	; 0xb0e <__vector_52+0x54>
     b06:	89 81       	ldd	r24, Y+1	; 0x01
     b08:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     b0c:	0b c0       	rjmp	.+22     	; 0xb24 <__vector_52+0x6a>
     b0e:	e1 ed       	ldi	r30, 0xD1	; 209
     b10:	f0 e0       	ldi	r31, 0x00	; 0
     b12:	80 81       	ld	r24, Z
     b14:	8f 7d       	andi	r24, 0xDF	; 223
     b16:	80 83       	st	Z, r24
     b18:	05 c0       	rjmp	.+10     	; 0xb24 <__vector_52+0x6a>
     b1a:	e1 ed       	ldi	r30, 0xD1	; 209
     b1c:	f0 e0       	ldi	r31, 0x00	; 0
     b1e:	80 81       	ld	r24, Z
     b20:	8f 7d       	andi	r24, 0xDF	; 223
     b22:	80 83       	st	Z, r24
     b24:	0f 90       	pop	r0
     b26:	df 91       	pop	r29
     b28:	cf 91       	pop	r28
     b2a:	ff 91       	pop	r31
     b2c:	ef 91       	pop	r30
     b2e:	bf 91       	pop	r27
     b30:	af 91       	pop	r26
     b32:	9f 91       	pop	r25
     b34:	8f 91       	pop	r24
     b36:	7f 91       	pop	r23
     b38:	6f 91       	pop	r22
     b3a:	5f 91       	pop	r21
     b3c:	4f 91       	pop	r20
     b3e:	3f 91       	pop	r19
     b40:	2f 91       	pop	r18
     b42:	0f 90       	pop	r0
     b44:	0b be       	out	0x3b, r0	; 59
     b46:	0f 90       	pop	r0
     b48:	0f be       	out	0x3f, r0	; 63
     b4a:	0f 90       	pop	r0
     b4c:	1f 90       	pop	r1
     b4e:	18 95       	reti

00000b50 <__vector_54>:
     b50:	1f 92       	push	r1
     b52:	0f 92       	push	r0
     b54:	0f b6       	in	r0, 0x3f	; 63
     b56:	0f 92       	push	r0
     b58:	11 24       	eor	r1, r1
     b5a:	0b b6       	in	r0, 0x3b	; 59
     b5c:	0f 92       	push	r0
     b5e:	2f 93       	push	r18
     b60:	3f 93       	push	r19
     b62:	4f 93       	push	r20
     b64:	5f 93       	push	r21
     b66:	6f 93       	push	r22
     b68:	7f 93       	push	r23
     b6a:	8f 93       	push	r24
     b6c:	9f 93       	push	r25
     b6e:	af 93       	push	r26
     b70:	bf 93       	push	r27
     b72:	cf 93       	push	r28
     b74:	ef 93       	push	r30
     b76:	ff 93       	push	r31
     b78:	e0 91 20 04 	lds	r30, 0x0420	; 0x800420 <_ser_handle+0x6>
     b7c:	f0 91 21 04 	lds	r31, 0x0421	; 0x800421 <_ser_handle+0x7>
     b80:	30 97       	sbiw	r30, 0x00	; 0
     b82:	99 f0       	breq	.+38     	; 0xbaa <__vector_54+0x5a>
     b84:	c0 91 36 01 	lds	r28, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     b88:	6c 2f       	mov	r22, r28
     b8a:	84 81       	ldd	r24, Z+4	; 0x04
     b8c:	95 81       	ldd	r25, Z+5	; 0x05
     b8e:	7f dd       	rcall	.-1282   	; 0x68e <buffer_put_item>
     b90:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <_ser_handle+0x6>
     b94:	90 91 21 04 	lds	r25, 0x0421	; 0x800421 <_ser_handle+0x7>
     b98:	dc 01       	movw	r26, r24
     b9a:	16 96       	adiw	r26, 0x06	; 6
     b9c:	ed 91       	ld	r30, X+
     b9e:	fc 91       	ld	r31, X
     ba0:	17 97       	sbiw	r26, 0x07	; 7
     ba2:	30 97       	sbiw	r30, 0x00	; 0
     ba4:	11 f0       	breq	.+4      	; 0xbaa <__vector_54+0x5a>
     ba6:	6c 2f       	mov	r22, r28
     ba8:	19 95       	eicall
     baa:	ff 91       	pop	r31
     bac:	ef 91       	pop	r30
     bae:	cf 91       	pop	r28
     bb0:	bf 91       	pop	r27
     bb2:	af 91       	pop	r26
     bb4:	9f 91       	pop	r25
     bb6:	8f 91       	pop	r24
     bb8:	7f 91       	pop	r23
     bba:	6f 91       	pop	r22
     bbc:	5f 91       	pop	r21
     bbe:	4f 91       	pop	r20
     bc0:	3f 91       	pop	r19
     bc2:	2f 91       	pop	r18
     bc4:	0f 90       	pop	r0
     bc6:	0b be       	out	0x3b, r0	; 59
     bc8:	0f 90       	pop	r0
     bca:	0f be       	out	0x3f, r0	; 63
     bcc:	0f 90       	pop	r0
     bce:	1f 90       	pop	r1
     bd0:	18 95       	reti

00000bd2 <__vector_55>:
     bd2:	1f 92       	push	r1
     bd4:	0f 92       	push	r0
     bd6:	0f b6       	in	r0, 0x3f	; 63
     bd8:	0f 92       	push	r0
     bda:	11 24       	eor	r1, r1
     bdc:	0b b6       	in	r0, 0x3b	; 59
     bde:	0f 92       	push	r0
     be0:	2f 93       	push	r18
     be2:	3f 93       	push	r19
     be4:	4f 93       	push	r20
     be6:	5f 93       	push	r21
     be8:	6f 93       	push	r22
     bea:	7f 93       	push	r23
     bec:	8f 93       	push	r24
     bee:	9f 93       	push	r25
     bf0:	af 93       	push	r26
     bf2:	bf 93       	push	r27
     bf4:	ef 93       	push	r30
     bf6:	ff 93       	push	r31
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	1f 92       	push	r1
     bfe:	cd b7       	in	r28, 0x3d	; 61
     c00:	de b7       	in	r29, 0x3e	; 62
     c02:	e0 91 20 04 	lds	r30, 0x0420	; 0x800420 <_ser_handle+0x6>
     c06:	f0 91 21 04 	lds	r31, 0x0421	; 0x800421 <_ser_handle+0x7>
     c0a:	30 97       	sbiw	r30, 0x00	; 0
     c0c:	91 f0       	breq	.+36     	; 0xc32 <__vector_55+0x60>
     c0e:	be 01       	movw	r22, r28
     c10:	6f 5f       	subi	r22, 0xFF	; 255
     c12:	7f 4f       	sbci	r23, 0xFF	; 255
     c14:	82 81       	ldd	r24, Z+2	; 0x02
     c16:	93 81       	ldd	r25, Z+3	; 0x03
     c18:	13 dd       	rcall	.-1498   	; 0x640 <buffer_get_item>
     c1a:	81 11       	cpse	r24, r1
     c1c:	04 c0       	rjmp	.+8      	; 0xc26 <__vector_55+0x54>
     c1e:	89 81       	ldd	r24, Y+1	; 0x01
     c20:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     c24:	0b c0       	rjmp	.+22     	; 0xc3c <__vector_55+0x6a>
     c26:	e1 e3       	ldi	r30, 0x31	; 49
     c28:	f1 e0       	ldi	r31, 0x01	; 1
     c2a:	80 81       	ld	r24, Z
     c2c:	8f 7d       	andi	r24, 0xDF	; 223
     c2e:	80 83       	st	Z, r24
     c30:	05 c0       	rjmp	.+10     	; 0xc3c <__vector_55+0x6a>
     c32:	e1 e3       	ldi	r30, 0x31	; 49
     c34:	f1 e0       	ldi	r31, 0x01	; 1
     c36:	80 81       	ld	r24, Z
     c38:	8f 7d       	andi	r24, 0xDF	; 223
     c3a:	80 83       	st	Z, r24
     c3c:	0f 90       	pop	r0
     c3e:	df 91       	pop	r29
     c40:	cf 91       	pop	r28
     c42:	ff 91       	pop	r31
     c44:	ef 91       	pop	r30
     c46:	bf 91       	pop	r27
     c48:	af 91       	pop	r26
     c4a:	9f 91       	pop	r25
     c4c:	8f 91       	pop	r24
     c4e:	7f 91       	pop	r23
     c50:	6f 91       	pop	r22
     c52:	5f 91       	pop	r21
     c54:	4f 91       	pop	r20
     c56:	3f 91       	pop	r19
     c58:	2f 91       	pop	r18
     c5a:	0f 90       	pop	r0
     c5c:	0b be       	out	0x3b, r0	; 59
     c5e:	0f 90       	pop	r0
     c60:	0f be       	out	0x3f, r0	; 63
     c62:	0f 90       	pop	r0
     c64:	1f 90       	pop	r1
     c66:	18 95       	reti

00000c68 <__udivmodsi4>:
     c68:	a1 e2       	ldi	r26, 0x21	; 33
     c6a:	1a 2e       	mov	r1, r26
     c6c:	aa 1b       	sub	r26, r26
     c6e:	bb 1b       	sub	r27, r27
     c70:	fd 01       	movw	r30, r26
     c72:	0d c0       	rjmp	.+26     	; 0xc8e <__udivmodsi4_ep>

00000c74 <__udivmodsi4_loop>:
     c74:	aa 1f       	adc	r26, r26
     c76:	bb 1f       	adc	r27, r27
     c78:	ee 1f       	adc	r30, r30
     c7a:	ff 1f       	adc	r31, r31
     c7c:	a2 17       	cp	r26, r18
     c7e:	b3 07       	cpc	r27, r19
     c80:	e4 07       	cpc	r30, r20
     c82:	f5 07       	cpc	r31, r21
     c84:	20 f0       	brcs	.+8      	; 0xc8e <__udivmodsi4_ep>
     c86:	a2 1b       	sub	r26, r18
     c88:	b3 0b       	sbc	r27, r19
     c8a:	e4 0b       	sbc	r30, r20
     c8c:	f5 0b       	sbc	r31, r21

00000c8e <__udivmodsi4_ep>:
     c8e:	66 1f       	adc	r22, r22
     c90:	77 1f       	adc	r23, r23
     c92:	88 1f       	adc	r24, r24
     c94:	99 1f       	adc	r25, r25
     c96:	1a 94       	dec	r1
     c98:	69 f7       	brne	.-38     	; 0xc74 <__udivmodsi4_loop>
     c9a:	60 95       	com	r22
     c9c:	70 95       	com	r23
     c9e:	80 95       	com	r24
     ca0:	90 95       	com	r25
     ca2:	9b 01       	movw	r18, r22
     ca4:	ac 01       	movw	r20, r24
     ca6:	bd 01       	movw	r22, r26
     ca8:	cf 01       	movw	r24, r30
     caa:	08 95       	ret

00000cac <calloc>:
     cac:	0f 93       	push	r16
     cae:	1f 93       	push	r17
     cb0:	cf 93       	push	r28
     cb2:	df 93       	push	r29
     cb4:	86 9f       	mul	r24, r22
     cb6:	80 01       	movw	r16, r0
     cb8:	87 9f       	mul	r24, r23
     cba:	10 0d       	add	r17, r0
     cbc:	96 9f       	mul	r25, r22
     cbe:	10 0d       	add	r17, r0
     cc0:	11 24       	eor	r1, r1
     cc2:	c8 01       	movw	r24, r16
     cc4:	0d d0       	rcall	.+26     	; 0xce0 <malloc>
     cc6:	ec 01       	movw	r28, r24
     cc8:	00 97       	sbiw	r24, 0x00	; 0
     cca:	21 f0       	breq	.+8      	; 0xcd4 <calloc+0x28>
     ccc:	a8 01       	movw	r20, r16
     cce:	60 e0       	ldi	r22, 0x00	; 0
     cd0:	70 e0       	ldi	r23, 0x00	; 0
     cd2:	7c d1       	rcall	.+760    	; 0xfcc <memset>
     cd4:	ce 01       	movw	r24, r28
     cd6:	df 91       	pop	r29
     cd8:	cf 91       	pop	r28
     cda:	1f 91       	pop	r17
     cdc:	0f 91       	pop	r16
     cde:	08 95       	ret

00000ce0 <malloc>:
     ce0:	0f 93       	push	r16
     ce2:	1f 93       	push	r17
     ce4:	cf 93       	push	r28
     ce6:	df 93       	push	r29
     ce8:	82 30       	cpi	r24, 0x02	; 2
     cea:	91 05       	cpc	r25, r1
     cec:	10 f4       	brcc	.+4      	; 0xcf2 <malloc+0x12>
     cee:	82 e0       	ldi	r24, 0x02	; 2
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	e0 91 24 04 	lds	r30, 0x0424	; 0x800424 <__flp>
     cf6:	f0 91 25 04 	lds	r31, 0x0425	; 0x800425 <__flp+0x1>
     cfa:	20 e0       	ldi	r18, 0x00	; 0
     cfc:	30 e0       	ldi	r19, 0x00	; 0
     cfe:	a0 e0       	ldi	r26, 0x00	; 0
     d00:	b0 e0       	ldi	r27, 0x00	; 0
     d02:	30 97       	sbiw	r30, 0x00	; 0
     d04:	19 f1       	breq	.+70     	; 0xd4c <malloc+0x6c>
     d06:	40 81       	ld	r20, Z
     d08:	51 81       	ldd	r21, Z+1	; 0x01
     d0a:	02 81       	ldd	r16, Z+2	; 0x02
     d0c:	13 81       	ldd	r17, Z+3	; 0x03
     d0e:	48 17       	cp	r20, r24
     d10:	59 07       	cpc	r21, r25
     d12:	c8 f0       	brcs	.+50     	; 0xd46 <malloc+0x66>
     d14:	84 17       	cp	r24, r20
     d16:	95 07       	cpc	r25, r21
     d18:	69 f4       	brne	.+26     	; 0xd34 <malloc+0x54>
     d1a:	10 97       	sbiw	r26, 0x00	; 0
     d1c:	31 f0       	breq	.+12     	; 0xd2a <malloc+0x4a>
     d1e:	12 96       	adiw	r26, 0x02	; 2
     d20:	0c 93       	st	X, r16
     d22:	12 97       	sbiw	r26, 0x02	; 2
     d24:	13 96       	adiw	r26, 0x03	; 3
     d26:	1c 93       	st	X, r17
     d28:	27 c0       	rjmp	.+78     	; 0xd78 <malloc+0x98>
     d2a:	00 93 24 04 	sts	0x0424, r16	; 0x800424 <__flp>
     d2e:	10 93 25 04 	sts	0x0425, r17	; 0x800425 <__flp+0x1>
     d32:	22 c0       	rjmp	.+68     	; 0xd78 <malloc+0x98>
     d34:	21 15       	cp	r18, r1
     d36:	31 05       	cpc	r19, r1
     d38:	19 f0       	breq	.+6      	; 0xd40 <malloc+0x60>
     d3a:	42 17       	cp	r20, r18
     d3c:	53 07       	cpc	r21, r19
     d3e:	18 f4       	brcc	.+6      	; 0xd46 <malloc+0x66>
     d40:	9a 01       	movw	r18, r20
     d42:	bd 01       	movw	r22, r26
     d44:	ef 01       	movw	r28, r30
     d46:	df 01       	movw	r26, r30
     d48:	f8 01       	movw	r30, r16
     d4a:	db cf       	rjmp	.-74     	; 0xd02 <malloc+0x22>
     d4c:	21 15       	cp	r18, r1
     d4e:	31 05       	cpc	r19, r1
     d50:	f9 f0       	breq	.+62     	; 0xd90 <malloc+0xb0>
     d52:	28 1b       	sub	r18, r24
     d54:	39 0b       	sbc	r19, r25
     d56:	24 30       	cpi	r18, 0x04	; 4
     d58:	31 05       	cpc	r19, r1
     d5a:	80 f4       	brcc	.+32     	; 0xd7c <malloc+0x9c>
     d5c:	8a 81       	ldd	r24, Y+2	; 0x02
     d5e:	9b 81       	ldd	r25, Y+3	; 0x03
     d60:	61 15       	cp	r22, r1
     d62:	71 05       	cpc	r23, r1
     d64:	21 f0       	breq	.+8      	; 0xd6e <malloc+0x8e>
     d66:	fb 01       	movw	r30, r22
     d68:	93 83       	std	Z+3, r25	; 0x03
     d6a:	82 83       	std	Z+2, r24	; 0x02
     d6c:	04 c0       	rjmp	.+8      	; 0xd76 <malloc+0x96>
     d6e:	90 93 25 04 	sts	0x0425, r25	; 0x800425 <__flp+0x1>
     d72:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <__flp>
     d76:	fe 01       	movw	r30, r28
     d78:	32 96       	adiw	r30, 0x02	; 2
     d7a:	44 c0       	rjmp	.+136    	; 0xe04 <malloc+0x124>
     d7c:	fe 01       	movw	r30, r28
     d7e:	e2 0f       	add	r30, r18
     d80:	f3 1f       	adc	r31, r19
     d82:	81 93       	st	Z+, r24
     d84:	91 93       	st	Z+, r25
     d86:	22 50       	subi	r18, 0x02	; 2
     d88:	31 09       	sbc	r19, r1
     d8a:	39 83       	std	Y+1, r19	; 0x01
     d8c:	28 83       	st	Y, r18
     d8e:	3a c0       	rjmp	.+116    	; 0xe04 <malloc+0x124>
     d90:	20 91 22 04 	lds	r18, 0x0422	; 0x800422 <__brkval>
     d94:	30 91 23 04 	lds	r19, 0x0423	; 0x800423 <__brkval+0x1>
     d98:	23 2b       	or	r18, r19
     d9a:	41 f4       	brne	.+16     	; 0xdac <malloc+0xcc>
     d9c:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
     da0:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
     da4:	30 93 23 04 	sts	0x0423, r19	; 0x800423 <__brkval+0x1>
     da8:	20 93 22 04 	sts	0x0422, r18	; 0x800422 <__brkval>
     dac:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
     db0:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
     db4:	21 15       	cp	r18, r1
     db6:	31 05       	cpc	r19, r1
     db8:	41 f4       	brne	.+16     	; 0xdca <malloc+0xea>
     dba:	2d b7       	in	r18, 0x3d	; 61
     dbc:	3e b7       	in	r19, 0x3e	; 62
     dbe:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
     dc2:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
     dc6:	24 1b       	sub	r18, r20
     dc8:	35 0b       	sbc	r19, r21
     dca:	e0 91 22 04 	lds	r30, 0x0422	; 0x800422 <__brkval>
     dce:	f0 91 23 04 	lds	r31, 0x0423	; 0x800423 <__brkval+0x1>
     dd2:	e2 17       	cp	r30, r18
     dd4:	f3 07       	cpc	r31, r19
     dd6:	a0 f4       	brcc	.+40     	; 0xe00 <malloc+0x120>
     dd8:	2e 1b       	sub	r18, r30
     dda:	3f 0b       	sbc	r19, r31
     ddc:	28 17       	cp	r18, r24
     dde:	39 07       	cpc	r19, r25
     de0:	78 f0       	brcs	.+30     	; 0xe00 <malloc+0x120>
     de2:	ac 01       	movw	r20, r24
     de4:	4e 5f       	subi	r20, 0xFE	; 254
     de6:	5f 4f       	sbci	r21, 0xFF	; 255
     de8:	24 17       	cp	r18, r20
     dea:	35 07       	cpc	r19, r21
     dec:	48 f0       	brcs	.+18     	; 0xe00 <malloc+0x120>
     dee:	4e 0f       	add	r20, r30
     df0:	5f 1f       	adc	r21, r31
     df2:	50 93 23 04 	sts	0x0423, r21	; 0x800423 <__brkval+0x1>
     df6:	40 93 22 04 	sts	0x0422, r20	; 0x800422 <__brkval>
     dfa:	81 93       	st	Z+, r24
     dfc:	91 93       	st	Z+, r25
     dfe:	02 c0       	rjmp	.+4      	; 0xe04 <malloc+0x124>
     e00:	e0 e0       	ldi	r30, 0x00	; 0
     e02:	f0 e0       	ldi	r31, 0x00	; 0
     e04:	cf 01       	movw	r24, r30
     e06:	df 91       	pop	r29
     e08:	cf 91       	pop	r28
     e0a:	1f 91       	pop	r17
     e0c:	0f 91       	pop	r16
     e0e:	08 95       	ret

00000e10 <free>:
     e10:	cf 93       	push	r28
     e12:	df 93       	push	r29
     e14:	00 97       	sbiw	r24, 0x00	; 0
     e16:	09 f4       	brne	.+2      	; 0xe1a <free+0xa>
     e18:	81 c0       	rjmp	.+258    	; 0xf1c <free+0x10c>
     e1a:	fc 01       	movw	r30, r24
     e1c:	32 97       	sbiw	r30, 0x02	; 2
     e1e:	13 82       	std	Z+3, r1	; 0x03
     e20:	12 82       	std	Z+2, r1	; 0x02
     e22:	a0 91 24 04 	lds	r26, 0x0424	; 0x800424 <__flp>
     e26:	b0 91 25 04 	lds	r27, 0x0425	; 0x800425 <__flp+0x1>
     e2a:	10 97       	sbiw	r26, 0x00	; 0
     e2c:	81 f4       	brne	.+32     	; 0xe4e <free+0x3e>
     e2e:	20 81       	ld	r18, Z
     e30:	31 81       	ldd	r19, Z+1	; 0x01
     e32:	82 0f       	add	r24, r18
     e34:	93 1f       	adc	r25, r19
     e36:	20 91 22 04 	lds	r18, 0x0422	; 0x800422 <__brkval>
     e3a:	30 91 23 04 	lds	r19, 0x0423	; 0x800423 <__brkval+0x1>
     e3e:	28 17       	cp	r18, r24
     e40:	39 07       	cpc	r19, r25
     e42:	51 f5       	brne	.+84     	; 0xe98 <free+0x88>
     e44:	f0 93 23 04 	sts	0x0423, r31	; 0x800423 <__brkval+0x1>
     e48:	e0 93 22 04 	sts	0x0422, r30	; 0x800422 <__brkval>
     e4c:	67 c0       	rjmp	.+206    	; 0xf1c <free+0x10c>
     e4e:	ed 01       	movw	r28, r26
     e50:	20 e0       	ldi	r18, 0x00	; 0
     e52:	30 e0       	ldi	r19, 0x00	; 0
     e54:	ce 17       	cp	r28, r30
     e56:	df 07       	cpc	r29, r31
     e58:	40 f4       	brcc	.+16     	; 0xe6a <free+0x5a>
     e5a:	4a 81       	ldd	r20, Y+2	; 0x02
     e5c:	5b 81       	ldd	r21, Y+3	; 0x03
     e5e:	9e 01       	movw	r18, r28
     e60:	41 15       	cp	r20, r1
     e62:	51 05       	cpc	r21, r1
     e64:	f1 f0       	breq	.+60     	; 0xea2 <free+0x92>
     e66:	ea 01       	movw	r28, r20
     e68:	f5 cf       	rjmp	.-22     	; 0xe54 <free+0x44>
     e6a:	d3 83       	std	Z+3, r29	; 0x03
     e6c:	c2 83       	std	Z+2, r28	; 0x02
     e6e:	40 81       	ld	r20, Z
     e70:	51 81       	ldd	r21, Z+1	; 0x01
     e72:	84 0f       	add	r24, r20
     e74:	95 1f       	adc	r25, r21
     e76:	c8 17       	cp	r28, r24
     e78:	d9 07       	cpc	r29, r25
     e7a:	59 f4       	brne	.+22     	; 0xe92 <free+0x82>
     e7c:	88 81       	ld	r24, Y
     e7e:	99 81       	ldd	r25, Y+1	; 0x01
     e80:	84 0f       	add	r24, r20
     e82:	95 1f       	adc	r25, r21
     e84:	02 96       	adiw	r24, 0x02	; 2
     e86:	91 83       	std	Z+1, r25	; 0x01
     e88:	80 83       	st	Z, r24
     e8a:	8a 81       	ldd	r24, Y+2	; 0x02
     e8c:	9b 81       	ldd	r25, Y+3	; 0x03
     e8e:	93 83       	std	Z+3, r25	; 0x03
     e90:	82 83       	std	Z+2, r24	; 0x02
     e92:	21 15       	cp	r18, r1
     e94:	31 05       	cpc	r19, r1
     e96:	29 f4       	brne	.+10     	; 0xea2 <free+0x92>
     e98:	f0 93 25 04 	sts	0x0425, r31	; 0x800425 <__flp+0x1>
     e9c:	e0 93 24 04 	sts	0x0424, r30	; 0x800424 <__flp>
     ea0:	3d c0       	rjmp	.+122    	; 0xf1c <free+0x10c>
     ea2:	e9 01       	movw	r28, r18
     ea4:	fb 83       	std	Y+3, r31	; 0x03
     ea6:	ea 83       	std	Y+2, r30	; 0x02
     ea8:	49 91       	ld	r20, Y+
     eaa:	59 91       	ld	r21, Y+
     eac:	c4 0f       	add	r28, r20
     eae:	d5 1f       	adc	r29, r21
     eb0:	ec 17       	cp	r30, r28
     eb2:	fd 07       	cpc	r31, r29
     eb4:	61 f4       	brne	.+24     	; 0xece <free+0xbe>
     eb6:	80 81       	ld	r24, Z
     eb8:	91 81       	ldd	r25, Z+1	; 0x01
     eba:	84 0f       	add	r24, r20
     ebc:	95 1f       	adc	r25, r21
     ebe:	02 96       	adiw	r24, 0x02	; 2
     ec0:	e9 01       	movw	r28, r18
     ec2:	99 83       	std	Y+1, r25	; 0x01
     ec4:	88 83       	st	Y, r24
     ec6:	82 81       	ldd	r24, Z+2	; 0x02
     ec8:	93 81       	ldd	r25, Z+3	; 0x03
     eca:	9b 83       	std	Y+3, r25	; 0x03
     ecc:	8a 83       	std	Y+2, r24	; 0x02
     ece:	e0 e0       	ldi	r30, 0x00	; 0
     ed0:	f0 e0       	ldi	r31, 0x00	; 0
     ed2:	12 96       	adiw	r26, 0x02	; 2
     ed4:	8d 91       	ld	r24, X+
     ed6:	9c 91       	ld	r25, X
     ed8:	13 97       	sbiw	r26, 0x03	; 3
     eda:	00 97       	sbiw	r24, 0x00	; 0
     edc:	19 f0       	breq	.+6      	; 0xee4 <free+0xd4>
     ede:	fd 01       	movw	r30, r26
     ee0:	dc 01       	movw	r26, r24
     ee2:	f7 cf       	rjmp	.-18     	; 0xed2 <free+0xc2>
     ee4:	8d 91       	ld	r24, X+
     ee6:	9c 91       	ld	r25, X
     ee8:	11 97       	sbiw	r26, 0x01	; 1
     eea:	9d 01       	movw	r18, r26
     eec:	2e 5f       	subi	r18, 0xFE	; 254
     eee:	3f 4f       	sbci	r19, 0xFF	; 255
     ef0:	82 0f       	add	r24, r18
     ef2:	93 1f       	adc	r25, r19
     ef4:	20 91 22 04 	lds	r18, 0x0422	; 0x800422 <__brkval>
     ef8:	30 91 23 04 	lds	r19, 0x0423	; 0x800423 <__brkval+0x1>
     efc:	28 17       	cp	r18, r24
     efe:	39 07       	cpc	r19, r25
     f00:	69 f4       	brne	.+26     	; 0xf1c <free+0x10c>
     f02:	30 97       	sbiw	r30, 0x00	; 0
     f04:	29 f4       	brne	.+10     	; 0xf10 <free+0x100>
     f06:	10 92 25 04 	sts	0x0425, r1	; 0x800425 <__flp+0x1>
     f0a:	10 92 24 04 	sts	0x0424, r1	; 0x800424 <__flp>
     f0e:	02 c0       	rjmp	.+4      	; 0xf14 <free+0x104>
     f10:	13 82       	std	Z+3, r1	; 0x03
     f12:	12 82       	std	Z+2, r1	; 0x02
     f14:	b0 93 23 04 	sts	0x0423, r27	; 0x800423 <__brkval+0x1>
     f18:	a0 93 22 04 	sts	0x0422, r26	; 0x800422 <__brkval>
     f1c:	df 91       	pop	r29
     f1e:	cf 91       	pop	r28
     f20:	08 95       	ret

00000f22 <do_rand>:
     f22:	8f 92       	push	r8
     f24:	9f 92       	push	r9
     f26:	af 92       	push	r10
     f28:	bf 92       	push	r11
     f2a:	cf 92       	push	r12
     f2c:	df 92       	push	r13
     f2e:	ef 92       	push	r14
     f30:	ff 92       	push	r15
     f32:	cf 93       	push	r28
     f34:	df 93       	push	r29
     f36:	ec 01       	movw	r28, r24
     f38:	68 81       	ld	r22, Y
     f3a:	79 81       	ldd	r23, Y+1	; 0x01
     f3c:	8a 81       	ldd	r24, Y+2	; 0x02
     f3e:	9b 81       	ldd	r25, Y+3	; 0x03
     f40:	61 15       	cp	r22, r1
     f42:	71 05       	cpc	r23, r1
     f44:	81 05       	cpc	r24, r1
     f46:	91 05       	cpc	r25, r1
     f48:	21 f4       	brne	.+8      	; 0xf52 <do_rand+0x30>
     f4a:	64 e2       	ldi	r22, 0x24	; 36
     f4c:	79 ed       	ldi	r23, 0xD9	; 217
     f4e:	8b e5       	ldi	r24, 0x5B	; 91
     f50:	97 e0       	ldi	r25, 0x07	; 7
     f52:	2d e1       	ldi	r18, 0x1D	; 29
     f54:	33 ef       	ldi	r19, 0xF3	; 243
     f56:	41 e0       	ldi	r20, 0x01	; 1
     f58:	50 e0       	ldi	r21, 0x00	; 0
     f5a:	2f d3       	rcall	.+1630   	; 0x15ba <__divmodsi4>
     f5c:	49 01       	movw	r8, r18
     f5e:	5a 01       	movw	r10, r20
     f60:	9b 01       	movw	r18, r22
     f62:	ac 01       	movw	r20, r24
     f64:	a7 ea       	ldi	r26, 0xA7	; 167
     f66:	b1 e4       	ldi	r27, 0x41	; 65
     f68:	44 d3       	rcall	.+1672   	; 0x15f2 <__muluhisi3>
     f6a:	6b 01       	movw	r12, r22
     f6c:	7c 01       	movw	r14, r24
     f6e:	ac ee       	ldi	r26, 0xEC	; 236
     f70:	b4 ef       	ldi	r27, 0xF4	; 244
     f72:	a5 01       	movw	r20, r10
     f74:	94 01       	movw	r18, r8
     f76:	49 d3       	rcall	.+1682   	; 0x160a <__mulohisi3>
     f78:	dc 01       	movw	r26, r24
     f7a:	cb 01       	movw	r24, r22
     f7c:	8c 0d       	add	r24, r12
     f7e:	9d 1d       	adc	r25, r13
     f80:	ae 1d       	adc	r26, r14
     f82:	bf 1d       	adc	r27, r15
     f84:	b7 ff       	sbrs	r27, 7
     f86:	03 c0       	rjmp	.+6      	; 0xf8e <do_rand+0x6c>
     f88:	01 97       	sbiw	r24, 0x01	; 1
     f8a:	a1 09       	sbc	r26, r1
     f8c:	b0 48       	sbci	r27, 0x80	; 128
     f8e:	88 83       	st	Y, r24
     f90:	99 83       	std	Y+1, r25	; 0x01
     f92:	aa 83       	std	Y+2, r26	; 0x02
     f94:	bb 83       	std	Y+3, r27	; 0x03
     f96:	9f 77       	andi	r25, 0x7F	; 127
     f98:	df 91       	pop	r29
     f9a:	cf 91       	pop	r28
     f9c:	ff 90       	pop	r15
     f9e:	ef 90       	pop	r14
     fa0:	df 90       	pop	r13
     fa2:	cf 90       	pop	r12
     fa4:	bf 90       	pop	r11
     fa6:	af 90       	pop	r10
     fa8:	9f 90       	pop	r9
     faa:	8f 90       	pop	r8
     fac:	08 95       	ret

00000fae <rand_r>:
     fae:	b9 cf       	rjmp	.-142    	; 0xf22 <do_rand>

00000fb0 <rand>:
     fb0:	86 e0       	ldi	r24, 0x06	; 6
     fb2:	92 e0       	ldi	r25, 0x02	; 2
     fb4:	b6 cf       	rjmp	.-148    	; 0xf22 <do_rand>

00000fb6 <srand>:
     fb6:	a0 e0       	ldi	r26, 0x00	; 0
     fb8:	b0 e0       	ldi	r27, 0x00	; 0
     fba:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <next>
     fbe:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <next+0x1>
     fc2:	a0 93 08 02 	sts	0x0208, r26	; 0x800208 <next+0x2>
     fc6:	b0 93 09 02 	sts	0x0209, r27	; 0x800209 <next+0x3>
     fca:	08 95       	ret

00000fcc <memset>:
     fcc:	dc 01       	movw	r26, r24
     fce:	01 c0       	rjmp	.+2      	; 0xfd2 <memset+0x6>
     fd0:	6d 93       	st	X+, r22
     fd2:	41 50       	subi	r20, 0x01	; 1
     fd4:	50 40       	sbci	r21, 0x00	; 0
     fd6:	e0 f7       	brcc	.-8      	; 0xfd0 <memset+0x4>
     fd8:	08 95       	ret

00000fda <printf>:
     fda:	cf 93       	push	r28
     fdc:	df 93       	push	r29
     fde:	cd b7       	in	r28, 0x3d	; 61
     fe0:	de b7       	in	r29, 0x3e	; 62
     fe2:	ae 01       	movw	r20, r28
     fe4:	4a 5f       	subi	r20, 0xFA	; 250
     fe6:	5f 4f       	sbci	r21, 0xFF	; 255
     fe8:	fa 01       	movw	r30, r20
     fea:	61 91       	ld	r22, Z+
     fec:	71 91       	ld	r23, Z+
     fee:	af 01       	movw	r20, r30
     ff0:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <__iob+0x2>
     ff4:	90 91 29 04 	lds	r25, 0x0429	; 0x800429 <__iob+0x3>
     ff8:	33 d0       	rcall	.+102    	; 0x1060 <vfprintf>
     ffa:	df 91       	pop	r29
     ffc:	cf 91       	pop	r28
     ffe:	08 95       	ret

00001000 <puts>:
    1000:	0f 93       	push	r16
    1002:	1f 93       	push	r17
    1004:	cf 93       	push	r28
    1006:	df 93       	push	r29
    1008:	e0 91 28 04 	lds	r30, 0x0428	; 0x800428 <__iob+0x2>
    100c:	f0 91 29 04 	lds	r31, 0x0429	; 0x800429 <__iob+0x3>
    1010:	23 81       	ldd	r18, Z+3	; 0x03
    1012:	21 ff       	sbrs	r18, 1
    1014:	1b c0       	rjmp	.+54     	; 0x104c <puts+0x4c>
    1016:	8c 01       	movw	r16, r24
    1018:	d0 e0       	ldi	r29, 0x00	; 0
    101a:	c0 e0       	ldi	r28, 0x00	; 0
    101c:	f8 01       	movw	r30, r16
    101e:	81 91       	ld	r24, Z+
    1020:	8f 01       	movw	r16, r30
    1022:	60 91 28 04 	lds	r22, 0x0428	; 0x800428 <__iob+0x2>
    1026:	70 91 29 04 	lds	r23, 0x0429	; 0x800429 <__iob+0x3>
    102a:	db 01       	movw	r26, r22
    102c:	18 96       	adiw	r26, 0x08	; 8
    102e:	ed 91       	ld	r30, X+
    1030:	fc 91       	ld	r31, X
    1032:	19 97       	sbiw	r26, 0x09	; 9
    1034:	88 23       	and	r24, r24
    1036:	31 f0       	breq	.+12     	; 0x1044 <puts+0x44>
    1038:	19 95       	eicall
    103a:	89 2b       	or	r24, r25
    103c:	79 f3       	breq	.-34     	; 0x101c <puts+0x1c>
    103e:	df ef       	ldi	r29, 0xFF	; 255
    1040:	cf ef       	ldi	r28, 0xFF	; 255
    1042:	ec cf       	rjmp	.-40     	; 0x101c <puts+0x1c>
    1044:	8a e0       	ldi	r24, 0x0A	; 10
    1046:	19 95       	eicall
    1048:	89 2b       	or	r24, r25
    104a:	19 f0       	breq	.+6      	; 0x1052 <puts+0x52>
    104c:	8f ef       	ldi	r24, 0xFF	; 255
    104e:	9f ef       	ldi	r25, 0xFF	; 255
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <puts+0x56>
    1052:	8d 2f       	mov	r24, r29
    1054:	9c 2f       	mov	r25, r28
    1056:	df 91       	pop	r29
    1058:	cf 91       	pop	r28
    105a:	1f 91       	pop	r17
    105c:	0f 91       	pop	r16
    105e:	08 95       	ret

00001060 <vfprintf>:
    1060:	2f 92       	push	r2
    1062:	3f 92       	push	r3
    1064:	4f 92       	push	r4
    1066:	5f 92       	push	r5
    1068:	6f 92       	push	r6
    106a:	7f 92       	push	r7
    106c:	8f 92       	push	r8
    106e:	9f 92       	push	r9
    1070:	af 92       	push	r10
    1072:	bf 92       	push	r11
    1074:	cf 92       	push	r12
    1076:	df 92       	push	r13
    1078:	ef 92       	push	r14
    107a:	ff 92       	push	r15
    107c:	0f 93       	push	r16
    107e:	1f 93       	push	r17
    1080:	cf 93       	push	r28
    1082:	df 93       	push	r29
    1084:	cd b7       	in	r28, 0x3d	; 61
    1086:	de b7       	in	r29, 0x3e	; 62
    1088:	2b 97       	sbiw	r28, 0x0b	; 11
    108a:	0f b6       	in	r0, 0x3f	; 63
    108c:	f8 94       	cli
    108e:	de bf       	out	0x3e, r29	; 62
    1090:	0f be       	out	0x3f, r0	; 63
    1092:	cd bf       	out	0x3d, r28	; 61
    1094:	6c 01       	movw	r12, r24
    1096:	7b 01       	movw	r14, r22
    1098:	8a 01       	movw	r16, r20
    109a:	fc 01       	movw	r30, r24
    109c:	17 82       	std	Z+7, r1	; 0x07
    109e:	16 82       	std	Z+6, r1	; 0x06
    10a0:	83 81       	ldd	r24, Z+3	; 0x03
    10a2:	81 ff       	sbrs	r24, 1
    10a4:	bf c1       	rjmp	.+894    	; 0x1424 <vfprintf+0x3c4>
    10a6:	ce 01       	movw	r24, r28
    10a8:	01 96       	adiw	r24, 0x01	; 1
    10aa:	3c 01       	movw	r6, r24
    10ac:	f6 01       	movw	r30, r12
    10ae:	93 81       	ldd	r25, Z+3	; 0x03
    10b0:	f7 01       	movw	r30, r14
    10b2:	93 fd       	sbrc	r25, 3
    10b4:	85 91       	lpm	r24, Z+
    10b6:	93 ff       	sbrs	r25, 3
    10b8:	81 91       	ld	r24, Z+
    10ba:	7f 01       	movw	r14, r30
    10bc:	88 23       	and	r24, r24
    10be:	09 f4       	brne	.+2      	; 0x10c2 <vfprintf+0x62>
    10c0:	ad c1       	rjmp	.+858    	; 0x141c <vfprintf+0x3bc>
    10c2:	85 32       	cpi	r24, 0x25	; 37
    10c4:	39 f4       	brne	.+14     	; 0x10d4 <vfprintf+0x74>
    10c6:	93 fd       	sbrc	r25, 3
    10c8:	85 91       	lpm	r24, Z+
    10ca:	93 ff       	sbrs	r25, 3
    10cc:	81 91       	ld	r24, Z+
    10ce:	7f 01       	movw	r14, r30
    10d0:	85 32       	cpi	r24, 0x25	; 37
    10d2:	21 f4       	brne	.+8      	; 0x10dc <vfprintf+0x7c>
    10d4:	b6 01       	movw	r22, r12
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	d6 d1       	rcall	.+940    	; 0x1486 <fputc>
    10da:	e8 cf       	rjmp	.-48     	; 0x10ac <vfprintf+0x4c>
    10dc:	91 2c       	mov	r9, r1
    10de:	21 2c       	mov	r2, r1
    10e0:	31 2c       	mov	r3, r1
    10e2:	ff e1       	ldi	r31, 0x1F	; 31
    10e4:	f3 15       	cp	r31, r3
    10e6:	d8 f0       	brcs	.+54     	; 0x111e <vfprintf+0xbe>
    10e8:	8b 32       	cpi	r24, 0x2B	; 43
    10ea:	79 f0       	breq	.+30     	; 0x110a <vfprintf+0xaa>
    10ec:	38 f4       	brcc	.+14     	; 0x10fc <vfprintf+0x9c>
    10ee:	80 32       	cpi	r24, 0x20	; 32
    10f0:	79 f0       	breq	.+30     	; 0x1110 <vfprintf+0xb0>
    10f2:	83 32       	cpi	r24, 0x23	; 35
    10f4:	a1 f4       	brne	.+40     	; 0x111e <vfprintf+0xbe>
    10f6:	23 2d       	mov	r18, r3
    10f8:	20 61       	ori	r18, 0x10	; 16
    10fa:	1d c0       	rjmp	.+58     	; 0x1136 <vfprintf+0xd6>
    10fc:	8d 32       	cpi	r24, 0x2D	; 45
    10fe:	61 f0       	breq	.+24     	; 0x1118 <vfprintf+0xb8>
    1100:	80 33       	cpi	r24, 0x30	; 48
    1102:	69 f4       	brne	.+26     	; 0x111e <vfprintf+0xbe>
    1104:	23 2d       	mov	r18, r3
    1106:	21 60       	ori	r18, 0x01	; 1
    1108:	16 c0       	rjmp	.+44     	; 0x1136 <vfprintf+0xd6>
    110a:	83 2d       	mov	r24, r3
    110c:	82 60       	ori	r24, 0x02	; 2
    110e:	38 2e       	mov	r3, r24
    1110:	e3 2d       	mov	r30, r3
    1112:	e4 60       	ori	r30, 0x04	; 4
    1114:	3e 2e       	mov	r3, r30
    1116:	2a c0       	rjmp	.+84     	; 0x116c <vfprintf+0x10c>
    1118:	f3 2d       	mov	r31, r3
    111a:	f8 60       	ori	r31, 0x08	; 8
    111c:	1d c0       	rjmp	.+58     	; 0x1158 <vfprintf+0xf8>
    111e:	37 fc       	sbrc	r3, 7
    1120:	2d c0       	rjmp	.+90     	; 0x117c <vfprintf+0x11c>
    1122:	20 ed       	ldi	r18, 0xD0	; 208
    1124:	28 0f       	add	r18, r24
    1126:	2a 30       	cpi	r18, 0x0A	; 10
    1128:	40 f0       	brcs	.+16     	; 0x113a <vfprintf+0xda>
    112a:	8e 32       	cpi	r24, 0x2E	; 46
    112c:	b9 f4       	brne	.+46     	; 0x115c <vfprintf+0xfc>
    112e:	36 fc       	sbrc	r3, 6
    1130:	75 c1       	rjmp	.+746    	; 0x141c <vfprintf+0x3bc>
    1132:	23 2d       	mov	r18, r3
    1134:	20 64       	ori	r18, 0x40	; 64
    1136:	32 2e       	mov	r3, r18
    1138:	19 c0       	rjmp	.+50     	; 0x116c <vfprintf+0x10c>
    113a:	36 fe       	sbrs	r3, 6
    113c:	06 c0       	rjmp	.+12     	; 0x114a <vfprintf+0xea>
    113e:	8a e0       	ldi	r24, 0x0A	; 10
    1140:	98 9e       	mul	r9, r24
    1142:	20 0d       	add	r18, r0
    1144:	11 24       	eor	r1, r1
    1146:	92 2e       	mov	r9, r18
    1148:	11 c0       	rjmp	.+34     	; 0x116c <vfprintf+0x10c>
    114a:	ea e0       	ldi	r30, 0x0A	; 10
    114c:	2e 9e       	mul	r2, r30
    114e:	20 0d       	add	r18, r0
    1150:	11 24       	eor	r1, r1
    1152:	22 2e       	mov	r2, r18
    1154:	f3 2d       	mov	r31, r3
    1156:	f0 62       	ori	r31, 0x20	; 32
    1158:	3f 2e       	mov	r3, r31
    115a:	08 c0       	rjmp	.+16     	; 0x116c <vfprintf+0x10c>
    115c:	8c 36       	cpi	r24, 0x6C	; 108
    115e:	21 f4       	brne	.+8      	; 0x1168 <vfprintf+0x108>
    1160:	83 2d       	mov	r24, r3
    1162:	80 68       	ori	r24, 0x80	; 128
    1164:	38 2e       	mov	r3, r24
    1166:	02 c0       	rjmp	.+4      	; 0x116c <vfprintf+0x10c>
    1168:	88 36       	cpi	r24, 0x68	; 104
    116a:	41 f4       	brne	.+16     	; 0x117c <vfprintf+0x11c>
    116c:	f7 01       	movw	r30, r14
    116e:	93 fd       	sbrc	r25, 3
    1170:	85 91       	lpm	r24, Z+
    1172:	93 ff       	sbrs	r25, 3
    1174:	81 91       	ld	r24, Z+
    1176:	7f 01       	movw	r14, r30
    1178:	81 11       	cpse	r24, r1
    117a:	b3 cf       	rjmp	.-154    	; 0x10e2 <vfprintf+0x82>
    117c:	98 2f       	mov	r25, r24
    117e:	9f 7d       	andi	r25, 0xDF	; 223
    1180:	95 54       	subi	r25, 0x45	; 69
    1182:	93 30       	cpi	r25, 0x03	; 3
    1184:	28 f4       	brcc	.+10     	; 0x1190 <vfprintf+0x130>
    1186:	0c 5f       	subi	r16, 0xFC	; 252
    1188:	1f 4f       	sbci	r17, 0xFF	; 255
    118a:	9f e3       	ldi	r25, 0x3F	; 63
    118c:	99 83       	std	Y+1, r25	; 0x01
    118e:	0d c0       	rjmp	.+26     	; 0x11aa <vfprintf+0x14a>
    1190:	83 36       	cpi	r24, 0x63	; 99
    1192:	31 f0       	breq	.+12     	; 0x11a0 <vfprintf+0x140>
    1194:	83 37       	cpi	r24, 0x73	; 115
    1196:	71 f0       	breq	.+28     	; 0x11b4 <vfprintf+0x154>
    1198:	83 35       	cpi	r24, 0x53	; 83
    119a:	09 f0       	breq	.+2      	; 0x119e <vfprintf+0x13e>
    119c:	55 c0       	rjmp	.+170    	; 0x1248 <vfprintf+0x1e8>
    119e:	20 c0       	rjmp	.+64     	; 0x11e0 <vfprintf+0x180>
    11a0:	f8 01       	movw	r30, r16
    11a2:	80 81       	ld	r24, Z
    11a4:	89 83       	std	Y+1, r24	; 0x01
    11a6:	0e 5f       	subi	r16, 0xFE	; 254
    11a8:	1f 4f       	sbci	r17, 0xFF	; 255
    11aa:	88 24       	eor	r8, r8
    11ac:	83 94       	inc	r8
    11ae:	91 2c       	mov	r9, r1
    11b0:	53 01       	movw	r10, r6
    11b2:	12 c0       	rjmp	.+36     	; 0x11d8 <vfprintf+0x178>
    11b4:	28 01       	movw	r4, r16
    11b6:	f2 e0       	ldi	r31, 0x02	; 2
    11b8:	4f 0e       	add	r4, r31
    11ba:	51 1c       	adc	r5, r1
    11bc:	f8 01       	movw	r30, r16
    11be:	a0 80       	ld	r10, Z
    11c0:	b1 80       	ldd	r11, Z+1	; 0x01
    11c2:	36 fe       	sbrs	r3, 6
    11c4:	03 c0       	rjmp	.+6      	; 0x11cc <vfprintf+0x16c>
    11c6:	69 2d       	mov	r22, r9
    11c8:	70 e0       	ldi	r23, 0x00	; 0
    11ca:	02 c0       	rjmp	.+4      	; 0x11d0 <vfprintf+0x170>
    11cc:	6f ef       	ldi	r22, 0xFF	; 255
    11ce:	7f ef       	ldi	r23, 0xFF	; 255
    11d0:	c5 01       	movw	r24, r10
    11d2:	4e d1       	rcall	.+668    	; 0x1470 <strnlen>
    11d4:	4c 01       	movw	r8, r24
    11d6:	82 01       	movw	r16, r4
    11d8:	f3 2d       	mov	r31, r3
    11da:	ff 77       	andi	r31, 0x7F	; 127
    11dc:	3f 2e       	mov	r3, r31
    11de:	15 c0       	rjmp	.+42     	; 0x120a <vfprintf+0x1aa>
    11e0:	28 01       	movw	r4, r16
    11e2:	22 e0       	ldi	r18, 0x02	; 2
    11e4:	42 0e       	add	r4, r18
    11e6:	51 1c       	adc	r5, r1
    11e8:	f8 01       	movw	r30, r16
    11ea:	a0 80       	ld	r10, Z
    11ec:	b1 80       	ldd	r11, Z+1	; 0x01
    11ee:	36 fe       	sbrs	r3, 6
    11f0:	03 c0       	rjmp	.+6      	; 0x11f8 <vfprintf+0x198>
    11f2:	69 2d       	mov	r22, r9
    11f4:	70 e0       	ldi	r23, 0x00	; 0
    11f6:	02 c0       	rjmp	.+4      	; 0x11fc <vfprintf+0x19c>
    11f8:	6f ef       	ldi	r22, 0xFF	; 255
    11fa:	7f ef       	ldi	r23, 0xFF	; 255
    11fc:	c5 01       	movw	r24, r10
    11fe:	2d d1       	rcall	.+602    	; 0x145a <strnlen_P>
    1200:	4c 01       	movw	r8, r24
    1202:	f3 2d       	mov	r31, r3
    1204:	f0 68       	ori	r31, 0x80	; 128
    1206:	3f 2e       	mov	r3, r31
    1208:	82 01       	movw	r16, r4
    120a:	33 fc       	sbrc	r3, 3
    120c:	19 c0       	rjmp	.+50     	; 0x1240 <vfprintf+0x1e0>
    120e:	82 2d       	mov	r24, r2
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	88 16       	cp	r8, r24
    1214:	99 06       	cpc	r9, r25
    1216:	a0 f4       	brcc	.+40     	; 0x1240 <vfprintf+0x1e0>
    1218:	b6 01       	movw	r22, r12
    121a:	80 e2       	ldi	r24, 0x20	; 32
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	33 d1       	rcall	.+614    	; 0x1486 <fputc>
    1220:	2a 94       	dec	r2
    1222:	f5 cf       	rjmp	.-22     	; 0x120e <vfprintf+0x1ae>
    1224:	f5 01       	movw	r30, r10
    1226:	37 fc       	sbrc	r3, 7
    1228:	85 91       	lpm	r24, Z+
    122a:	37 fe       	sbrs	r3, 7
    122c:	81 91       	ld	r24, Z+
    122e:	5f 01       	movw	r10, r30
    1230:	b6 01       	movw	r22, r12
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	28 d1       	rcall	.+592    	; 0x1486 <fputc>
    1236:	21 10       	cpse	r2, r1
    1238:	2a 94       	dec	r2
    123a:	21 e0       	ldi	r18, 0x01	; 1
    123c:	82 1a       	sub	r8, r18
    123e:	91 08       	sbc	r9, r1
    1240:	81 14       	cp	r8, r1
    1242:	91 04       	cpc	r9, r1
    1244:	79 f7       	brne	.-34     	; 0x1224 <vfprintf+0x1c4>
    1246:	e1 c0       	rjmp	.+450    	; 0x140a <vfprintf+0x3aa>
    1248:	84 36       	cpi	r24, 0x64	; 100
    124a:	11 f0       	breq	.+4      	; 0x1250 <vfprintf+0x1f0>
    124c:	89 36       	cpi	r24, 0x69	; 105
    124e:	39 f5       	brne	.+78     	; 0x129e <vfprintf+0x23e>
    1250:	f8 01       	movw	r30, r16
    1252:	37 fe       	sbrs	r3, 7
    1254:	07 c0       	rjmp	.+14     	; 0x1264 <vfprintf+0x204>
    1256:	60 81       	ld	r22, Z
    1258:	71 81       	ldd	r23, Z+1	; 0x01
    125a:	82 81       	ldd	r24, Z+2	; 0x02
    125c:	93 81       	ldd	r25, Z+3	; 0x03
    125e:	0c 5f       	subi	r16, 0xFC	; 252
    1260:	1f 4f       	sbci	r17, 0xFF	; 255
    1262:	08 c0       	rjmp	.+16     	; 0x1274 <vfprintf+0x214>
    1264:	60 81       	ld	r22, Z
    1266:	71 81       	ldd	r23, Z+1	; 0x01
    1268:	07 2e       	mov	r0, r23
    126a:	00 0c       	add	r0, r0
    126c:	88 0b       	sbc	r24, r24
    126e:	99 0b       	sbc	r25, r25
    1270:	0e 5f       	subi	r16, 0xFE	; 254
    1272:	1f 4f       	sbci	r17, 0xFF	; 255
    1274:	f3 2d       	mov	r31, r3
    1276:	ff 76       	andi	r31, 0x6F	; 111
    1278:	3f 2e       	mov	r3, r31
    127a:	97 ff       	sbrs	r25, 7
    127c:	09 c0       	rjmp	.+18     	; 0x1290 <vfprintf+0x230>
    127e:	90 95       	com	r25
    1280:	80 95       	com	r24
    1282:	70 95       	com	r23
    1284:	61 95       	neg	r22
    1286:	7f 4f       	sbci	r23, 0xFF	; 255
    1288:	8f 4f       	sbci	r24, 0xFF	; 255
    128a:	9f 4f       	sbci	r25, 0xFF	; 255
    128c:	f0 68       	ori	r31, 0x80	; 128
    128e:	3f 2e       	mov	r3, r31
    1290:	2a e0       	ldi	r18, 0x0A	; 10
    1292:	30 e0       	ldi	r19, 0x00	; 0
    1294:	a3 01       	movw	r20, r6
    1296:	33 d1       	rcall	.+614    	; 0x14fe <__ultoa_invert>
    1298:	88 2e       	mov	r8, r24
    129a:	86 18       	sub	r8, r6
    129c:	44 c0       	rjmp	.+136    	; 0x1326 <vfprintf+0x2c6>
    129e:	85 37       	cpi	r24, 0x75	; 117
    12a0:	31 f4       	brne	.+12     	; 0x12ae <vfprintf+0x24e>
    12a2:	23 2d       	mov	r18, r3
    12a4:	2f 7e       	andi	r18, 0xEF	; 239
    12a6:	b2 2e       	mov	r11, r18
    12a8:	2a e0       	ldi	r18, 0x0A	; 10
    12aa:	30 e0       	ldi	r19, 0x00	; 0
    12ac:	25 c0       	rjmp	.+74     	; 0x12f8 <vfprintf+0x298>
    12ae:	93 2d       	mov	r25, r3
    12b0:	99 7f       	andi	r25, 0xF9	; 249
    12b2:	b9 2e       	mov	r11, r25
    12b4:	8f 36       	cpi	r24, 0x6F	; 111
    12b6:	c1 f0       	breq	.+48     	; 0x12e8 <vfprintf+0x288>
    12b8:	18 f4       	brcc	.+6      	; 0x12c0 <vfprintf+0x260>
    12ba:	88 35       	cpi	r24, 0x58	; 88
    12bc:	79 f0       	breq	.+30     	; 0x12dc <vfprintf+0x27c>
    12be:	ae c0       	rjmp	.+348    	; 0x141c <vfprintf+0x3bc>
    12c0:	80 37       	cpi	r24, 0x70	; 112
    12c2:	19 f0       	breq	.+6      	; 0x12ca <vfprintf+0x26a>
    12c4:	88 37       	cpi	r24, 0x78	; 120
    12c6:	21 f0       	breq	.+8      	; 0x12d0 <vfprintf+0x270>
    12c8:	a9 c0       	rjmp	.+338    	; 0x141c <vfprintf+0x3bc>
    12ca:	e9 2f       	mov	r30, r25
    12cc:	e0 61       	ori	r30, 0x10	; 16
    12ce:	be 2e       	mov	r11, r30
    12d0:	b4 fe       	sbrs	r11, 4
    12d2:	0d c0       	rjmp	.+26     	; 0x12ee <vfprintf+0x28e>
    12d4:	fb 2d       	mov	r31, r11
    12d6:	f4 60       	ori	r31, 0x04	; 4
    12d8:	bf 2e       	mov	r11, r31
    12da:	09 c0       	rjmp	.+18     	; 0x12ee <vfprintf+0x28e>
    12dc:	34 fe       	sbrs	r3, 4
    12de:	0a c0       	rjmp	.+20     	; 0x12f4 <vfprintf+0x294>
    12e0:	29 2f       	mov	r18, r25
    12e2:	26 60       	ori	r18, 0x06	; 6
    12e4:	b2 2e       	mov	r11, r18
    12e6:	06 c0       	rjmp	.+12     	; 0x12f4 <vfprintf+0x294>
    12e8:	28 e0       	ldi	r18, 0x08	; 8
    12ea:	30 e0       	ldi	r19, 0x00	; 0
    12ec:	05 c0       	rjmp	.+10     	; 0x12f8 <vfprintf+0x298>
    12ee:	20 e1       	ldi	r18, 0x10	; 16
    12f0:	30 e0       	ldi	r19, 0x00	; 0
    12f2:	02 c0       	rjmp	.+4      	; 0x12f8 <vfprintf+0x298>
    12f4:	20 e1       	ldi	r18, 0x10	; 16
    12f6:	32 e0       	ldi	r19, 0x02	; 2
    12f8:	f8 01       	movw	r30, r16
    12fa:	b7 fe       	sbrs	r11, 7
    12fc:	07 c0       	rjmp	.+14     	; 0x130c <vfprintf+0x2ac>
    12fe:	60 81       	ld	r22, Z
    1300:	71 81       	ldd	r23, Z+1	; 0x01
    1302:	82 81       	ldd	r24, Z+2	; 0x02
    1304:	93 81       	ldd	r25, Z+3	; 0x03
    1306:	0c 5f       	subi	r16, 0xFC	; 252
    1308:	1f 4f       	sbci	r17, 0xFF	; 255
    130a:	06 c0       	rjmp	.+12     	; 0x1318 <vfprintf+0x2b8>
    130c:	60 81       	ld	r22, Z
    130e:	71 81       	ldd	r23, Z+1	; 0x01
    1310:	80 e0       	ldi	r24, 0x00	; 0
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	0e 5f       	subi	r16, 0xFE	; 254
    1316:	1f 4f       	sbci	r17, 0xFF	; 255
    1318:	a3 01       	movw	r20, r6
    131a:	f1 d0       	rcall	.+482    	; 0x14fe <__ultoa_invert>
    131c:	88 2e       	mov	r8, r24
    131e:	86 18       	sub	r8, r6
    1320:	fb 2d       	mov	r31, r11
    1322:	ff 77       	andi	r31, 0x7F	; 127
    1324:	3f 2e       	mov	r3, r31
    1326:	36 fe       	sbrs	r3, 6
    1328:	0d c0       	rjmp	.+26     	; 0x1344 <vfprintf+0x2e4>
    132a:	23 2d       	mov	r18, r3
    132c:	2e 7f       	andi	r18, 0xFE	; 254
    132e:	a2 2e       	mov	r10, r18
    1330:	89 14       	cp	r8, r9
    1332:	58 f4       	brcc	.+22     	; 0x134a <vfprintf+0x2ea>
    1334:	34 fe       	sbrs	r3, 4
    1336:	0b c0       	rjmp	.+22     	; 0x134e <vfprintf+0x2ee>
    1338:	32 fc       	sbrc	r3, 2
    133a:	09 c0       	rjmp	.+18     	; 0x134e <vfprintf+0x2ee>
    133c:	83 2d       	mov	r24, r3
    133e:	8e 7e       	andi	r24, 0xEE	; 238
    1340:	a8 2e       	mov	r10, r24
    1342:	05 c0       	rjmp	.+10     	; 0x134e <vfprintf+0x2ee>
    1344:	b8 2c       	mov	r11, r8
    1346:	a3 2c       	mov	r10, r3
    1348:	03 c0       	rjmp	.+6      	; 0x1350 <vfprintf+0x2f0>
    134a:	b8 2c       	mov	r11, r8
    134c:	01 c0       	rjmp	.+2      	; 0x1350 <vfprintf+0x2f0>
    134e:	b9 2c       	mov	r11, r9
    1350:	a4 fe       	sbrs	r10, 4
    1352:	0f c0       	rjmp	.+30     	; 0x1372 <vfprintf+0x312>
    1354:	fe 01       	movw	r30, r28
    1356:	e8 0d       	add	r30, r8
    1358:	f1 1d       	adc	r31, r1
    135a:	80 81       	ld	r24, Z
    135c:	80 33       	cpi	r24, 0x30	; 48
    135e:	21 f4       	brne	.+8      	; 0x1368 <vfprintf+0x308>
    1360:	9a 2d       	mov	r25, r10
    1362:	99 7e       	andi	r25, 0xE9	; 233
    1364:	a9 2e       	mov	r10, r25
    1366:	09 c0       	rjmp	.+18     	; 0x137a <vfprintf+0x31a>
    1368:	a2 fe       	sbrs	r10, 2
    136a:	06 c0       	rjmp	.+12     	; 0x1378 <vfprintf+0x318>
    136c:	b3 94       	inc	r11
    136e:	b3 94       	inc	r11
    1370:	04 c0       	rjmp	.+8      	; 0x137a <vfprintf+0x31a>
    1372:	8a 2d       	mov	r24, r10
    1374:	86 78       	andi	r24, 0x86	; 134
    1376:	09 f0       	breq	.+2      	; 0x137a <vfprintf+0x31a>
    1378:	b3 94       	inc	r11
    137a:	a3 fc       	sbrc	r10, 3
    137c:	10 c0       	rjmp	.+32     	; 0x139e <vfprintf+0x33e>
    137e:	a0 fe       	sbrs	r10, 0
    1380:	06 c0       	rjmp	.+12     	; 0x138e <vfprintf+0x32e>
    1382:	b2 14       	cp	r11, r2
    1384:	80 f4       	brcc	.+32     	; 0x13a6 <vfprintf+0x346>
    1386:	28 0c       	add	r2, r8
    1388:	92 2c       	mov	r9, r2
    138a:	9b 18       	sub	r9, r11
    138c:	0d c0       	rjmp	.+26     	; 0x13a8 <vfprintf+0x348>
    138e:	b2 14       	cp	r11, r2
    1390:	58 f4       	brcc	.+22     	; 0x13a8 <vfprintf+0x348>
    1392:	b6 01       	movw	r22, r12
    1394:	80 e2       	ldi	r24, 0x20	; 32
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	76 d0       	rcall	.+236    	; 0x1486 <fputc>
    139a:	b3 94       	inc	r11
    139c:	f8 cf       	rjmp	.-16     	; 0x138e <vfprintf+0x32e>
    139e:	b2 14       	cp	r11, r2
    13a0:	18 f4       	brcc	.+6      	; 0x13a8 <vfprintf+0x348>
    13a2:	2b 18       	sub	r2, r11
    13a4:	02 c0       	rjmp	.+4      	; 0x13aa <vfprintf+0x34a>
    13a6:	98 2c       	mov	r9, r8
    13a8:	21 2c       	mov	r2, r1
    13aa:	a4 fe       	sbrs	r10, 4
    13ac:	0f c0       	rjmp	.+30     	; 0x13cc <vfprintf+0x36c>
    13ae:	b6 01       	movw	r22, r12
    13b0:	80 e3       	ldi	r24, 0x30	; 48
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	68 d0       	rcall	.+208    	; 0x1486 <fputc>
    13b6:	a2 fe       	sbrs	r10, 2
    13b8:	16 c0       	rjmp	.+44     	; 0x13e6 <vfprintf+0x386>
    13ba:	a1 fc       	sbrc	r10, 1
    13bc:	03 c0       	rjmp	.+6      	; 0x13c4 <vfprintf+0x364>
    13be:	88 e7       	ldi	r24, 0x78	; 120
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	02 c0       	rjmp	.+4      	; 0x13c8 <vfprintf+0x368>
    13c4:	88 e5       	ldi	r24, 0x58	; 88
    13c6:	90 e0       	ldi	r25, 0x00	; 0
    13c8:	b6 01       	movw	r22, r12
    13ca:	0c c0       	rjmp	.+24     	; 0x13e4 <vfprintf+0x384>
    13cc:	8a 2d       	mov	r24, r10
    13ce:	86 78       	andi	r24, 0x86	; 134
    13d0:	51 f0       	breq	.+20     	; 0x13e6 <vfprintf+0x386>
    13d2:	a1 fe       	sbrs	r10, 1
    13d4:	02 c0       	rjmp	.+4      	; 0x13da <vfprintf+0x37a>
    13d6:	8b e2       	ldi	r24, 0x2B	; 43
    13d8:	01 c0       	rjmp	.+2      	; 0x13dc <vfprintf+0x37c>
    13da:	80 e2       	ldi	r24, 0x20	; 32
    13dc:	a7 fc       	sbrc	r10, 7
    13de:	8d e2       	ldi	r24, 0x2D	; 45
    13e0:	b6 01       	movw	r22, r12
    13e2:	90 e0       	ldi	r25, 0x00	; 0
    13e4:	50 d0       	rcall	.+160    	; 0x1486 <fputc>
    13e6:	89 14       	cp	r8, r9
    13e8:	30 f4       	brcc	.+12     	; 0x13f6 <vfprintf+0x396>
    13ea:	b6 01       	movw	r22, r12
    13ec:	80 e3       	ldi	r24, 0x30	; 48
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	4a d0       	rcall	.+148    	; 0x1486 <fputc>
    13f2:	9a 94       	dec	r9
    13f4:	f8 cf       	rjmp	.-16     	; 0x13e6 <vfprintf+0x386>
    13f6:	8a 94       	dec	r8
    13f8:	f3 01       	movw	r30, r6
    13fa:	e8 0d       	add	r30, r8
    13fc:	f1 1d       	adc	r31, r1
    13fe:	80 81       	ld	r24, Z
    1400:	b6 01       	movw	r22, r12
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	40 d0       	rcall	.+128    	; 0x1486 <fputc>
    1406:	81 10       	cpse	r8, r1
    1408:	f6 cf       	rjmp	.-20     	; 0x13f6 <vfprintf+0x396>
    140a:	22 20       	and	r2, r2
    140c:	09 f4       	brne	.+2      	; 0x1410 <vfprintf+0x3b0>
    140e:	4e ce       	rjmp	.-868    	; 0x10ac <vfprintf+0x4c>
    1410:	b6 01       	movw	r22, r12
    1412:	80 e2       	ldi	r24, 0x20	; 32
    1414:	90 e0       	ldi	r25, 0x00	; 0
    1416:	37 d0       	rcall	.+110    	; 0x1486 <fputc>
    1418:	2a 94       	dec	r2
    141a:	f7 cf       	rjmp	.-18     	; 0x140a <vfprintf+0x3aa>
    141c:	f6 01       	movw	r30, r12
    141e:	86 81       	ldd	r24, Z+6	; 0x06
    1420:	97 81       	ldd	r25, Z+7	; 0x07
    1422:	02 c0       	rjmp	.+4      	; 0x1428 <vfprintf+0x3c8>
    1424:	8f ef       	ldi	r24, 0xFF	; 255
    1426:	9f ef       	ldi	r25, 0xFF	; 255
    1428:	2b 96       	adiw	r28, 0x0b	; 11
    142a:	0f b6       	in	r0, 0x3f	; 63
    142c:	f8 94       	cli
    142e:	de bf       	out	0x3e, r29	; 62
    1430:	0f be       	out	0x3f, r0	; 63
    1432:	cd bf       	out	0x3d, r28	; 61
    1434:	df 91       	pop	r29
    1436:	cf 91       	pop	r28
    1438:	1f 91       	pop	r17
    143a:	0f 91       	pop	r16
    143c:	ff 90       	pop	r15
    143e:	ef 90       	pop	r14
    1440:	df 90       	pop	r13
    1442:	cf 90       	pop	r12
    1444:	bf 90       	pop	r11
    1446:	af 90       	pop	r10
    1448:	9f 90       	pop	r9
    144a:	8f 90       	pop	r8
    144c:	7f 90       	pop	r7
    144e:	6f 90       	pop	r6
    1450:	5f 90       	pop	r5
    1452:	4f 90       	pop	r4
    1454:	3f 90       	pop	r3
    1456:	2f 90       	pop	r2
    1458:	08 95       	ret

0000145a <strnlen_P>:
    145a:	fc 01       	movw	r30, r24
    145c:	05 90       	lpm	r0, Z+
    145e:	61 50       	subi	r22, 0x01	; 1
    1460:	70 40       	sbci	r23, 0x00	; 0
    1462:	01 10       	cpse	r0, r1
    1464:	d8 f7       	brcc	.-10     	; 0x145c <strnlen_P+0x2>
    1466:	80 95       	com	r24
    1468:	90 95       	com	r25
    146a:	8e 0f       	add	r24, r30
    146c:	9f 1f       	adc	r25, r31
    146e:	08 95       	ret

00001470 <strnlen>:
    1470:	fc 01       	movw	r30, r24
    1472:	61 50       	subi	r22, 0x01	; 1
    1474:	70 40       	sbci	r23, 0x00	; 0
    1476:	01 90       	ld	r0, Z+
    1478:	01 10       	cpse	r0, r1
    147a:	d8 f7       	brcc	.-10     	; 0x1472 <strnlen+0x2>
    147c:	80 95       	com	r24
    147e:	90 95       	com	r25
    1480:	8e 0f       	add	r24, r30
    1482:	9f 1f       	adc	r25, r31
    1484:	08 95       	ret

00001486 <fputc>:
    1486:	0f 93       	push	r16
    1488:	1f 93       	push	r17
    148a:	cf 93       	push	r28
    148c:	df 93       	push	r29
    148e:	fb 01       	movw	r30, r22
    1490:	23 81       	ldd	r18, Z+3	; 0x03
    1492:	21 fd       	sbrc	r18, 1
    1494:	03 c0       	rjmp	.+6      	; 0x149c <fputc+0x16>
    1496:	8f ef       	ldi	r24, 0xFF	; 255
    1498:	9f ef       	ldi	r25, 0xFF	; 255
    149a:	2c c0       	rjmp	.+88     	; 0x14f4 <fputc+0x6e>
    149c:	22 ff       	sbrs	r18, 2
    149e:	16 c0       	rjmp	.+44     	; 0x14cc <fputc+0x46>
    14a0:	46 81       	ldd	r20, Z+6	; 0x06
    14a2:	57 81       	ldd	r21, Z+7	; 0x07
    14a4:	24 81       	ldd	r18, Z+4	; 0x04
    14a6:	35 81       	ldd	r19, Z+5	; 0x05
    14a8:	42 17       	cp	r20, r18
    14aa:	53 07       	cpc	r21, r19
    14ac:	44 f4       	brge	.+16     	; 0x14be <fputc+0x38>
    14ae:	a0 81       	ld	r26, Z
    14b0:	b1 81       	ldd	r27, Z+1	; 0x01
    14b2:	9d 01       	movw	r18, r26
    14b4:	2f 5f       	subi	r18, 0xFF	; 255
    14b6:	3f 4f       	sbci	r19, 0xFF	; 255
    14b8:	31 83       	std	Z+1, r19	; 0x01
    14ba:	20 83       	st	Z, r18
    14bc:	8c 93       	st	X, r24
    14be:	26 81       	ldd	r18, Z+6	; 0x06
    14c0:	37 81       	ldd	r19, Z+7	; 0x07
    14c2:	2f 5f       	subi	r18, 0xFF	; 255
    14c4:	3f 4f       	sbci	r19, 0xFF	; 255
    14c6:	37 83       	std	Z+7, r19	; 0x07
    14c8:	26 83       	std	Z+6, r18	; 0x06
    14ca:	14 c0       	rjmp	.+40     	; 0x14f4 <fputc+0x6e>
    14cc:	8b 01       	movw	r16, r22
    14ce:	ec 01       	movw	r28, r24
    14d0:	fb 01       	movw	r30, r22
    14d2:	00 84       	ldd	r0, Z+8	; 0x08
    14d4:	f1 85       	ldd	r31, Z+9	; 0x09
    14d6:	e0 2d       	mov	r30, r0
    14d8:	19 95       	eicall
    14da:	89 2b       	or	r24, r25
    14dc:	e1 f6       	brne	.-72     	; 0x1496 <fputc+0x10>
    14de:	d8 01       	movw	r26, r16
    14e0:	16 96       	adiw	r26, 0x06	; 6
    14e2:	8d 91       	ld	r24, X+
    14e4:	9c 91       	ld	r25, X
    14e6:	17 97       	sbiw	r26, 0x07	; 7
    14e8:	01 96       	adiw	r24, 0x01	; 1
    14ea:	17 96       	adiw	r26, 0x07	; 7
    14ec:	9c 93       	st	X, r25
    14ee:	8e 93       	st	-X, r24
    14f0:	16 97       	sbiw	r26, 0x06	; 6
    14f2:	ce 01       	movw	r24, r28
    14f4:	df 91       	pop	r29
    14f6:	cf 91       	pop	r28
    14f8:	1f 91       	pop	r17
    14fa:	0f 91       	pop	r16
    14fc:	08 95       	ret

000014fe <__ultoa_invert>:
    14fe:	fa 01       	movw	r30, r20
    1500:	aa 27       	eor	r26, r26
    1502:	28 30       	cpi	r18, 0x08	; 8
    1504:	51 f1       	breq	.+84     	; 0x155a <__ultoa_invert+0x5c>
    1506:	20 31       	cpi	r18, 0x10	; 16
    1508:	81 f1       	breq	.+96     	; 0x156a <__ultoa_invert+0x6c>
    150a:	e8 94       	clt
    150c:	6f 93       	push	r22
    150e:	6e 7f       	andi	r22, 0xFE	; 254
    1510:	6e 5f       	subi	r22, 0xFE	; 254
    1512:	7f 4f       	sbci	r23, 0xFF	; 255
    1514:	8f 4f       	sbci	r24, 0xFF	; 255
    1516:	9f 4f       	sbci	r25, 0xFF	; 255
    1518:	af 4f       	sbci	r26, 0xFF	; 255
    151a:	b1 e0       	ldi	r27, 0x01	; 1
    151c:	3e d0       	rcall	.+124    	; 0x159a <__ultoa_invert+0x9c>
    151e:	b4 e0       	ldi	r27, 0x04	; 4
    1520:	3c d0       	rcall	.+120    	; 0x159a <__ultoa_invert+0x9c>
    1522:	67 0f       	add	r22, r23
    1524:	78 1f       	adc	r23, r24
    1526:	89 1f       	adc	r24, r25
    1528:	9a 1f       	adc	r25, r26
    152a:	a1 1d       	adc	r26, r1
    152c:	68 0f       	add	r22, r24
    152e:	79 1f       	adc	r23, r25
    1530:	8a 1f       	adc	r24, r26
    1532:	91 1d       	adc	r25, r1
    1534:	a1 1d       	adc	r26, r1
    1536:	6a 0f       	add	r22, r26
    1538:	71 1d       	adc	r23, r1
    153a:	81 1d       	adc	r24, r1
    153c:	91 1d       	adc	r25, r1
    153e:	a1 1d       	adc	r26, r1
    1540:	20 d0       	rcall	.+64     	; 0x1582 <__ultoa_invert+0x84>
    1542:	09 f4       	brne	.+2      	; 0x1546 <__ultoa_invert+0x48>
    1544:	68 94       	set
    1546:	3f 91       	pop	r19
    1548:	2a e0       	ldi	r18, 0x0A	; 10
    154a:	26 9f       	mul	r18, r22
    154c:	11 24       	eor	r1, r1
    154e:	30 19       	sub	r19, r0
    1550:	30 5d       	subi	r19, 0xD0	; 208
    1552:	31 93       	st	Z+, r19
    1554:	de f6       	brtc	.-74     	; 0x150c <__ultoa_invert+0xe>
    1556:	cf 01       	movw	r24, r30
    1558:	08 95       	ret
    155a:	46 2f       	mov	r20, r22
    155c:	47 70       	andi	r20, 0x07	; 7
    155e:	40 5d       	subi	r20, 0xD0	; 208
    1560:	41 93       	st	Z+, r20
    1562:	b3 e0       	ldi	r27, 0x03	; 3
    1564:	0f d0       	rcall	.+30     	; 0x1584 <__ultoa_invert+0x86>
    1566:	c9 f7       	brne	.-14     	; 0x155a <__ultoa_invert+0x5c>
    1568:	f6 cf       	rjmp	.-20     	; 0x1556 <__ultoa_invert+0x58>
    156a:	46 2f       	mov	r20, r22
    156c:	4f 70       	andi	r20, 0x0F	; 15
    156e:	40 5d       	subi	r20, 0xD0	; 208
    1570:	4a 33       	cpi	r20, 0x3A	; 58
    1572:	18 f0       	brcs	.+6      	; 0x157a <__ultoa_invert+0x7c>
    1574:	49 5d       	subi	r20, 0xD9	; 217
    1576:	31 fd       	sbrc	r19, 1
    1578:	40 52       	subi	r20, 0x20	; 32
    157a:	41 93       	st	Z+, r20
    157c:	02 d0       	rcall	.+4      	; 0x1582 <__ultoa_invert+0x84>
    157e:	a9 f7       	brne	.-22     	; 0x156a <__ultoa_invert+0x6c>
    1580:	ea cf       	rjmp	.-44     	; 0x1556 <__ultoa_invert+0x58>
    1582:	b4 e0       	ldi	r27, 0x04	; 4
    1584:	a6 95       	lsr	r26
    1586:	97 95       	ror	r25
    1588:	87 95       	ror	r24
    158a:	77 95       	ror	r23
    158c:	67 95       	ror	r22
    158e:	ba 95       	dec	r27
    1590:	c9 f7       	brne	.-14     	; 0x1584 <__ultoa_invert+0x86>
    1592:	00 97       	sbiw	r24, 0x00	; 0
    1594:	61 05       	cpc	r22, r1
    1596:	71 05       	cpc	r23, r1
    1598:	08 95       	ret
    159a:	9b 01       	movw	r18, r22
    159c:	ac 01       	movw	r20, r24
    159e:	0a 2e       	mov	r0, r26
    15a0:	06 94       	lsr	r0
    15a2:	57 95       	ror	r21
    15a4:	47 95       	ror	r20
    15a6:	37 95       	ror	r19
    15a8:	27 95       	ror	r18
    15aa:	ba 95       	dec	r27
    15ac:	c9 f7       	brne	.-14     	; 0x15a0 <__ultoa_invert+0xa2>
    15ae:	62 0f       	add	r22, r18
    15b0:	73 1f       	adc	r23, r19
    15b2:	84 1f       	adc	r24, r20
    15b4:	95 1f       	adc	r25, r21
    15b6:	a0 1d       	adc	r26, r0
    15b8:	08 95       	ret

000015ba <__divmodsi4>:
    15ba:	05 2e       	mov	r0, r21
    15bc:	97 fb       	bst	r25, 7
    15be:	16 f4       	brtc	.+4      	; 0x15c4 <__divmodsi4+0xa>
    15c0:	00 94       	com	r0
    15c2:	0f d0       	rcall	.+30     	; 0x15e2 <__negsi2>
    15c4:	57 fd       	sbrc	r21, 7
    15c6:	05 d0       	rcall	.+10     	; 0x15d2 <__divmodsi4_neg2>
    15c8:	4f db       	rcall	.-2402   	; 0xc68 <__udivmodsi4>
    15ca:	07 fc       	sbrc	r0, 7
    15cc:	02 d0       	rcall	.+4      	; 0x15d2 <__divmodsi4_neg2>
    15ce:	46 f4       	brtc	.+16     	; 0x15e0 <__divmodsi4_exit>
    15d0:	08 c0       	rjmp	.+16     	; 0x15e2 <__negsi2>

000015d2 <__divmodsi4_neg2>:
    15d2:	50 95       	com	r21
    15d4:	40 95       	com	r20
    15d6:	30 95       	com	r19
    15d8:	21 95       	neg	r18
    15da:	3f 4f       	sbci	r19, 0xFF	; 255
    15dc:	4f 4f       	sbci	r20, 0xFF	; 255
    15de:	5f 4f       	sbci	r21, 0xFF	; 255

000015e0 <__divmodsi4_exit>:
    15e0:	08 95       	ret

000015e2 <__negsi2>:
    15e2:	90 95       	com	r25
    15e4:	80 95       	com	r24
    15e6:	70 95       	com	r23
    15e8:	61 95       	neg	r22
    15ea:	7f 4f       	sbci	r23, 0xFF	; 255
    15ec:	8f 4f       	sbci	r24, 0xFF	; 255
    15ee:	9f 4f       	sbci	r25, 0xFF	; 255
    15f0:	08 95       	ret

000015f2 <__muluhisi3>:
    15f2:	0f d0       	rcall	.+30     	; 0x1612 <__umulhisi3>
    15f4:	a5 9f       	mul	r26, r21
    15f6:	90 0d       	add	r25, r0
    15f8:	b4 9f       	mul	r27, r20
    15fa:	90 0d       	add	r25, r0
    15fc:	a4 9f       	mul	r26, r20
    15fe:	80 0d       	add	r24, r0
    1600:	91 1d       	adc	r25, r1
    1602:	11 24       	eor	r1, r1
    1604:	08 95       	ret

00001606 <__mulshisi3>:
    1606:	b7 ff       	sbrs	r27, 7
    1608:	f4 cf       	rjmp	.-24     	; 0x15f2 <__muluhisi3>

0000160a <__mulohisi3>:
    160a:	f3 df       	rcall	.-26     	; 0x15f2 <__muluhisi3>
    160c:	82 1b       	sub	r24, r18
    160e:	93 0b       	sbc	r25, r19
    1610:	08 95       	ret

00001612 <__umulhisi3>:
    1612:	a2 9f       	mul	r26, r18
    1614:	b0 01       	movw	r22, r0
    1616:	b3 9f       	mul	r27, r19
    1618:	c0 01       	movw	r24, r0
    161a:	a3 9f       	mul	r26, r19
    161c:	70 0d       	add	r23, r0
    161e:	81 1d       	adc	r24, r1
    1620:	11 24       	eor	r1, r1
    1622:	91 1d       	adc	r25, r1
    1624:	b2 9f       	mul	r27, r18
    1626:	70 0d       	add	r23, r0
    1628:	81 1d       	adc	r24, r1
    162a:	11 24       	eor	r1, r1
    162c:	91 1d       	adc	r25, r1
    162e:	08 95       	ret

00001630 <_exit>:
    1630:	f8 94       	cli

00001632 <__stop_program>:
    1632:	ff cf       	rjmp	.-2      	; 0x1632 <__stop_program>
